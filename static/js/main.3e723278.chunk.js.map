{"version":3,"sources":["components/AppHeader/components/Button/AppHeaderButton.tsx","components/AppHeader/components/AppHeaderControls/DefaultControls/DefaultControls.tsx","redux/editor/types.ts","redux/editor/actions.ts","components/AppHeader/components/AppHeaderControls/AppHeaderControlsContainer.ts","components/AppHeader/components/AppHeaderControls/AppHeaderControls.tsx","components/AppHeader/AppHeader.tsx","components/Navigator/components/BackButton/BackButton.tsx","components/Navigator/components/HomeButton/HomeButton.tsx","redux/notes/types.ts","utils/array.ts","utils/dom.ts","utils/editor.ts","utils/object.ts","utils/string.ts","utils/index.ts","redux/notes/actions.ts","components/Navigator/index.tsx","components/Navigator/Navigator.tsx","components/AppEditor/components/ResizeButton/ResizeButton.tsx","components/AppEditor/components/CloseButton/CloseButton.tsx","components/AppEditor/components/NameInput/NameInput.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicator.tsx","components/AppEditor/layout/Header/Header.tsx","components/AppEditor/layout/Editor/Commands.ts","components/AppEditor/layout/Editor/Shortcuts.ts","components/AppEditor/components/EditorControlButton/EditorControlButton.tsx","components/AppEditor/components/EditorControls/EditorControls.tsx","components/AppEditor/layout/Editor/Editor.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicatorProps.ts","components/AppEditor/AppEditor.tsx","components/AppEditor/index.tsx","components/Notes/components/Group/components/GroupContextMenu/GroupContextMenu.tsx","components/Notes/components/Group/Group.tsx","redux/overlays/types.ts","components/Notes/components/Record/components/RecordContextMenu/RecordContextMenu.tsx","components/Notes/components/Record/Record.tsx","redux/overlays/actions.ts","components/Notes/components/Note/index.ts","components/Notes/components/Note/Note.tsx","components/Notes/index.ts","components/Notes/selectors.ts","components/Notes/Notes.tsx","components/Overlay/template/OverlayHeader/OverlayHeader.tsx","components/Overlay/template/OverlayBody/OverlayBody.tsx","components/Overlay/template/OverlayFooter/OverlayFooter.tsx","components/Overlay/components/DeleteRecordOverlay/DeleteRecordOverlay.tsx","components/Overlay/index.tsx","App.tsx","serviceWorker.ts","redux/notes/groups/types.ts","redux/notes/records/types.ts","data/instructionsContentState.ts","redux/notes/reducers.ts","redux/notes/group/reducer.ts","redux/notes/groups/reducer.ts","redux/notes/records/reducer.ts","redux/settings/editor/types.ts","redux/settings/notes/types.ts","redux/settings/reducers.ts","redux/settings/editor/reducer.ts","redux/settings/notes/reducer.ts","redux/reducers.ts","redux/editor/reducer.ts","redux/overlays/reducer.ts","redux/store.ts","index.tsx"],"names":["AppHeaderButton","props","className","disabled","title","onClick","children","DefaultControls","onCreateNewFolder","onCreateNewFile","NoteEditorStateActions","NoteEditorDefaultState","open","id","undefined","openEditor","dispatch","getState","a","type","REPLACE","payload","connect","AppHeader","AppHeaderControlsContainer","BackButton","HomeButton","NotesActions","first","array","length","last","chunk","size","Error","result","Array","from","Math","ceil","index","i","j","push","swap","sourceIndex","targetIndex","output","source","target","mapReversed","callback","map","getTabbableElements","parentNode","tabbableElements","document","getElementById","querySelectorAll","join","clear","editorState","selection","getSelection","contentState","getCurrentContent","unstyledContentState","getCurrentInlineStyle","reduce","state","style","Modifier","removeInlineStyle","EditorState","setBlockType","deleteProperty","key","generateRandom","characters","randomIndex","floor","random","charAt","isString","value","dom","editor","object","string","openGroup","targetGroupID","OPEN_GROUP","moveToGroup","notes","groups","records","targetGroup","group","record","MOVE_GROUP","MOVE_RECORD","currentGroupID","currentGroup","Boolean","parent","openParentGroup","sourceGroupID","data-open","ResizeButton","event","maximized","CloseButton","forwardRef","ref","inputReference","useRef","useImperativeHandle","getValue","current","placeholder","defaultValue","onChange","autoFocus","ChangeIndicator","data-state","EditorCommand","indicatorState","onResize","onClose","handleKeyCommands","updateEditorState","command","BOLD","RichUtils","toggleInlineStyle","ITALIC","UNDERLINE","STRIKETHROUGH","UNDO","undo","REDO","redo","SAVE","CLEAR","utils","KeycodeMap","9","13","27","66","67","73","83","85","87","97","keyBindingFunction","isControlKey","ctrlKey","isShiftKey","shiftKey","keyCode","getDefaultKeyBinding","EditorControlButton","tabIndex","onMouseDown","data-active","active","EditorControls","handleControlButtonClick","preventDefault","inlineStyles","has","ChangeIndicatorState","useState","rawContentState","createWithContent","convertFromRaw","createEmpty","setEditorState","draftEditorReference","newEditorState","getBlockMap","equals","focusEditor","focus","blurEditor","blur","getPlainText","getRawDraftContentState","convertToRaw","Draft","keyBindingFn","handleKeyCommand","spellCheck","AppEditor","setMaximized","IDLE","setIndicatorState","nameInputReference","editorReference","saveTimeoutReference","save","content","entityMap","blocks","onSave","saveAndClose","autoSave","closeEditor","SAVED","onUpdate","handleDetectedChange","UNSAVED","clearTimeout","setTimeout","onKeyDown","data-maximized","settings","editorSettings","REPLACE_ALL","batch","CREATE_RECORD","createRecord","changedRecord","UPDATE_RECORD","createPortal","GroupContextMenu","stopPropagation","onOpen","groupParent","onUngroup","childrenCount","onRemove","NoteGroup","handleDoubleClick","onDoubleClick","draggable","onDragOver","onDragStart","dataTransfer","setData","JSON","stringify","onDrop","data","parse","getData","sourceId","targetId","holdToDisplay","ungroup","removeGroup","OverlayType","OverlaysActions","RecordContextMenu","NoteRecord","handleClick","parseInt","Number","isNaN","removeRecord","closeOverlay","CLOSE_OVERLAY","ownProps","note","swapGroupChildren","REORDER","swapCurrentGroupChildren","recordID","DELETE_RECORD","overlayProps","OPEN_OVERLAY","groupID","REMOVE_GROUP","meta","requiresConfirmation","getGroupChildrenSelector","createSelector","OverlayHeader","OverlayBody","OverlayFooter","onConfirm","REMOVE_RECORD","overlayTabElements","close","useEffect","overlays","overlay","App","Overlay","window","location","hostname","match","NotesGroupsActions","DEFAULT_RECORDS_STATE","instruction","text","depth","inlineStyleRanges","offset","entityRanges","DEFAULT_NOTES_GROUPS_STATE","root","fakultet","ostalo","combineReducers","action","concat","filter","CREATE_GROUP","EditorSettingsActions","EditorSettingsDefaultState","NotesSettingsActions","NotesSettingsDefaultState","softDelete","notesReducers","settingsReducers","middlewares","thunk","createStore","appReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e723278.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./AppHeaderButton.css\";\n\nimport { AppHeaderButtonProps } from \"./AppHeaderButtonProps\";\n\nexport default function AppHeaderButton(props: AppHeaderButtonProps) {\n  return (\n    <button\n      className=\"AppHeaderButton\"\n      disabled={props.disabled}\n      title={props.title}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { MdCreateNewFolder, MdNote } from \"react-icons/md\";\n\nimport { DefaultControlsProps } from \"./DefaultControlsProps\";\nimport AppHeaderButton from \"../../Button/AppHeaderButton\";\n\nexport default function DefaultControls(props: DefaultControlsProps) {\n  return (\n    <>\n      <AppHeaderButton\n        title=\"Create new folder\"\n        onClick={props.onCreateNewFolder}\n        disabled={true}\n      >\n        <MdCreateNewFolder />\n      </AppHeaderButton>\n      <AppHeaderButton title=\"Create new file\" onClick={props.onCreateNewFile}>\n        <MdNote />\n      </AppHeaderButton>\n    </>\n  );\n}\n","export type NoteEditorState = {\n  open: boolean;\n  id?: string;\n};\n\nexport const NoteEditorDefaultState = {\n  open: false,\n  id: undefined\n};\n\nexport enum NoteEditorStateActions {\n  REPLACE = \"Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Editor/Actions/REPLACE_ALL\"\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { NoteEditorStateActions } from \"./types\";\nimport { NoteRecordID } from \"../notes/records/types\";\n\nexport function closeEditor() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE_ALL,\n      payload: {\n        open: false,\n        id: undefined\n      }\n    });\n  };\n}\n\nexport function openEditor(id?: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE,\n      payload: {\n        open: true,\n        id\n      }\n    });\n  };\n}\n","import { connect } from \"react-redux\";\nimport { AppHeaderControls } from \"./AppHeaderControls\";\nimport { IDispatch } from \"../../../../redux/types\";\nimport { openEditor } from \"../../../../redux/editor/actions\";\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onCreateNewFile: () => dispatch(openEditor()),\n    onCreateNewFolder: () => undefined\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AppHeaderControls);\n","import React from \"react\";\n\nimport \"./AppHeaderControls.css\";\n\nimport { AppHeaderControlsProps } from \"./AppHeaderControlsProps\";\nimport DefaultControls from \"./DefaultControls/DefaultControls\";\n\nexport function AppHeaderControls(props: AppHeaderControlsProps) {\n  return (\n    <div className=\"AppHeaderControls\">\n      <DefaultControls\n        onCreateNewFolder={props.onCreateNewFolder}\n        onCreateNewFile={props.onCreateNewFile}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./AppHeader.css\";\nimport { AppHeaderControlsContainer } from \"./components/AppHeaderControls\";\n\nexport default function AppHeader(props: any) {\n  return (\n    <header id=\"AppHeader\" className=\"AppHeader\">\n      <h1 className=\"AppHeader__title\">Notebook</h1>\n      <AppHeaderControlsContainer />\n    </header>\n  );\n}\n","import React from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\n\nimport \"./BackButton.css\";\n\nexport default function BackButton(props: any) {\n  return (\n    <button className=\"BackButton\" title=\"Go back\" onClick={props.onClick}>\n      <MdArrowBack />\n    </button>\n  );\n}\n","import React from \"react\";\nimport { MdHome } from \"react-icons/md\";\n\nimport \"./HomeButton.css\";\n\nexport function HomeButton(props: any) {\n  return (\n    <button className=\"HomeButton\" onClick={props.onClick} title=\"Back to root\">\n      <MdHome />\n    </button>\n  );\n}\n","import { NotesRecords } from \"./records/types\";\nimport { NotesGroups, NoteGroupID } from \"./groups/types\";\n\nexport type NotesState = {\n  currentGroupID: NoteGroupID;\n  groups: NotesGroups;\n  records: NotesRecords;\n};\n\nexport enum NotesActions {\n  OPEN_GROUP = \"Notes/Actions/Group/OPEN_GROUP\",\n  CREATE_RECORD = \"Notes/Actions/CREATE_RECORD\",\n  REMOVE_RECORD = \"Notes/Actions/REMOVE_RECORD\",\n  UPDATE_RECORD = \"Notes/Actions/UPDATE_RECORD\",\n  CREATE_GROUP = \"Notes/Actions/CREATE_GROUP\",\n  REMOVE_GROUP = \"Notes/Actions/REMOVE_GROUP\",\n  MOVE_GROUP = \"Notes/Actions/MOVE_GROUP\",\n  MOVE_RECORD = \"Notes/Actions/MOVE_RECORD\",\n  REORDER = \"Notes/Actions/REORDER\"\n}\n","type MapCallbackFunction = (element: any, index: number, array: any[]) => void;\n\nexport function first(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[0];\n}\n\nexport function last(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[array.length - 1];\n}\n\nexport function chunk(array: any[] = [], size: number) {\n  if (size < 1) {\n    throw Error(\"Chunk size must be greater than one.\");\n  }\n\n  // const result = Array(, () => []);\n  const result: any[][] = Array.from(\n    { length: Math.ceil(array.length / size) },\n    () => []\n  );\n  let index = 0;\n\n  for (let i = 0; i < result.length; i++) {\n    const chunk = result[i];\n\n    for (let j = 0; j < size; j++) {\n      if (typeof array[index] !== \"undefined\") {\n        chunk.push(array[index++]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function swap(\n  sourceIndex: number,\n  targetIndex: number,\n  array: any[] = []\n) {\n  if (sourceIndex < 0 || targetIndex < 0) {\n    throw Error(\"Swap indexes must be greater than or equal to 0.\");\n  }\n\n  if (sourceIndex >= array.length || targetIndex >= array.length) {\n    throw Error(\"Swap indexes must be less than the size of array.\");\n  }\n\n  const output = Array(array.length);\n\n  const source = array[targetIndex];\n  const target = array[sourceIndex];\n\n  for (let i = 0; i < array.length; i++) {\n    if (i === sourceIndex) {\n      output[i] = source;\n      continue;\n    }\n\n    if (i === targetIndex) {\n      output[i] = target;\n      continue;\n    }\n\n    output[i] = array[i];\n  }\n\n  return output;\n}\n\nexport function mapReversed(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = array.length - 1; i > -1; i--) {\n    output[array.length - i - 1] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n\nexport function map(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = 0; i < array.length; i++) {\n    output[i] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n","export function getTabbableElements(parentNode: HTMLElement | string) {\n  const tabbableElements = [\n    \"a[href]\",\n    \"area[href]\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"[contenteditable]\",\n    '[tabindex]:not([tabindex=\"-1\"])',\n    \"audio[controls]\",\n    \"video[controls]\"\n  ];\n\n  if (parentNode && document) {\n    if (typeof parentNode === \"string\") {\n      return document\n        .getElementById(parentNode)\n        ?.querySelectorAll(tabbableElements.join(\",\"));\n    }\n\n    return parentNode.querySelectorAll(tabbableElements.join(\",\"));\n  }\n}\n","import { EditorState, Modifier, ContentState } from \"draft-js\";\n\nexport function clear(editorState: EditorState): EditorState {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n  const styles = editorState.getCurrentInlineStyle();\n\n  const unstyledContentState = styles.reduce((state, style) => {\n    return Modifier.removeInlineStyle(\n      state as ContentState,\n      selection,\n      style as string\n    );\n  }, contentState);\n\n  return EditorState.push(\n    editorState,\n    Modifier.setBlockType(unstyledContentState, selection, \"unstyled\"),\n    \"change-block-type\"\n  );\n}\n","// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const deleteProperty = (key: string, { [key]: _, ...newObj }) => newObj;\n","export function generateRandom(length: number = 16): string {\n  let output = \"\";\n\n  if (length <= 0) {\n    return output;\n  }\n\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (output.length < length) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    output += characters.charAt(randomIndex);\n  }\n\n  return output;\n}\n\nexport function isString(value: any): boolean {\n  return typeof value === \"string\";\n}\n","import * as array from \"./array\";\nimport * as dom from \"./dom\";\nimport * as editor from \"./editor\";\nimport * as object from \"./object\";\nimport * as string from \"./string\";\n\nexport default {\n  array,\n  dom,\n  editor,\n  object,\n  string\n};\n","import { NoteGroupID, NoteGroup } from \"./groups/types\";\nimport { IDispatch, AppState } from \"../types\";\nimport { NotesActions } from \"./types\";\nimport { NoteRecord, NoteRecordID } from \"./records/types\";\nimport utils from \"../../utils\";\n\n/**\n * Navigate to the group.\n *\n * @param targetGroupID A group id which should be open.\n */\nexport function openGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: targetGroupID\n    });\n  };\n}\n\n/**\n * Navigate to the parent group.\n *\n * @param sourceGroupID A group id whos parent should be opened.\n */\nexport function openParentGroup(sourceGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[sourceGroupID];\n\n    if (group && group.parent) {\n      dispatch({\n        type: NotesActions.OPEN_GROUP,\n        payload: group.parent\n      });\n    }\n  };\n}\n\n/**\n * Navigate to the root group.\n */\nexport function openRootGroup() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: \"root\"\n    });\n  };\n}\n\n/**\n * Insert newly created record in the redux state.\n *\n * @param targetGroupID Group in which new record should be put.\n * @param record NoteRecord object\n */\nexport function createRecord(targetGroupID: NoteGroupID, record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records, groups } = notes;\n    const group = groups[targetGroupID];\n\n    if (!record.id || records[record.id]) {\n      throw Error(`NoteRecord with the ID ${record.id} already exists.`);\n    }\n\n    if (!group) {\n      throw Error(`NoteGroup with the ID ${targetGroupID} is absent`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_RECORD,\n      payload: {\n        ...record,\n        parent: targetGroupID\n      }\n    });\n  };\n}\n\n/**\n * Remove existing record.\n *\n * @param recordID Record id to remove.\n */\nexport function removeRecord(recordID: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n    const record = records[recordID];\n\n    if (!recordID) {\n      throw Error(\"NoteRecord ID is absent.\");\n    }\n\n    if (!record) {\n      throw Error(`NoteRecord with the ID ${recordID} is absent.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_RECORD,\n      payload: record\n    });\n  };\n}\n\n/**\n * Update existing record.\n *\n * @param changedRecord Modified NoteRecord object.\n */\nexport function updateRecord(changedRecord: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    const record = records[changedRecord.id];\n\n    if (!record) {\n      throw Error(`NoteRecord with ID ${changedRecord.id} is absent.`);\n    }\n\n    if (record.parent !== changedRecord.parent) {\n      throw Error(\n        `Changing record location is not permitted. If your intention was moving record to another group, consider using the \"moveToGroup\" function.`\n      );\n    }\n\n    dispatch({\n      type: NotesActions.UPDATE_RECORD,\n      payload: changedRecord\n    });\n  };\n}\n\n/**\n * Create new group.\n *\n * @param targetGroupID Group ID where new group should be inserted.\n * @param group NoteGroup object.\n */\nexport function createNewGroup(targetGroupID: NoteGroupID, group: NoteGroup) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const targetGroup = groups[targetGroupID];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (groups[group.id]) {\n      throw Error(`NoteGroup with ID ${group.id} already exist.`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_GROUP,\n      payload: {\n        ...group,\n        parent: targetGroupID\n      }\n    });\n  };\n}\n\nexport function removeGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[targetGroupID];\n\n    if (!group) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (group.children.length > 0) {\n      throw Error(`NoteGroup must be empty before removing.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_GROUP,\n      payload: group,\n      meta: {\n        requiresConfirmation: true\n      }\n    });\n  };\n}\n\nexport function moveToGroup(\n  targetGroupID: NoteGroupID,\n  id: NoteGroupID | NoteRecordID\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups, records } = notes;\n    const targetGroup = groups[targetGroupID];\n    const group = groups[id];\n    const record = records[id];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (!group && !record) {\n      throw Error(`ID ${id} does not belong to any NoteRecord or NoteGroup.`);\n    }\n\n    if (group) {\n      dispatch({\n        type: NotesActions.MOVE_GROUP,\n        payload: {\n          ...group,\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n\n    if (record) {\n      dispatch({\n        type: NotesActions.MOVE_RECORD,\n        payload: {\n          ...record,\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n  };\n}\n\nexport function ungroup(id: NoteRecordID | NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const currentGroup = groups[currentGroupID];\n\n    if (!currentGroup.parent) {\n      throw Error(`Ungroup is not allowed in root group.`);\n    }\n\n    const targetGroup = groups[currentGroup.parent];\n\n    dispatch(moveToGroup(targetGroup.id, id));\n  };\n}\n\nexport function swapCurrentGroupChildren(\n  sourceIndex: number,\n  targetIndex: number\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const group = groups[currentGroupID];\n\n    dispatch({\n      type: NotesActions.REORDER,\n      payload: {\n        ...group,\n        children: utils.array.swap(sourceIndex, targetIndex, group.children)\n      }\n    });\n  };\n}\n","import { connect } from \"react-redux\";\n\nimport Navigator from \"./Navigator\";\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\nimport { openGroup, openParentGroup } from \"../../redux/notes/actions\";\n\nfunction mapStateToProps(state: AppState) {\n  const { notes } = state;\n  const { currentGroupID, groups } = notes;\n\n  const currentGroup = groups[currentGroupID];\n\n  return {\n    open: Boolean(currentGroup.parent),\n    currentGroupID\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    openGroup: (targetGroupID: NoteGroupID) =>\n      dispatch(openGroup(targetGroupID)),\n    openParentGroup: (currentGroupID: NoteGroupID) =>\n      dispatch(openParentGroup(currentGroupID))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigator);\n","import React from \"react\";\n\nimport \"./Navigator.css\";\nimport BackButton from \"./components/BackButton/BackButton\";\nimport { HomeButton } from \"./components/HomeButton/HomeButton\";\n\nexport default function Navigator(props: any) {\n  function goBack() {\n    if (typeof props.openParentGroup === \"function\") {\n      props.openParentGroup(props.currentGroupID);\n    }\n  }\n\n  function goHome() {\n    if (typeof props.openGroup === \"function\") {\n      props.openGroup(\"root\");\n    }\n  }\n\n  return (\n    <div className=\"Navigator\" data-open={props.open}>\n      <BackButton onClick={goBack} />\n      <HomeButton onClick={goHome} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FiMinimize, FiMaximize } from \"react-icons/fi\";\n\nimport \"./ResizeButton.css\";\n\nimport { ResizeButtonProps } from \"./ResizeButtonProps\";\n\nexport default function ResizeButton(props: ResizeButtonProps) {\n  function handleResize(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(!props.maximized);\n    }\n  }\n\n  return (\n    <button\n      className=\"ResizeButton\"\n      onClick={handleResize}\n      title={`${props.maximized ? \"Minimize\" : \"Maximize\"} Editor`}\n    >\n      {props.maximized ? <FiMinimize /> : <FiMaximize />}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./CloseButton.css\";\n\nimport { MdClose } from \"react-icons/md\";\n\nexport default function CloseButton(props: any) {\n  return (\n    <button\n      className=\"CloseButton\"\n      title=\"Close Editor\"\n      onClick={props.onClick}\n    >\n      <MdClose />\n    </button>\n  );\n}\n","import React, { forwardRef, useRef, useImperativeHandle } from \"react\";\n\nimport \"./NameInput.css\";\n\nimport { NameInputProps } from \"./NameInputProps\";\nimport { NameInputReference } from \"../../AppEditorReferences\";\n\nexport default forwardRef((props: NameInputProps, ref) => {\n  const inputReference = useRef<HTMLInputElement>(null);\n\n  useImperativeHandle(\n    ref,\n    (): NameInputReference => ({\n      getValue: (): string => {\n        if (inputReference.current) {\n          return inputReference.current.value;\n        }\n\n        return \"\";\n      }\n    })\n  );\n\n  return (\n    <input\n      ref={inputReference}\n      className=\"NameInput\"\n      placeholder=\"New title\"\n      type=\"text\"\n      defaultValue={props.defaultValue}\n      onChange={props.onChange}\n      autoFocus={true}\n    />\n  );\n});\n","import React from \"react\";\n\nimport \"./ChangeIndicator.css\";\nimport { ChangeIndicatorProps } from \"./ChangeIndicatorProps\";\n\nexport default function ChangeIndicator(props: ChangeIndicatorProps) {\n  return (\n    <div className=\"ChangeIndicator\">\n      <span className=\"ChangeIndicatorDot\" data-state={props.state} />\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\n\nimport \"./Header.css\";\n\nimport { AppEditorHeaderProps } from \"./HeaderProps\";\nimport ResizeButton from \"../../components/ResizeButton/ResizeButton\";\nimport CloseButton from \"../../components/CloseButton/CloseButton\";\nimport NameInput from \"../../components/NameInput/NameInput\";\nimport ChangeIndicator from \"../../components/ChangeIndicator/ChangeIndicator\";\n\nexport default forwardRef((props: AppEditorHeaderProps, ref: any) => {\n  return (\n    <div className=\"AppEditorHeader\">\n      <NameInput\n        ref={ref}\n        defaultValue={props.defaultValue}\n        onChange={props.onChange}\n      />\n      <ChangeIndicator state={props.indicatorState} />\n      <ResizeButton maximized={props.maximized} onClick={props.onResize} />\n      <CloseButton onClick={props.onClose} />\n    </div>\n  );\n});\n","import { DraftHandleValue, EditorState, RichUtils } from \"draft-js\";\nimport utils from \"../../../../utils\";\n\nexport type UpdateEditorStateCallback = (editorState: EditorState) => void;\n\nexport enum EditorCommand {\n  \"BOLD\" = \"BOLD\",\n  \"ITALIC\" = \"ITALIC\",\n  \"UNDERLINE\" = \"UNDERLINE\",\n  \"STRIKETHROUGH\" = \"STRIKETHROUGH\",\n  \"SAVE\" = \"SAVE\",\n  \"UNDO\" = \"UNDO\",\n  \"REDO\" = \"REDO\",\n  \"CLEAR\" = \"CLEAR\"\n}\n\nexport function handleKeyCommands(\n  updateEditorState: UpdateEditorStateCallback\n) {\n  return (\n    command: EditorCommand,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    switch (command) {\n      case EditorCommand.BOLD:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.BOLD)\n        );\n        return \"handled\";\n      case EditorCommand.ITALIC:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.ITALIC)\n        );\n        return \"handled\";\n      case EditorCommand.UNDERLINE:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.UNDERLINE)\n        );\n        return \"handled\";\n      case EditorCommand.STRIKETHROUGH:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.STRIKETHROUGH)\n        );\n        return \"handled\";\n      case EditorCommand.UNDO:\n        updateEditorState(EditorState.undo(editorState));\n        return \"handled\";\n      case EditorCommand.REDO:\n        updateEditorState(EditorState.redo(editorState));\n        return \"handled\";\n      case EditorCommand.SAVE:\n        return \"handled\";\n      case EditorCommand.CLEAR:\n        updateEditorState(utils.editor.clear(editorState));\n        return \"handled\";\n      default:\n        return \"not-handled\";\n    }\n  };\n}\n","import { getDefaultKeyBinding } from \"draft-js\";\nimport { EditorCommand } from \"./Commands\";\n\nexport interface IKeycodeMap {\n  [keyCode: number]: string;\n}\n\nexport const KeycodeMap: IKeycodeMap = {\n  9: \"tab\",\n  13: \"enter\",\n  27: \"esc\",\n  66: \"b\",\n  67: \"c\",\n  73: \"i\",\n  83: \"s\",\n  85: \"u\",\n  87: \"y\",\n  97: \"z\"\n};\n\nexport function keyBindingFunction(\n  event: React.KeyboardEvent<any>\n): string | null {\n  const isControlKey = event.ctrlKey;\n  const isShiftKey = event.shiftKey;\n  const keyCode = event.keyCode;\n  const key: string | undefined = KeycodeMap[keyCode];\n\n  if (isControlKey && key === \"b\") {\n    return EditorCommand.BOLD;\n  }\n\n  if (isControlKey && key === \"i\") {\n    return EditorCommand.ITALIC;\n  }\n\n  if (isControlKey && key === \"u\") {\n    return EditorCommand.UNDERLINE;\n  }\n\n  // Control + Shift + S has higher priority in actions than Control + S. (FizzBuzz issue)\n  if (isControlKey && isShiftKey && key === \"s\") {\n    return EditorCommand.STRIKETHROUGH;\n  }\n\n  if (isControlKey && key === \"s\") {\n    return EditorCommand.SAVE;\n  }\n\n  if (isControlKey && key === \"z\") {\n    return EditorCommand.UNDO;\n  }\n\n  if (isControlKey && key === \"y\") {\n    return EditorCommand.REDO;\n  }\n\n  if (isControlKey && isShiftKey && key === \"c\") {\n    return EditorCommand.CLEAR;\n  }\n\n  return getDefaultKeyBinding(event);\n}\n","import React from \"react\";\nimport { EditorControlButtonProps } from \"./EditorControlButtonProps\";\n\nimport \"./EditorControlButton.css\";\n\nexport function EditorControlButton(props: EditorControlButtonProps) {\n  function handleClickEvent(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.command);\n    }\n  }\n\n  return (\n    <button\n      className=\"EditorControlButton\"\n      title={props.title}\n      tabIndex={props.tabIndex}\n      onMouseDown={handleClickEvent}\n      data-active={props.active}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport {\n  MdFormatBold,\n  MdFormatItalic,\n  MdFormatUnderlined,\n  MdFormatStrikethrough,\n  MdFormatClear\n} from \"react-icons/md\";\n\nimport \"./EditorControls.css\";\n\nimport { EditorControlButton } from \"../EditorControlButton/EditorControlButton\";\nimport { EditorCommand } from \"../../layout/Editor/Commands\";\nimport { EditorControlsProps } from \"./EditorControlsProps\";\n\nexport default function EditorControls(props: EditorControlsProps) {\n  function handleControlButtonClick(\n    event: React.MouseEvent,\n    command: EditorCommand\n  ) {\n    event.preventDefault();\n\n    if (typeof props.onClick === \"function\") {\n      props.onClick(command);\n    }\n  }\n\n  return (\n    <div className=\"EditorControls\">\n      <EditorControlButton\n        command={EditorCommand.BOLD}\n        onClick={handleControlButtonClick}\n        title=\"Bold\"\n        active={Boolean(props.inlineStyles?.has(\"BOLD\"))}\n        tabIndex={-1}\n      >\n        <MdFormatBold />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.ITALIC}\n        onClick={handleControlButtonClick}\n        title=\"Italic\"\n        active={Boolean(props.inlineStyles?.has(\"ITALIC\"))}\n        tabIndex={-1}\n      >\n        <MdFormatItalic />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.UNDERLINE}\n        onClick={handleControlButtonClick}\n        title=\"Underline\"\n        active={Boolean(props.inlineStyles?.has(\"UNDERLINE\"))}\n        tabIndex={-1}\n      >\n        <MdFormatUnderlined />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.STRIKETHROUGH}\n        onClick={handleControlButtonClick}\n        title=\"Strikethrough\"\n        active={Boolean(props.inlineStyles?.has(\"STRIKETHROUGH\"))}\n        tabIndex={-1}\n      >\n        <MdFormatStrikethrough />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.CLEAR}\n        onClick={handleControlButtonClick}\n        title=\"Clear formatting\"\n        active={false}\n        tabIndex={-1}\n      >\n        <MdFormatClear />\n      </EditorControlButton>\n    </div>\n  );\n}\n","import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef\n} from \"react\";\nimport {\n  EditorState,\n  Editor as DraftEditor,\n  convertToRaw,\n  convertFromRaw\n} from \"draft-js\";\n\nimport \"./Editor.css\";\n\nimport { EditorReference } from \"../../AppEditorReferences\";\nimport { keyBindingFunction } from \"./Shortcuts\";\nimport { handleKeyCommands, EditorCommand } from \"./Commands\";\nimport { EditorProps } from \"./EditorProps\";\nimport EditorControls from \"../../components/EditorControls/EditorControls\";\n\nexport default forwardRef((props: EditorProps, ref: any) => {\n  const [editorState, setEditorState] = useState(\n    props.rawContentState\n      ? EditorState.createWithContent(convertFromRaw(props.rawContentState))\n      : EditorState.createEmpty()\n  );\n\n  const draftEditorReference = useRef<DraftEditor>(null);\n\n  function updateEditorState(newEditorState: EditorState) {\n    setEditorState(newEditorState);\n\n    if (typeof props.onChange === \"function\") {\n      const equalContents = newEditorState\n        .getCurrentContent()\n        .getBlockMap()\n        .equals(editorState.getCurrentContent().getBlockMap());\n\n      if (!equalContents) {\n        props.onChange();\n      }\n    }\n  }\n\n  useImperativeHandle(\n    ref,\n    (): EditorReference => ({\n      getPlainText: () => editorState.getCurrentContent().getPlainText(),\n      getRawDraftContentState: () =>\n        convertToRaw(editorState.getCurrentContent()),\n      focusEditor,\n      blurEditor\n    })\n  );\n\n  function focusEditor(event?: React.MouseEvent) {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.focus();\n    }\n  }\n\n  function blurEditor() {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.blur();\n    }\n  }\n\n  function getCurrentInlineStyle() {\n    return editorState.getCurrentInlineStyle();\n  }\n\n  function handleCommand(command: EditorCommand) {\n    handleKeyCommands(updateEditorState)(command, editorState);\n  }\n\n  return (\n    <div className=\"Editor\">\n      <EditorControls\n        inlineStyles={getCurrentInlineStyle()}\n        onClick={handleCommand}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={focusEditor}>\n        <DraftEditor\n          ref={draftEditorReference}\n          editorState={editorState}\n          onChange={updateEditorState}\n          keyBindingFn={keyBindingFunction}\n          handleKeyCommand={handleKeyCommands(updateEditorState)}\n          spellCheck={props.spellCheck}\n        />\n      </div>\n    </div>\n  );\n});\n","export enum ChangeIndicatorState {\n  IDLE,\n  SAVED,\n  UNSAVED\n}\n\nexport interface ChangeIndicatorProps {\n  state: ChangeIndicatorState;\n}\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport \"./AppEditor.css\";\r\n\r\nimport { AppEditorProps } from \"./AppEditorProps\";\r\nimport { NameInputReference, EditorReference } from \"./AppEditorReferences\";\r\n\r\nimport AppEditorHeader from \"./layout/Header/Header\";\r\nimport Editor from \"./layout/Editor/Editor\";\r\nimport { ChangeIndicatorState } from \"./components/ChangeIndicator/ChangeIndicatorProps\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport utils from \"../../utils\";\r\nimport { KeycodeMap } from \"./layout/Editor/Shortcuts\";\r\n\r\nexport default function AppEditor(props: AppEditorProps) {\r\n  const [maximized, setMaximized] = useState(props.maximized);\r\n  const [indicatorState, setIndicatorState] = useState(\r\n    ChangeIndicatorState.IDLE\r\n  );\r\n\r\n  const nameInputReference = useRef<NameInputReference>();\r\n\r\n  const editorReference = useRef<EditorReference>();\r\n\r\n  const saveTimeoutReference = useRef<NodeJS.Timeout>();\r\n\r\n  function save() {\r\n    const record: NoteRecord = {\r\n      id: props.id || utils.string.generateRandom(),\r\n      parent: props.currentGroupID,\r\n      title: \"\",\r\n      content: { entityMap: {}, blocks: [] }\r\n    };\r\n\r\n    if (nameInputReference.current) {\r\n      record.title = nameInputReference.current.getValue();\r\n    }\r\n\r\n    if (editorReference.current) {\r\n      record.content = editorReference.current.getRawDraftContentState();\r\n    }\r\n\r\n    if (typeof props.onSave === \"function\" && !props.id) {\r\n      props.onSave(props.currentGroupID, record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (typeof props.onUpdate === \"function\" && props.id) {\r\n      props.onUpdate(record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCanvasKeyDown(event: React.KeyboardEvent<any>) {\r\n    const isControlKey = event.ctrlKey;\r\n    const isShiftKey = event.shiftKey;\r\n    const keyCode = event.keyCode;\r\n    const key = KeycodeMap[keyCode];\r\n\r\n    if (isControlKey && !isShiftKey && key === \"s\") {\r\n      event.preventDefault();\r\n\r\n      if (saveTimeoutReference.current) {\r\n        clearTimeout(saveTimeoutReference.current);\r\n      }\r\n\r\n      if (indicatorState === ChangeIndicatorState.UNSAVED) {\r\n        save();\r\n      }\r\n    }\r\n\r\n    if (key === \"esc\") {\r\n      event.preventDefault();\r\n\r\n      closeEditor();\r\n    }\r\n  }\r\n\r\n  function handleDetectedChange() {\r\n    setIndicatorState(ChangeIndicatorState.UNSAVED);\r\n\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (props.autoSave && Boolean(props.id)) {\r\n      saveTimeoutReference.current = setTimeout(() => {\r\n        save();\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  function closeEditor() {\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (typeof props.onClose === \"function\") {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AppEditor\">\r\n      <div className=\"AppEditorWrapper\" onKeyDown={handleCanvasKeyDown}>\r\n        <div className=\"AppEditorCanvas\" data-maximized={maximized}>\r\n          <AppEditorHeader\r\n            maximized={maximized}\r\n            ref={nameInputReference}\r\n            onClose={props.onClose}\r\n            onResize={setMaximized}\r\n            defaultValue={props.title}\r\n            indicatorState={indicatorState}\r\n            onChange={handleDetectedChange}\r\n          />\r\n          <Editor\r\n            ref={editorReference}\r\n            spellCheck={props.spellCheck}\r\n            onChange={handleDetectedChange}\r\n            rawContentState={props.content}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { connect, batch } from \"react-redux\";\r\n\r\nimport { AppEditorContainerProps } from \"./AppEditorProps\";\r\nimport AppEditor from \"./AppEditor\";\r\nimport { AppState, IDispatch } from \"../../redux/types\";\r\nimport { closeEditor, openEditor } from \"../../redux/editor/actions\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\r\nimport { createRecord, updateRecord } from \"../../redux/notes/actions\";\r\n\r\nfunction AppEditorContainer(props: AppEditorContainerProps) {\r\n  return (\r\n    <>\r\n      {props.open &&\r\n        createPortal(\r\n          <AppEditor {...props} />,\r\n          document.getElementById(\"app-editor-root\") as HTMLDivElement\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: AppState) {\r\n  const { editor, settings, notes } = state;\r\n  const { open, id } = editor;\r\n  const { editor: editorSettings } = settings;\r\n  const { currentGroupID, records } = notes;\r\n\r\n  let record;\r\n\r\n  if (id) {\r\n    record = records[id];\r\n  }\r\n\r\n  return {\r\n    open,\r\n    maximized: false,\r\n    autoSave: Boolean(editorSettings.autoSave),\r\n    saveAndClose: Boolean(editorSettings.saveAndClose),\r\n    spellCheck: Boolean(editorSettings.spellCheck),\r\n    currentGroupID,\r\n    ...record\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: IDispatch) {\r\n  return {\r\n    onClose: () => dispatch(closeEditor()),\r\n    onSave: (currentGroupID: NoteGroupID, record: NoteRecord) => {\r\n      batch(() => {\r\n        dispatch(createRecord(currentGroupID, record));\r\n        dispatch(openEditor(record.id));\r\n      });\r\n    },\r\n    onUpdate: (record: NoteRecord) => dispatch(updateRecord(record))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppEditorContainer);\r\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nexport default function GroupContextMenu(props: any) {\n  function open(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onOpen === \"function\") {\n      props.onOpen();\n    }\n  }\n\n  function ungroup(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onUngroup === \"function\") {\n      props.onUngroup(props.id);\n    }\n  }\n\n  function remove(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onRemove === \"function\") {\n      props.onRemove(props.id);\n    }\n  }\n\n  return (\n    <ContextMenu id={props.id}>\n      <MenuItem disabled={false} onClick={open}>\n        Open\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.groupParent)} onClick={ungroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem disabled={Boolean(props.childrenCount)} onClick={remove}>\n        Delete\n      </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\n\nimport \"./Group.css\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport { NoteGroupProps } from \"./GroupProps\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport GroupContextMenu from \"./components/GroupContextMenu/GroupContextMenu\";\n\nexport default function NoteGroup(props: NoteGroupProps) {\n  function allowDrop(event: React.DragEvent<HTMLDivElement>) {\n    event.preventDefault();\n  }\n\n  function dragStart(event: React.DragEvent<HTMLDivElement>) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({ index: props.index, id: props.id })\n    );\n  }\n\n  function handleDrop(event: any) {\n    event.preventDefault();\n\n    const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n    const sourceId = data && data.id;\n    const targetId = props.id;\n\n    if (\n      typeof props.moveToGroup === \"function\" &&\n      sourceId &&\n      sourceId !== targetId\n    ) {\n      props.moveToGroup(targetId, sourceId);\n    }\n  }\n\n  function handleDoubleClick(event: React.MouseEvent) {\n    if (typeof props.onDoubleClick === \"function\") {\n      props.onDoubleClick(props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\" && typeof props.onDoubleClick === \"function\") {\n      event.preventDefault();\n\n      props.onDoubleClick(props.id);\n    }\n  }\n\n  return (\n    <div\n      className=\"NoteGroup\"\n      draggable=\"true\"\n      onDragOver={allowDrop}\n      onDragStart={dragStart}\n      onDrop={handleDrop}\n      onDoubleClick={handleDoubleClick}\n      tabIndex={props.tabIndex}\n      onKeyDown={handleKeyDown}\n    >\n      <ContextMenuTrigger id={props.id} holdToDisplay={-1}>\n        <div className=\"NoteGroupBack\"></div>\n        <div className=\"NoteGroupFront\">\n          <h5 className=\"NoteGroupTitle\">\n            <span>{props.title}</span>\n          </h5>\n        </div>\n      </ContextMenuTrigger>\n      <GroupContextMenu\n        id={props.id}\n        parent={props.parent}\n        groupParent={props.groupParent}\n        onOpen={handleDoubleClick}\n        onUngroup={props.ungroup}\n        onRemove={props.removeGroup}\n        childrenCount={props.childrenCount}\n      />\n    </div>\n  );\n}\n","export enum OverlayType {\n  DELETE_RECORD\n}\n\nexport interface Overlay {\n  id: string;\n  type: OverlayType;\n}\n\nexport type OverlayState = Overlay[];\n\nexport enum OverlaysActions {\n  OPEN_OVERLAY = \"Overlays/Actions/OPEN_OVERLAY\",\n  CLOSE_OVERLAY = \"Overlays/Actions/CLOSE_OVERLAY\"\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nexport default function RecordContextMenu(props: any) {\n  function open(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onOpen === \"function\") {\n      props.onOpen();\n    }\n  }\n\n  function ungroup(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onUngroup === \"function\") {\n      props.onUngroup(props.id);\n    }\n  }\n\n  function remove(event: React.MouseEvent<any>) {\n    event.stopPropagation();\n\n    if (typeof props.onRemove === \"function\") {\n      props.onRemove(props.id);\n    }\n  }\n\n  return (\n    <ContextMenu id={props.id}>\n      <MenuItem disabled={false} onClick={open}>\n        Open\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.groupParent)} onClick={ungroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem disabled={false} onClick={remove}>\n        Delete\n      </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\n\nimport \"./Record.css\";\n\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport RecordContextMenu from \"./components/RecordContextMenu/RecordContextMenu\";\n\nexport default function NoteRecord(props: any) {\n  function allowDrop(event: React.DragEvent<HTMLDivElement>) {\n    event.preventDefault();\n  }\n\n  function dragStart(event: React.DragEvent<HTMLDivElement>) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({ index: props.index, id: props.id })\n    );\n  }\n\n  function handleDrop(event: any) {\n    event.preventDefault();\n\n    const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n    const sourceIndex = parseInt(data && data.index);\n    const targetIndex = props.index;\n\n    if (\n      typeof props.onDrop === \"function\" &&\n      !Number.isNaN(sourceIndex) &&\n      sourceIndex !== targetIndex\n    ) {\n      props.onDrop(sourceIndex, targetIndex);\n    }\n  }\n\n  function handleClick() {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\" && typeof props.onClick === \"function\") {\n      event.preventDefault();\n\n      props.onClick(props.id);\n    }\n  }\n\n  return (\n    <div\n      className=\"NoteRecord\"\n      draggable=\"true\"\n      onDragOver={allowDrop}\n      onDragStart={dragStart}\n      onDrop={handleDrop}\n      onClick={handleClick}\n      tabIndex={props.tabIndex}\n      onKeyDown={handleKeyDown}\n    >\n      <ContextMenuTrigger id={props.id} holdToDisplay={-1}>\n        <div className=\"NoteRecordCard\">\n          <h4 className=\"NoteRecordTitle\">{props.title}</h4>\n        </div>\n      </ContextMenuTrigger>\n      <RecordContextMenu\n        id={props.id}\n        parent={props.parent}\n        groupParent={props.groupParent}\n        onOpen={handleClick}\n        onUngroup={props.ungroup}\n        onRemove={props.removeRecord}\n      />\n    </div>\n  );\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { OverlaysActions, OverlayType } from \"./types\";\nimport utils from \"../../utils\";\n\nexport function showOverlay(type: OverlayType, overlayProps: any) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.OPEN_OVERLAY,\n      payload: {\n        ...overlayProps,\n        id: utils.string.generateRandom(3),\n        type\n      }\n    });\n  };\n}\n\nexport function closeOverlay(id: string) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.CLOSE_OVERLAY,\n      payload: id\n    });\n  };\n}\n","import { connect } from \"react-redux\";\r\n\r\nimport Note from \"./Note\";\r\n\r\nimport { AppState, IDispatch } from \"../../../../redux/types\";\r\nimport { NoteGroupID } from \"../../../../redux/notes/groups/types\";\r\nimport { openEditor } from \"../../../../redux/editor/actions\";\r\nimport { NoteRecordID } from \"../../../../redux/notes/records/types\";\r\nimport {\r\n  openGroup,\r\n  removeGroup,\r\n  moveToGroup,\r\n  ungroup,\r\n  swapCurrentGroupChildren\r\n} from \"../../../../redux/notes/actions\";\r\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\r\nimport { OverlayType } from \"../../../../redux/overlays/types\";\r\n\r\nfunction mapStateToProps(state: AppState, ownProps: any) {\r\n  const { id, index, tabIndex } = ownProps;\r\n\r\n  const { notes } = state;\r\n  const { records, groups, currentGroupID } = notes;\r\n\r\n  const group = groups[currentGroupID];\r\n  const note = records[id] || groups[id];\r\n\r\n  return {\r\n    index,\r\n    tabIndex,\r\n    ...note,\r\n    groupParent: group.parent\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: IDispatch) {\r\n  return {\r\n    moveToGroup: (targetGroupID: NoteGroupID, id: NoteGroupID | NoteRecordID) =>\r\n      dispatch(moveToGroup(targetGroupID, id)),\r\n    openGroup: (targetGroupID: NoteGroupID) =>\r\n      dispatch(openGroup(targetGroupID)),\r\n    swapGroupChildren: (sourceIndex: number, targetIndex: number) =>\r\n      dispatch(swapCurrentGroupChildren(sourceIndex, targetIndex)),\r\n    openEditor: (recordID: NoteRecordID) => dispatch(openEditor(recordID)),\r\n    removeRecord: (recordID: NoteRecordID) =>\r\n      dispatch(\r\n        showOverlay(OverlayType.DELETE_RECORD, {\r\n          recordID\r\n        })\r\n      ),\r\n    removeGroup: (groupID: NoteGroupID) => dispatch(removeGroup(groupID)),\r\n    ungroup: (id: NoteGroupID | NoteRecordID) => dispatch(ungroup(id))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\r\n","import React from \"react\";\r\n\r\nimport NoteGroup from \"../Group/Group\";\r\nimport NoteRecord from \"../Record/Record\";\r\n\r\nexport default function Note(props: any) {\r\n  return (\r\n    <>\r\n      {props.children ? (\r\n        <NoteGroup\r\n          id={props.id}\r\n          index={props.index}\r\n          title={props.title}\r\n          moveToGroup={props.moveToGroup}\r\n          onDoubleClick={props.openGroup}\r\n          tabIndex={props.tabIndex}\r\n          parent={props.parent}\r\n          groupParent={props.groupParent}\r\n          childrenCount={props.children.length}\r\n          removeGroup={props.removeGroup}\r\n          ungroup={props.ungroup}\r\n        />\r\n      ) : (\r\n        <NoteRecord\r\n          id={props.id}\r\n          index={props.index}\r\n          title={props.title}\r\n          onClick={props.openEditor}\r\n          onDrop={props.swapGroupChildren}\r\n          tabIndex={props.tabIndex}\r\n          moveToGroup={props.moveToGroup}\r\n          parent={props.parent}\r\n          groupParent={props.groupParent}\r\n          removeRecord={props.removeRecord}\r\n          ungroup={props.ungroup}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport Notes from \"./Notes\";\n\nimport { AppState } from \"../../redux/types\";\nimport { getGroupChildren } from \"./selectors\";\n\nconst getGroupChildrenSelector = createSelector(\n  [getGroupChildren],\n  children => children\n);\n\nfunction mapStateToProps(state: AppState) {\n  const { notes } = state;\n  const { currentGroupID } = notes;\n\n  return {\n    children: getGroupChildrenSelector(state, currentGroupID)\n  };\n}\n\nexport default connect(mapStateToProps)(Notes);\n","import { AppState } from \"../../redux/types\";\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\n\nexport function getGroupChildren(state: AppState, id: NoteGroupID) {\n  return state.notes.groups[id].children;\n}\n","import React from \"react\";\n\nimport \"./Notes.css\";\n\nimport utils from \"../../utils\";\n\nimport NoteContainer from \"./components/Note\";\n\nexport default function Notes(props: any) {\n  return (\n    <div className=\"Notes\">\n      {utils.array.map((id: any[], index: number) => {\n        return (\n          <NoteContainer key={id} id={id} index={index} tabIndex={index} />\n        );\n      }, props.children)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MdClose } from \"react-icons/md\";\n\nimport \"./OverlayHeader.css\";\n\nimport { OverlayHeaderProps } from \"./OverlayHeaderProps\";\n\nexport default function OverlayHeader(props: OverlayHeaderProps) {\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.id);\n    }\n  }\n\n  return (\n    <header className=\"OverlayHeader\">\n      <span className=\"OverlayHeaderTitle\">{props.title}</span>\n      <button\n        className=\"OverlayHeaderButton\"\n        onClick={close}\n        tabIndex={props.tabIndex}\n      >\n        <MdClose />\n      </button>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./OverlayBody.css\";\n\nimport OverlayBodyProps from \"./OverlayBodyProps\";\n\nexport default function OverlayBody(props: OverlayBodyProps) {\n  return <div className=\"OverlayBody\">{props.children}</div>;\n}\n","import React from \"react\";\n\nimport \"./OverlayFooter.css\";\n\nimport OverlayFooterProps from \"./OverlayFooterProps\";\n\nexport default function OverlayFooter(props: OverlayFooterProps) {\n  return <footer className=\"OverlayFooter\">{props.children}</footer>;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { connect, batch } from \"react-redux\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport { IDispatch } from \"../../../../redux/types\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { removeRecord } from \"../../../../redux/notes/actions\";\nimport { NoteRecordID } from \"../../../../redux/notes/records/types\";\n\nimport \"./DeleteRecordOverlay.css\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport utils from \"../../../../utils\";\n\nfunction DeleteRecordOverlay(props: any) {\n  let overlayTabElements = useRef<any>([]);\n\n  useEffect(() => {\n    if (overlayTabElements.current) {\n      overlayTabElements.current = utils.dom.getTabbableElements(\n        \"DeleteRecordOverlay\"\n      );\n    }\n\n    return () => {\n      if (overlayTabElements.current) {\n        overlayTabElements.current = [];\n      }\n    };\n  }, []);\n\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.id);\n    }\n  }\n\n  function confirm() {\n    if (typeof props.onConfirm === \"function\") {\n      props.onConfirm(props.recordID, props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode, target } = event;\n    const isShiftKey = event.shiftKey;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"esc\") {\n      close();\n    }\n\n    if (key === \"tab\" && isShiftKey) {\n      if (\n        overlayTabElements &&\n        target === utils.array.first(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.last(overlayTabElements.current).focus();\n      }\n\n      return;\n    }\n\n    if (key === \"tab\") {\n      if (\n        overlayTabElements &&\n        target === utils.array.last(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.first(overlayTabElements.current).focus();\n      }\n    }\n  }\n\n  return (\n    <div\n      id=\"DeleteRecordOverlay\"\n      className=\"DeleteRecordOverlay\"\n      onKeyDown={handleKeyDown}\n    >\n      <OverlayHeader\n        id={props.id}\n        onClose={close}\n        title=\"Delete Note\"\n        tabIndex={0}\n      />\n      <OverlayBody>\n        <p>Are you sure you want to permanently delete this note?</p>\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={confirm} tabIndex={0}>\n          Delete Note\n        </button>\n        <button onClick={close} tabIndex={0}>\n          Keep Note\n        </button>\n      </OverlayFooter>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onConfirm: (recordID: NoteRecordID, id: string) => {\n      batch(() => {\n        dispatch(removeRecord(recordID));\n        dispatch(closeOverlay(id));\n      });\n    },\n    onClose: (id: string) => dispatch(closeOverlay(id))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(DeleteRecordOverlay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\n\nimport \"./OverlayContainer.css\";\n\nimport { AppState } from \"../../redux/types\";\nimport utils from \"../../utils\";\nimport { OverlayType } from \"../../redux/overlays/types\";\n\nimport DeleteRecordOverlay from \"./components/DeleteRecordOverlay/DeleteRecordOverlay\";\n\nfunction OverlayContainer(props: any) {\n  return props.overlays.length\n    ? createPortal(\n        <div className=\"OverlayContainer\">\n          {utils.array.mapReversed((overlay: any) => {\n            switch (overlay.type) {\n              case OverlayType.DELETE_RECORD:\n                return (\n                  <DeleteRecordOverlay\n                    key={overlay.id}\n                    {...props}\n                    {...overlay}\n                  />\n                );\n              default:\n                return null;\n            }\n          }, props.overlays)}\n        </div>,\n        document.getElementById(\"app-overlays-root\") as HTMLDivElement\n      )\n    : null;\n}\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    overlays: state.overlays\n  };\n}\n\nexport default connect(mapStateToProps)(OverlayContainer);\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport NavigatorContainer from \"./components/Navigator\";\nimport AppEditorContainer from \"./components/AppEditor\";\n// import SettingsDrawerContainer from \"./components/SettingsDrawer/SettingsDrawerContainer\";\nimport NotesContainer from \"./components/Notes\";\nimport OverlayContainer from \"./components/Overlay\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <NavigatorContainer />\n      {/* Test component */}\n      <AppEditorContainer />\n      {/* Test component */}\n      {/* <SettingsDrawerContainer /> */}\n      {/* Test component */}\n      <NotesContainer />\n      <OverlayContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export type NoteGroupID = string;\n\nexport interface NoteGroup {\n  id: NoteGroupID;\n  parent?: string;\n  title: string;\n  children: string[];\n}\n\nexport interface NotesGroups {\n  [id: string]: NoteGroup;\n}\n\nexport enum NotesGroupsActions {\n  REPLACE = \"Notes/Groups/Actions/REPLACE\",\n  REPLACE_ALL = \"Notes/Groups/Actions/REPLACE_ALL\"\n}\n\nexport const DEFAULT_NOTES_GROUPS_STATE: NotesGroups = {\n  root: {\n    id: \"root\",\n    parent: undefined,\n    title: \"/\",\n    children: [\"fakultet\", \"ostalo\", \"instruction\"]\n  },\n  fakultet: {\n    id: \"fakultet\",\n    parent: \"root\",\n    title: \"Fakultet\",\n    children: []\n  },\n  ostalo: {\n    id: \"ostalo\",\n    parent: \"root\",\n    title: \"Ostalo\",\n    children: []\n  }\n};\n","import { RawDraftContentState } from \"draft-js\";\nimport { NoteGroupID } from \"../groups/types\";\nimport instructionsContentState from \"../../../data/instructionsContentState\";\n\nexport type NoteRecordID = string;\n\nexport type NoteRecord = {\n  id: NoteRecordID;\n  parent: NoteGroupID;\n  title: string;\n  content: RawDraftContentState;\n};\n\nexport type NotesRecords = {\n  [id: string]: NoteRecord;\n};\n\nexport const DEFAULT_RECORDS_STATE: NotesRecords = {\n  instruction: {\n    id: \"instruction\",\n    parent: \"root\",\n    title: \"INSTRUCTIONS\",\n    content: instructionsContentState\n  }\n};\n","import { RawDraftContentState } from \"draft-js\";\n\nexport default {\n  blocks: [\n    {\n      key: \"8ofdk\",\n      text: \"EDITOR\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 6,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"aemmj\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"35hd4\",\n      text: \"In order to save a note, use shortcut ctrl + s.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2dqfh\",\n      text: \"To close editor, you can simply use escape key. (ESC)\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 48,\n          length: 5,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"e5mv2\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"a71vr\",\n      text: \"Available shortcuts:\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"dhmf5\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"8jlev\",\n      text: \"1. ctrl + b - Bold\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 4,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"5ikho\",\n      text: \"2. ctrl + i  - Italic\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 15,\n          length: 6,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"eacar\",\n      text: \"3. ctrl + u - Underline\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 9,\n          style: \"UNDERLINE\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2h4vl\",\n      text: \"4. ctrl + shift + s - Strikethrough\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 22,\n          length: 13,\n          style: \"STRIKETHROUGH\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cefcc\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"alrtq\",\n      text: \"NOTES\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 5,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cgvgp\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"1jo4c\",\n      text:\n        \"- To move a note or a group into the another group, simply drag that note over the target group and drop.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"bqsbk\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cvojm\",\n      text:\n        \"- To ungroup certain note or group from current group, use right click > ungroup option.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 59,\n          length: 11,\n          style: \"BOLD\"\n        },\n        {\n          offset: 73,\n          length: 8,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    }\n  ],\n  entityMap: {}\n} as RawDraftContentState;\n","import { combineReducers } from \"redux\";\n\nimport recordsReducer from \"./records/reducer\";\nimport groupsReducer from \"./groups/reducer\";\nimport groupReducer from \"./group/reducer\";\n\nexport default combineReducers({\n  currentGroupID: groupReducer,\n  groups: groupsReducer,\n  records: recordsReducer\n});\n","import { NoteGroupID } from \"../groups/types\";\nimport { NotesActions } from \"../types\";\n\nexport default function groupReducer(state: NoteGroupID = \"root\", action: any) {\n  switch (action.type) {\n    case NotesActions.OPEN_GROUP:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { NotesGroups, DEFAULT_NOTES_GROUPS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function groupsReducer(\n  state: NotesGroups = DEFAULT_NOTES_GROUPS_STATE,\n  action: any\n) {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.concat(\n            action.payload.id\n          )\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.CREATE_GROUP:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_GROUP:\n      return {\n        ...utils.object.deleteProperty(action.payload.id, state),\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.MOVE_GROUP:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          parent: action.payload.targetGroupID\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.REORDER:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { NotesRecords, DEFAULT_RECORDS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function recordsReducer(\n  state: NotesRecords = DEFAULT_RECORDS_STATE,\n  action: any\n): NotesRecords {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return utils.object.deleteProperty(action.payload.id, state);\n    case NotesActions.UPDATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          parent: action.payload.targetGroupID\n        }\n      };\n    default:\n      return state;\n  }\n}\n","export type EditorSettingsState = {\n  autoSave?: boolean;\n  saveAndClose?: boolean;\n  spellCheck?: boolean;\n};\n\nexport const EditorSettingsDefaultState: EditorSettingsState = {\n  autoSave: true,\n  saveAndClose: false,\n  spellCheck: false\n};\n\nexport enum EditorSettingsActions {\n  REPLACE = \"Settings/Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Editor/Actions/REPLACE_ALL\"\n}\n","export type NotesSettingState = {\n  softDelete: boolean;\n};\n\nexport const NotesSettingsDefaultState = {\n  softDelete: true\n};\n\nexport enum NotesSettingsActions {\n  REPLACE = \"Settings/Notes/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Notes/Actions/REPLACE_ALL\"\n}\n","import { combineReducers } from \"redux\";\nimport editorSettingsReducer from \"./editor/reducer\";\nimport notesSettingsReducer from \"./notes/reducer\";\n\nexport default combineReducers({\n  editor: editorSettingsReducer,\n  notes: notesSettingsReducer\n});\n","import {\n  EditorSettingsState,\n  EditorSettingsDefaultState,\n  EditorSettingsActions\n} from \"./types\";\n\nexport default function editorSettingsReducer(\n  state: EditorSettingsState = EditorSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case EditorSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case EditorSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  NotesSettingState,\n  NotesSettingsDefaultState,\n  NotesSettingsActions\n} from \"./types\";\n\nexport default function notesSettingsReducer(\n  state: NotesSettingState = NotesSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case NotesSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NotesSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notesReducers from \"./notes/reducers\";\nimport editorReducer from \"./editor/reducer\";\nimport settingsReducers from \"./settings/reducers\";\nimport overlaysReducer from \"./overlays/reducer\";\n\nexport default combineReducers({\n  notes: notesReducers,\n  editor: editorReducer,\n  settings: settingsReducers,\n  overlays: overlaysReducer\n});\n","import {\n  NoteEditorState,\n  NoteEditorDefaultState,\n  NoteEditorStateActions\n} from \"./types\";\n\nexport default function editorReducer(\n  state: NoteEditorState = NoteEditorDefaultState,\n  action: any\n): NoteEditorState {\n  switch (action.type) {\n    case NoteEditorStateActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NoteEditorStateActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { OverlaysActions, OverlayState } from \"./types\";\n\nexport default function overlaysReducer(state: OverlayState = [], action: any) {\n  switch (action.type) {\n    case OverlaysActions.OPEN_OVERLAY:\n      return [...state, action.payload];\n    case OverlaysActions.CLOSE_OVERLAY:\n      return state.filter(({ id }) => id !== action.payload);\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport appReducers from \"./reducers\";\n\nconst middlewares = [thunk];\n\nexport default createStore(\n  appReducers,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLDivElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}