{"version":3,"sources":["components/AppHeader/components/Button/AppHeaderButton.tsx","components/AppHeader/components/AppHeaderControls/DefaultControls/DefaultControls.tsx","redux/editor/types.ts","redux/editor/actions.ts","redux/overlays/types.ts","utils/array.ts","utils/dom.ts","utils/editor.ts","utils/object.ts","utils/string.ts","utils/index.ts","redux/overlays/actions.ts","components/AppHeader/components/AppHeaderControls/AppHeaderControlsContainer.ts","components/AppHeader/components/AppHeaderControls/AppHeaderControls.tsx","components/AppHeader/AppHeader.tsx","components/Navigator/components/BackButton/BackButton.tsx","redux/notes/types.ts","components/Navigator/components/HomeButton/HomeButton.tsx","redux/notes/actions.ts","components/Navigator/index.tsx","components/Navigator/Navigator.tsx","components/AppEditor/components/ResizeButton/ResizeButton.tsx","components/AppEditor/components/CloseButton/CloseButton.tsx","components/AppEditor/components/NameInput/NameInput.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicator.tsx","components/AppEditor/layout/Header/Header.tsx","components/AppEditor/layout/Editor/Commands.ts","components/AppEditor/layout/Editor/Shortcuts.ts","components/AppEditor/components/EditorControlButton/EditorControlButton.tsx","components/AppEditor/components/EditorControls/EditorControls.tsx","components/AppEditor/layout/Editor/Editor.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicatorProps.ts","components/AppEditor/AppEditor.tsx","components/AppEditor/index.tsx","components/Notes/components/Group/components/GroupContextMenu/GroupContextMenu.tsx","components/Notes/components/Group/Group.tsx","components/Notes/components/Record/components/RecordContextMenu/RecordContextMenu.tsx","components/Notes/components/Record/Record.tsx","redux/print/actions.ts","components/Notes/components/Note/index.ts","components/Notes/components/Note/Note.tsx","components/Notes/index.ts","components/Notes/selectors.ts","components/Notes/Notes.tsx","components/Overlay/template/OverlayHeader/OverlayHeader.tsx","components/Overlay/template/OverlayBody/OverlayBody.tsx","components/Overlay/template/OverlayFooter/OverlayFooter.tsx","components/Overlay/components/DeleteRecordOverlay/DeleteRecordOverlay.tsx","components/UI/FormInput/FormInput.tsx","components/Overlay/components/RenameRecordOverlay/RenameRecordOverlay.tsx","components/Overlay/components/CreateGroupOverlay/CreateGroupOverlay.tsx","components/Overlay/components/RenameGroupOverlay/RenameGroupOverlay.tsx","components/Overlay/OverlayMap.ts","components/Overlay/Overlay.tsx","components/Overlay/index.tsx","components/RecordPrint/RecordPrint.tsx","components/RecordPrint/index.tsx","App.tsx","serviceWorker.ts","redux/notes/groups/types.ts","redux/notes/records/types.ts","data/instructionsContentState.ts","redux/notes/reducers.ts","redux/notes/group/reducer.ts","redux/notes/groups/reducer.ts","redux/notes/records/reducer.ts","redux/settings/editor/types.ts","redux/settings/notes/types.ts","redux/settings/reducers.ts","redux/settings/editor/reducer.ts","redux/settings/notes/reducer.ts","redux/reducers.ts","redux/editor/reducer.ts","redux/overlays/reducer.ts","redux/print/reducer.ts","redux/store.ts","index.tsx"],"names":["AppHeaderButton","props","className","disabled","title","onClick","children","DefaultControls","onCreateNewFolder","onCreateNewFile","NoteEditorStateActions","NoteEditorDefaultState","open","id","undefined","openEditor","dispatch","getState","a","type","REPLACE","payload","OverlayType","OverlaysActions","first","array","length","last","chunk","size","Error","result","Array","from","Math","ceil","index","i","j","push","swap","sourceIndex","targetIndex","output","source","target","mapReversed","callback","map","getTabbableElements","parentNode","tabbableElements","document","getElementById","querySelectorAll","join","clear","editorState","selection","getSelection","contentState","getCurrentContent","unstyledContentState","getCurrentInlineStyle","reduce","state","style","Modifier","removeInlineStyle","EditorState","setBlockType","truncate","characterCount","blocks","getBlockMap","truncatedBlocks","count","isTruncated","forEach","block","getLength","truncatedText","getText","slice","ContentState","createFromText","getFirstBlock","createFromBlockArray","deleteProperty","key","generateRandom","characters","randomIndex","floor","random","charAt","isString","value","dom","editor","object","string","showOverlay","OPEN_OVERLAY","utils","closeOverlay","CLOSE_OVERLAY","connect","CREATE_GROUP","AppHeader","AppHeaderControlsContainer","BackButton","NotesActions","HomeButton","openGroup","targetGroupID","OPEN_GROUP","updateRecord","changedRecord","notes","records","record","parent","UPDATE_RECORD","moveToGroup","groups","targetGroup","group","MOVE_GROUP","MOVE_RECORD","currentGroupID","currentGroup","Boolean","openParentGroup","sourceGroupID","data-open","ResizeButton","event","maximized","CloseButton","forwardRef","ref","inputReference","useRef","useImperativeHandle","getValue","current","placeholder","defaultValue","onChange","autoFocus","ChangeIndicator","data-state","EditorCommand","indicatorState","onResize","onClose","handleKeyCommands","updateEditorState","command","BOLD","RichUtils","toggleInlineStyle","ITALIC","UNDERLINE","STRIKETHROUGH","UNDO","undo","REDO","redo","SAVE","CLEAR","KeycodeMap","9","13","27","66","67","73","83","85","87","97","keyBindingFunction","isControlKey","ctrlKey","isShiftKey","shiftKey","keyCode","getDefaultKeyBinding","EditorControlButton","tabIndex","onMouseDown","data-active","active","EditorControls","handleControlButtonClick","preventDefault","inlineStyles","has","ChangeIndicatorState","useState","rawContentState","createWithContent","convertFromRaw","createEmpty","setEditorState","draftEditorReference","newEditorState","equals","focusEditor","focus","blurEditor","blur","getPlainText","getRawDraftContentState","convertToRaw","Draft","keyBindingFn","handleKeyCommand","spellCheck","AppEditor","setMaximized","IDLE","setIndicatorState","nameInputReference","editorReference","saveTimeoutReference","save","content","entityMap","onSave","saveAndClose","autoSave","closeEditor","SAVED","onUpdate","handleDetectedChange","UNSAVED","clearTimeout","setTimeout","onKeyDown","data-maximized","settings","editorSettings","REPLACE_ALL","batch","CREATE_RECORD","createRecord","createPortal","GroupContextMenu","onOpen","divider","onCopy","onCut","onRename","onUngroup","onRemove","NoteGroup","stopPropagation","draggable","onDragOver","onDragStart","dataTransfer","setData","JSON","stringify","onDrop","data","parse","getData","sourceId","targetId","onMoveIn","onDoubleClick","holdToDisplay","currentGroupParent","hasChildren","RecordContextMenu","onPrint","NoteRecord","parseInt","onSwap","Number","isNaN","dangerouslySetInnerHTML","__html","stateToHTML","queuePrintRecords","ids","ownProps","note","groupParent","swapGroupChildren","REORDER","swapCurrentGroupChildren","recordID","removeRecord","DELETE_RECORD","removeGroup","groupID","REMOVE_GROUP","meta","requiresConfirmation","ungroup","renameRecord","RENAME_RECORD","renameGroup","RENAME_GROUP","print","getGroupChildrenSelector","createSelector","OverlayHeader","OverlayBody","OverlayFooter","onConfirm","REMOVE_RECORD","overlayID","name","titleReference","onSubmit","createNewGroup","nameReference","updatedGroup","UPDATE_GROUP","OverlayMap","Map","set","DeleteRecordOverlay","RenameRecordOverlay","CreateGroupOverlay","RenameGroupOverlay","Overlay","overlayTabElements","close","useEffect","React","Children","child","cloneElement","overlays","overlay","OverlayComponent","get","RecordPrint","printHTML","html","clearPrintQueue","console","log","window","titleBeforePrinting","App","location","hostname","match","NotesGroupsActions","DEFAULT_RECORDS_STATE","instruction","text","depth","inlineStyleRanges","offset","entityRanges","DEFAULT_NOTES_GROUPS_STATE","root","fakultet","ostalo","combineReducers","action","concat","filter","EditorSettingsActions","EditorSettingsDefaultState","NotesSettingsActions","NotesSettingsDefaultState","softDelete","notesReducers","settingsReducers","middlewares","thunk","createStore","appReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.490fac66.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./AppHeaderButton.css\";\n\nimport { AppHeaderButtonProps } from \"./AppHeaderButtonProps\";\n\nexport default function AppHeaderButton(props: AppHeaderButtonProps) {\n  return (\n    <button\n      className=\"AppHeaderButton\"\n      disabled={props.disabled}\n      title={props.title}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { MdCreateNewFolder, MdNoteAdd } from \"react-icons/md\";\n\nimport { DefaultControlsProps } from \"./DefaultControlsProps\";\nimport AppHeaderButton from \"../../Button/AppHeaderButton\";\n\nexport default function DefaultControls(props: DefaultControlsProps) {\n  return (\n    <>\n      <AppHeaderButton\n        title=\"Create new group\"\n        onClick={props.onCreateNewFolder}\n      >\n        <MdCreateNewFolder />\n      </AppHeaderButton>\n      <AppHeaderButton\n        title=\"Create new record\"\n        onClick={props.onCreateNewFile}\n      >\n        <MdNoteAdd />\n      </AppHeaderButton>\n    </>\n  );\n}\n","export type NoteEditorState = {\n  open: boolean;\n  id?: string;\n};\n\nexport const NoteEditorDefaultState = {\n  open: false,\n  id: undefined\n};\n\nexport enum NoteEditorStateActions {\n  REPLACE = \"Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Editor/Actions/REPLACE_ALL\"\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { NoteEditorStateActions } from \"./types\";\nimport { NoteRecordID } from \"../notes/records/types\";\n\nexport function closeEditor() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE_ALL,\n      payload: {\n        open: false,\n        id: undefined\n      }\n    });\n  };\n}\n\nexport function openEditor(id?: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE,\n      payload: {\n        open: true,\n        id\n      }\n    });\n  };\n}\n","import { NoteRecordID } from \"../notes/records/types\";\nimport { NoteGroupID } from \"../notes/groups/types\";\n\nexport enum OverlayType {\n  DELETE_RECORD,\n  RENAME_RECORD,\n  CREATE_GROUP,\n  RENAME_GROUP\n}\n\nexport type OverlayID = string;\n\nexport interface Overlay {\n  id: OverlayID;\n  type: OverlayType;\n\n  recordID?: NoteRecordID;\n  groupID?: NoteGroupID;\n}\n\nexport type OverlayState = Overlay[];\n\nexport enum OverlaysActions {\n  OPEN_OVERLAY = \"Overlays/Actions/OPEN_OVERLAY\",\n  CLOSE_OVERLAY = \"Overlays/Actions/CLOSE_OVERLAY\"\n}\n","type MapCallbackFunction = (element: any, index: number, array: any[]) => void;\n\nexport function first(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[0];\n}\n\nexport function last(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[array.length - 1];\n}\n\nexport function chunk(array: any[] = [], size: number) {\n  if (size < 1) {\n    throw Error(\"Chunk size must be greater than one.\");\n  }\n\n  // const result = Array(, () => []);\n  const result: any[][] = Array.from(\n    { length: Math.ceil(array.length / size) },\n    () => []\n  );\n  let index = 0;\n\n  for (let i = 0; i < result.length; i++) {\n    const chunk = result[i];\n\n    for (let j = 0; j < size; j++) {\n      if (typeof array[index] !== \"undefined\") {\n        chunk.push(array[index++]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function swap(\n  sourceIndex: number,\n  targetIndex: number,\n  array: any[] = []\n) {\n  if (sourceIndex < 0 || targetIndex < 0) {\n    throw Error(\"Swap indexes must be greater than or equal to 0.\");\n  }\n\n  if (sourceIndex >= array.length || targetIndex >= array.length) {\n    throw Error(\"Swap indexes must be less than the size of array.\");\n  }\n\n  const output = Array(array.length);\n\n  const source = array[targetIndex];\n  const target = array[sourceIndex];\n\n  for (let i = 0; i < array.length; i++) {\n    if (i === sourceIndex) {\n      output[i] = source;\n      continue;\n    }\n\n    if (i === targetIndex) {\n      output[i] = target;\n      continue;\n    }\n\n    output[i] = array[i];\n  }\n\n  return output;\n}\n\nexport function mapReversed(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = array.length - 1; i > -1; i--) {\n    output[array.length - i - 1] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n\nexport function map(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = 0; i < array.length; i++) {\n    output[i] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n","export function getTabbableElements(parentNode: HTMLElement | string) {\n  const tabbableElements = [\n    \"a[href]\",\n    \"area[href]\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"[contenteditable]\",\n    '[tabindex]:not([tabindex=\"-1\"])',\n    \"audio[controls]\",\n    \"video[controls]\"\n  ];\n\n  if (parentNode && document) {\n    if (typeof parentNode === \"string\") {\n      return document\n        .getElementById(parentNode)\n        ?.querySelectorAll(tabbableElements.join(\",\"));\n    }\n\n    return parentNode.querySelectorAll(tabbableElements.join(\",\"));\n  }\n}\n","import { EditorState, Modifier, ContentState, ContentBlock } from \"draft-js\";\n\nexport function clear(editorState: EditorState): EditorState {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n  const styles = editorState.getCurrentInlineStyle();\n\n  const unstyledContentState = styles.reduce((state, style) => {\n    return Modifier.removeInlineStyle(\n      state as ContentState,\n      selection,\n      style as string\n    );\n  }, contentState);\n\n  return EditorState.push(\n    editorState,\n    Modifier.setBlockType(unstyledContentState, selection, \"unstyled\"),\n    \"change-block-type\"\n  );\n}\n\nexport function truncate(\n  contentState: ContentState,\n  characterCount: number\n): ContentState {\n  const blocks = contentState.getBlockMap();\n  const truncatedBlocks: ContentBlock[] = [];\n\n  let count = 0;\n  let isTruncated = false;\n\n  blocks.forEach(block => {\n    if (!isTruncated && block) {\n      const length = block.getLength();\n      if (count + length > characterCount) {\n        isTruncated = true;\n        const truncatedText = block.getText().slice(0, characterCount - count);\n        const state = ContentState.createFromText(`${truncatedText}...`);\n        truncatedBlocks.push(state.getFirstBlock());\n      } else {\n        truncatedBlocks.push(block);\n      }\n      count += length + 1;\n    }\n  });\n\n  if (isTruncated) {\n    return ContentState.createFromBlockArray(truncatedBlocks);\n  }\n\n  return contentState;\n}\n","// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const deleteProperty = (key: string, { [key]: _, ...newObj }) => newObj;\n","export function generateRandom(length: number = 16): string {\n  let output = \"\";\n\n  if (length <= 0) {\n    return output;\n  }\n\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (output.length < length) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    output += characters.charAt(randomIndex);\n  }\n\n  return output;\n}\n\nexport function isString(value: any): boolean {\n  return typeof value === \"string\";\n}\n","import * as array from \"./array\";\nimport * as dom from \"./dom\";\nimport * as editor from \"./editor\";\nimport * as object from \"./object\";\nimport * as string from \"./string\";\n\nexport default {\n  array,\n  dom,\n  editor,\n  object,\n  string\n};\n","import { IDispatch, AppState } from \"../types\";\nimport { OverlaysActions, OverlayType } from \"./types\";\nimport utils from \"../../utils\";\n\nexport function showOverlay(type: OverlayType, props?: any) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.OPEN_OVERLAY,\n      payload: {\n        ...props,\n        id: utils.string.generateRandom(3),\n        type\n      }\n    });\n  };\n}\n\nexport function closeOverlay(id: string) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.CLOSE_OVERLAY,\n      payload: id\n    });\n  };\n}\n","import { connect } from \"react-redux\";\nimport { AppHeaderControls } from \"./AppHeaderControls\";\nimport { IDispatch } from \"../../../../redux/types\";\nimport { openEditor } from \"../../../../redux/editor/actions\";\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\nimport { OverlayType } from \"../../../../redux/overlays/types\";\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onCreateNewFile: () => dispatch(openEditor()),\n    onCreateNewFolder: () => dispatch(showOverlay(OverlayType.CREATE_GROUP))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AppHeaderControls);\n","import React from \"react\";\n\nimport \"./AppHeaderControls.css\";\n\nimport { AppHeaderControlsProps } from \"./AppHeaderControlsProps\";\nimport DefaultControls from \"./DefaultControls/DefaultControls\";\n\nexport function AppHeaderControls(props: AppHeaderControlsProps) {\n  return (\n    <div className=\"AppHeaderControls\">\n      <DefaultControls\n        onCreateNewFolder={props.onCreateNewFolder}\n        onCreateNewFile={props.onCreateNewFile}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./AppHeader.css\";\nimport { AppHeaderControlsContainer } from \"./components/AppHeaderControls\";\n\nexport default function AppHeader(props: any) {\n  return (\n    <header id=\"AppHeader\" className=\"AppHeader\">\n      <h1 className=\"AppHeader__title\">Notebook</h1>\n      <AppHeaderControlsContainer />\n    </header>\n  );\n}\n","import React from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\n\nimport \"./BackButton.css\";\n\nexport default function BackButton(props: any) {\n  return (\n    <button className=\"BackButton\" title=\"Go back\" onClick={props.onClick}>\n      <MdArrowBack />\n    </button>\n  );\n}\n","import { NotesRecords } from \"./records/types\";\nimport { NotesGroups, NoteGroupID } from \"./groups/types\";\n\nexport type NotesState = {\n  currentGroupID: NoteGroupID;\n  groups: NotesGroups;\n  records: NotesRecords;\n};\n\nexport enum NotesActions {\n  OPEN_GROUP = \"Notes/Actions/Group/OPEN_GROUP\",\n  CREATE_RECORD = \"Notes/Actions/CREATE_RECORD\",\n  REMOVE_RECORD = \"Notes/Actions/REMOVE_RECORD\",\n  UPDATE_RECORD = \"Notes/Actions/UPDATE_RECORD\",\n  CREATE_GROUP = \"Notes/Actions/CREATE_GROUP\",\n  UPDATE_GROUP = \"Notes/Actions/UPDATE_GROUP\",\n  REMOVE_GROUP = \"Notes/Actions/REMOVE_GROUP\",\n  MOVE_GROUP = \"Notes/Actions/MOVE_GROUP\",\n  MOVE_RECORD = \"Notes/Actions/MOVE_RECORD\",\n  REORDER = \"Notes/Actions/REORDER\"\n}\n","import React from \"react\";\nimport { MdHome } from \"react-icons/md\";\n\nimport \"./HomeButton.css\";\n\nexport function HomeButton(props: any) {\n  return (\n    <button className=\"HomeButton\" onClick={props.onClick} title=\"Back to root\">\n      <MdHome />\n    </button>\n  );\n}\n","import { NoteGroupID, NoteGroup } from \"./groups/types\";\nimport { IDispatch, AppState } from \"../types\";\nimport { NotesActions } from \"./types\";\nimport { NoteRecord, NoteRecordID } from \"./records/types\";\nimport utils from \"../../utils\";\n\n/**\n * Navigate to the group.\n *\n * @param targetGroupID A group id which should be open.\n */\nexport function openGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: targetGroupID\n    });\n  };\n}\n\n/**\n * Navigate to the parent group.\n *\n * @param sourceGroupID A group id whos parent should be opened.\n */\nexport function openParentGroup(sourceGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[sourceGroupID];\n\n    if (group && group.parent) {\n      dispatch({\n        type: NotesActions.OPEN_GROUP,\n        payload: group.parent\n      });\n    }\n  };\n}\n\n/**\n * Navigate to the root group.\n */\nexport function openRootGroup() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: \"root\"\n    });\n  };\n}\n\n/**\n * Insert newly created record in the redux state.\n *\n * @param targetGroupID Group in which new record should be put.\n * @param record NoteRecord object\n */\nexport function createRecord(targetGroupID: NoteGroupID, record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records, groups } = notes;\n    const group = groups[targetGroupID];\n\n    if (!record.id || records[record.id]) {\n      throw Error(`NoteRecord with the ID ${record.id} already exists.`);\n    }\n\n    if (!group) {\n      throw Error(`NoteGroup with the ID ${targetGroupID} is absent`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_RECORD,\n      payload: {\n        ...record,\n        parent: targetGroupID\n      }\n    });\n  };\n}\n\n/**\n * Remove existing record.\n *\n * @param recordID Record id to remove.\n */\nexport function removeRecord(recordID: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n    const record = records[recordID];\n\n    if (!recordID) {\n      throw Error(\"NoteRecord ID is absent.\");\n    }\n\n    if (!record) {\n      throw Error(`NoteRecord with the ID ${recordID} is absent.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_RECORD,\n      payload: record\n    });\n  };\n}\n\n/**\n * Update existing record.\n *\n * @param changedRecord Modified NoteRecord object.\n */\nexport function updateRecord(changedRecord: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    const record = records[changedRecord.id];\n\n    if (!record) {\n      throw Error(`NoteRecord with ID ${changedRecord.id} is absent.`);\n    }\n\n    if (record.parent !== changedRecord.parent) {\n      throw Error(\n        `Changing record location is not permitted. If your intention was moving record to another group, consider using the \"moveToGroup\" function.`\n      );\n    }\n\n    dispatch({\n      type: NotesActions.UPDATE_RECORD,\n      payload: changedRecord\n    });\n  };\n}\n\n/**\n * Create new group.\n *\n * @param targetGroupID Group ID where new group should be inserted.\n * @param group NoteGroup object.\n */\nexport function createNewGroup(targetGroupID: NoteGroupID, group: NoteGroup) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const targetGroup = groups[targetGroupID];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (groups[group.id]) {\n      throw Error(`NoteGroup with ID ${group.id} already exist.`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_GROUP,\n      payload: {\n        ...group,\n        parent: targetGroupID\n      }\n    });\n  };\n}\n\nexport function updateGroup(updatedGroup: NoteGroup) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n    const group = groups[updatedGroup.id];\n\n    if (!group) {\n      throw Error(`NoteGroup with ID ${updatedGroup.id} is absent.`);\n    }\n\n    dispatch({\n      type: NotesActions.UPDATE_GROUP,\n      payload: {\n        ...updatedGroup,\n        id: group.id,\n        children: group.children\n      }\n    });\n  };\n}\n\nexport function removeGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[targetGroupID];\n\n    if (!group) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (group.children.length > 0) {\n      throw Error(`NoteGroup must be empty before removing.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_GROUP,\n      payload: group,\n      meta: {\n        requiresConfirmation: true\n      }\n    });\n  };\n}\n\nexport function moveToGroup(\n  targetGroupID: NoteGroupID,\n  id: NoteGroupID | NoteRecordID\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups, records } = notes;\n    const targetGroup = groups[targetGroupID];\n    const group = groups[id];\n    const record = records[id];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (!group && !record) {\n      throw Error(`ID ${id} does not belong to any NoteRecord or NoteGroup.`);\n    }\n\n    if (group) {\n      dispatch({\n        type: NotesActions.MOVE_GROUP,\n        payload: {\n          ...group,\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n\n    if (record) {\n      dispatch({\n        type: NotesActions.MOVE_RECORD,\n        payload: {\n          ...record,\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n  };\n}\n\nexport function ungroup(id: NoteRecordID | NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const currentGroup = groups[currentGroupID];\n\n    if (!currentGroup.parent) {\n      throw Error(`Ungroup is not allowed in root group.`);\n    }\n\n    const targetGroup = groups[currentGroup.parent];\n\n    dispatch(moveToGroup(targetGroup.id, id));\n  };\n}\n\nexport function swapCurrentGroupChildren(\n  sourceIndex: number,\n  targetIndex: number\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const group = groups[currentGroupID];\n\n    dispatch({\n      type: NotesActions.REORDER,\n      payload: {\n        ...group,\n        children: utils.array.swap(sourceIndex, targetIndex, group.children)\n      }\n    });\n  };\n}\n","import { connect } from \"react-redux\";\n\nimport Navigator from \"./Navigator\";\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\nimport { openGroup, openParentGroup } from \"../../redux/notes/actions\";\n\nfunction mapStateToProps(state: AppState) {\n  const { notes } = state;\n  const { currentGroupID, groups } = notes;\n\n  const currentGroup = groups[currentGroupID];\n\n  return {\n    open: Boolean(currentGroup.parent),\n    currentGroupID\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    openGroup: (targetGroupID: NoteGroupID) =>\n      dispatch(openGroup(targetGroupID)),\n    openParentGroup: (currentGroupID: NoteGroupID) =>\n      dispatch(openParentGroup(currentGroupID))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigator);\n","import React from \"react\";\n\nimport \"./Navigator.css\";\nimport BackButton from \"./components/BackButton/BackButton\";\nimport { HomeButton } from \"./components/HomeButton/HomeButton\";\n\nexport default function Navigator(props: any) {\n  function goBack() {\n    if (typeof props.openParentGroup === \"function\") {\n      props.openParentGroup(props.currentGroupID);\n    }\n  }\n\n  function goHome() {\n    if (typeof props.openGroup === \"function\") {\n      props.openGroup(\"root\");\n    }\n  }\n\n  return (\n    <div className=\"Navigator\" data-open={props.open}>\n      <BackButton onClick={goBack} />\n      <HomeButton onClick={goHome} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FiMinimize, FiMaximize } from \"react-icons/fi\";\n\nimport \"./ResizeButton.css\";\n\nimport { ResizeButtonProps } from \"./ResizeButtonProps\";\n\nexport default function ResizeButton(props: ResizeButtonProps) {\n  function handleResize(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(!props.maximized);\n    }\n  }\n\n  return (\n    <button\n      className=\"ResizeButton\"\n      onClick={handleResize}\n      title={`${props.maximized ? \"Minimize\" : \"Maximize\"} Editor`}\n    >\n      {props.maximized ? <FiMinimize /> : <FiMaximize />}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./CloseButton.css\";\n\nimport { MdClose } from \"react-icons/md\";\n\nexport default function CloseButton(props: any) {\n  return (\n    <button\n      className=\"CloseButton\"\n      title=\"Close Editor\"\n      onClick={props.onClick}\n    >\n      <MdClose />\n    </button>\n  );\n}\n","import React, { forwardRef, useRef, useImperativeHandle } from \"react\";\n\nimport \"./NameInput.css\";\n\nimport { NameInputProps } from \"./NameInputProps\";\nimport { NameInputReference } from \"../../AppEditorReferences\";\n\nexport default forwardRef((props: NameInputProps, ref) => {\n  const inputReference = useRef<HTMLInputElement>(null);\n\n  useImperativeHandle(\n    ref,\n    (): NameInputReference => ({\n      getValue: (): string => {\n        if (inputReference.current) {\n          return inputReference.current.value;\n        }\n\n        return \"\";\n      }\n    })\n  );\n\n  return (\n    <input\n      ref={inputReference}\n      className=\"NameInput\"\n      placeholder=\"New title\"\n      type=\"text\"\n      defaultValue={props.defaultValue}\n      onChange={props.onChange}\n      autoFocus={true}\n    />\n  );\n});\n","import React from \"react\";\n\nimport \"./ChangeIndicator.css\";\nimport { ChangeIndicatorProps } from \"./ChangeIndicatorProps\";\n\nexport default function ChangeIndicator(props: ChangeIndicatorProps) {\n  return (\n    <div className=\"ChangeIndicator\">\n      <span className=\"ChangeIndicatorDot\" data-state={props.state} />\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\n\nimport \"./Header.css\";\n\nimport { AppEditorHeaderProps } from \"./HeaderProps\";\nimport ResizeButton from \"../../components/ResizeButton/ResizeButton\";\nimport CloseButton from \"../../components/CloseButton/CloseButton\";\nimport NameInput from \"../../components/NameInput/NameInput\";\nimport ChangeIndicator from \"../../components/ChangeIndicator/ChangeIndicator\";\n\nexport default forwardRef((props: AppEditorHeaderProps, ref: any) => {\n  return (\n    <div className=\"AppEditorHeader\">\n      <NameInput\n        ref={ref}\n        defaultValue={props.defaultValue}\n        onChange={props.onChange}\n      />\n      <ChangeIndicator state={props.indicatorState} />\n      <ResizeButton maximized={props.maximized} onClick={props.onResize} />\n      <CloseButton onClick={props.onClose} />\n    </div>\n  );\n});\n","import { DraftHandleValue, EditorState, RichUtils } from \"draft-js\";\nimport utils from \"../../../../utils\";\n\nexport type UpdateEditorStateCallback = (editorState: EditorState) => void;\n\nexport enum EditorCommand {\n  \"BOLD\" = \"BOLD\",\n  \"ITALIC\" = \"ITALIC\",\n  \"UNDERLINE\" = \"UNDERLINE\",\n  \"STRIKETHROUGH\" = \"STRIKETHROUGH\",\n  \"SAVE\" = \"SAVE\",\n  \"UNDO\" = \"UNDO\",\n  \"REDO\" = \"REDO\",\n  \"CLEAR\" = \"CLEAR\"\n}\n\nexport function handleKeyCommands(\n  updateEditorState: UpdateEditorStateCallback\n) {\n  return (\n    command: EditorCommand,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    switch (command) {\n      case EditorCommand.BOLD:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.BOLD)\n        );\n        return \"handled\";\n      case EditorCommand.ITALIC:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.ITALIC)\n        );\n        return \"handled\";\n      case EditorCommand.UNDERLINE:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.UNDERLINE)\n        );\n        return \"handled\";\n      case EditorCommand.STRIKETHROUGH:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.STRIKETHROUGH)\n        );\n        return \"handled\";\n      case EditorCommand.UNDO:\n        updateEditorState(EditorState.undo(editorState));\n        return \"handled\";\n      case EditorCommand.REDO:\n        updateEditorState(EditorState.redo(editorState));\n        return \"handled\";\n      case EditorCommand.SAVE:\n        return \"handled\";\n      case EditorCommand.CLEAR:\n        updateEditorState(utils.editor.clear(editorState));\n        return \"handled\";\n      default:\n        return \"not-handled\";\n    }\n  };\n}\n","import { getDefaultKeyBinding } from \"draft-js\";\nimport { EditorCommand } from \"./Commands\";\n\nexport interface IKeycodeMap {\n  [keyCode: number]: string;\n}\n\nexport const KeycodeMap: IKeycodeMap = {\n  9: \"tab\",\n  13: \"enter\",\n  27: \"esc\",\n  66: \"b\",\n  67: \"c\",\n  73: \"i\",\n  83: \"s\",\n  85: \"u\",\n  87: \"y\",\n  97: \"z\"\n};\n\nexport function keyBindingFunction(\n  event: React.KeyboardEvent<any>\n): string | null {\n  const isControlKey = event.ctrlKey;\n  const isShiftKey = event.shiftKey;\n  const keyCode = event.keyCode;\n  const key: string | undefined = KeycodeMap[keyCode];\n\n  if (isControlKey && key === \"b\") {\n    return EditorCommand.BOLD;\n  }\n\n  if (isControlKey && key === \"i\") {\n    return EditorCommand.ITALIC;\n  }\n\n  if (isControlKey && key === \"u\") {\n    return EditorCommand.UNDERLINE;\n  }\n\n  // Control + Shift + S has higher priority in actions than Control + S. (FizzBuzz issue)\n  if (isControlKey && isShiftKey && key === \"s\") {\n    return EditorCommand.STRIKETHROUGH;\n  }\n\n  if (isControlKey && key === \"s\") {\n    return EditorCommand.SAVE;\n  }\n\n  if (isControlKey && key === \"z\") {\n    return EditorCommand.UNDO;\n  }\n\n  if (isControlKey && key === \"y\") {\n    return EditorCommand.REDO;\n  }\n\n  if (isControlKey && isShiftKey && key === \"c\") {\n    return EditorCommand.CLEAR;\n  }\n\n  return getDefaultKeyBinding(event);\n}\n","import React from \"react\";\nimport { EditorControlButtonProps } from \"./EditorControlButtonProps\";\n\nimport \"./EditorControlButton.css\";\n\nexport function EditorControlButton(props: EditorControlButtonProps) {\n  function handleClickEvent(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.command);\n    }\n  }\n\n  return (\n    <button\n      className=\"EditorControlButton\"\n      title={props.title}\n      tabIndex={props.tabIndex}\n      onMouseDown={handleClickEvent}\n      data-active={props.active}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport {\n  MdFormatBold,\n  MdFormatItalic,\n  MdFormatUnderlined,\n  MdFormatStrikethrough,\n  MdFormatClear\n} from \"react-icons/md\";\n\nimport \"./EditorControls.css\";\n\nimport { EditorControlButton } from \"../EditorControlButton/EditorControlButton\";\nimport { EditorCommand } from \"../../layout/Editor/Commands\";\nimport { EditorControlsProps } from \"./EditorControlsProps\";\n\nexport default function EditorControls(props: EditorControlsProps) {\n  function handleControlButtonClick(\n    event: React.MouseEvent,\n    command: EditorCommand\n  ) {\n    event.preventDefault();\n\n    if (typeof props.onClick === \"function\") {\n      props.onClick(command);\n    }\n  }\n\n  return (\n    <div className=\"EditorControls\">\n      <EditorControlButton\n        command={EditorCommand.BOLD}\n        onClick={handleControlButtonClick}\n        title=\"Bold\"\n        active={Boolean(props.inlineStyles?.has(\"BOLD\"))}\n        tabIndex={-1}\n      >\n        <MdFormatBold />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.ITALIC}\n        onClick={handleControlButtonClick}\n        title=\"Italic\"\n        active={Boolean(props.inlineStyles?.has(\"ITALIC\"))}\n        tabIndex={-1}\n      >\n        <MdFormatItalic />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.UNDERLINE}\n        onClick={handleControlButtonClick}\n        title=\"Underline\"\n        active={Boolean(props.inlineStyles?.has(\"UNDERLINE\"))}\n        tabIndex={-1}\n      >\n        <MdFormatUnderlined />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.STRIKETHROUGH}\n        onClick={handleControlButtonClick}\n        title=\"Strikethrough\"\n        active={Boolean(props.inlineStyles?.has(\"STRIKETHROUGH\"))}\n        tabIndex={-1}\n      >\n        <MdFormatStrikethrough />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.CLEAR}\n        onClick={handleControlButtonClick}\n        title=\"Clear formatting\"\n        active={false}\n        tabIndex={-1}\n      >\n        <MdFormatClear />\n      </EditorControlButton>\n    </div>\n  );\n}\n","import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef\n} from \"react\";\nimport {\n  EditorState,\n  Editor as DraftEditor,\n  convertToRaw,\n  convertFromRaw\n} from \"draft-js\";\n\nimport \"./Editor.css\";\n\nimport { EditorReference } from \"../../AppEditorReferences\";\nimport { keyBindingFunction } from \"./Shortcuts\";\nimport { handleKeyCommands, EditorCommand } from \"./Commands\";\nimport { EditorProps } from \"./EditorProps\";\nimport EditorControls from \"../../components/EditorControls/EditorControls\";\n\nexport default forwardRef((props: EditorProps, ref: any) => {\n  const [editorState, setEditorState] = useState(\n    props.rawContentState\n      ? EditorState.createWithContent(convertFromRaw(props.rawContentState))\n      : EditorState.createEmpty()\n  );\n\n  const draftEditorReference = useRef<DraftEditor>(null);\n\n  function updateEditorState(newEditorState: EditorState) {\n    setEditorState(newEditorState);\n\n    if (typeof props.onChange === \"function\") {\n      const equalContents = newEditorState\n        .getCurrentContent()\n        .getBlockMap()\n        .equals(editorState.getCurrentContent().getBlockMap());\n\n      if (!equalContents) {\n        props.onChange();\n      }\n    }\n  }\n\n  useImperativeHandle(\n    ref,\n    (): EditorReference => ({\n      getPlainText: () => editorState.getCurrentContent().getPlainText(),\n      getRawDraftContentState: () =>\n        convertToRaw(editorState.getCurrentContent()),\n      focusEditor,\n      blurEditor\n    })\n  );\n\n  function focusEditor(event?: React.MouseEvent) {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.focus();\n    }\n  }\n\n  function blurEditor() {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.blur();\n    }\n  }\n\n  function getCurrentInlineStyle() {\n    return editorState.getCurrentInlineStyle();\n  }\n\n  function handleCommand(command: EditorCommand) {\n    handleKeyCommands(updateEditorState)(command, editorState);\n  }\n\n  return (\n    <div className=\"Editor\">\n      <EditorControls\n        inlineStyles={getCurrentInlineStyle()}\n        onClick={handleCommand}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={focusEditor}>\n        <DraftEditor\n          ref={draftEditorReference}\n          editorState={editorState}\n          onChange={updateEditorState}\n          keyBindingFn={keyBindingFunction}\n          handleKeyCommand={handleKeyCommands(updateEditorState)}\n          spellCheck={props.spellCheck}\n        />\n      </div>\n    </div>\n  );\n});\n","export enum ChangeIndicatorState {\n  IDLE,\n  SAVED,\n  UNSAVED\n}\n\nexport interface ChangeIndicatorProps {\n  state: ChangeIndicatorState;\n}\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport \"./AppEditor.css\";\r\n\r\nimport { AppEditorProps } from \"./AppEditorProps\";\r\nimport { NameInputReference, EditorReference } from \"./AppEditorReferences\";\r\n\r\nimport AppEditorHeader from \"./layout/Header/Header\";\r\nimport Editor from \"./layout/Editor/Editor\";\r\nimport { ChangeIndicatorState } from \"./components/ChangeIndicator/ChangeIndicatorProps\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport utils from \"../../utils\";\r\nimport { KeycodeMap } from \"./layout/Editor/Shortcuts\";\r\n\r\nexport default function AppEditor(props: AppEditorProps) {\r\n  const [maximized, setMaximized] = useState(props.maximized);\r\n  const [indicatorState, setIndicatorState] = useState(\r\n    ChangeIndicatorState.IDLE\r\n  );\r\n\r\n  const nameInputReference = useRef<NameInputReference>();\r\n\r\n  const editorReference = useRef<EditorReference>();\r\n\r\n  const saveTimeoutReference = useRef<NodeJS.Timeout>();\r\n\r\n  function save() {\r\n    const record: NoteRecord = {\r\n      id: props.id || utils.string.generateRandom(),\r\n      parent: props.currentGroupID,\r\n      title: \"\",\r\n      content: { entityMap: {}, blocks: [] }\r\n    };\r\n\r\n    if (nameInputReference.current) {\r\n      record.title = nameInputReference.current.getValue();\r\n    }\r\n\r\n    if (editorReference.current) {\r\n      record.content = editorReference.current.getRawDraftContentState();\r\n    }\r\n\r\n    if (typeof props.onSave === \"function\" && !props.id) {\r\n      props.onSave(props.currentGroupID, record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (typeof props.onUpdate === \"function\" && props.id) {\r\n      props.onUpdate(record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCanvasKeyDown(event: React.KeyboardEvent<any>) {\r\n    const isControlKey = event.ctrlKey;\r\n    const isShiftKey = event.shiftKey;\r\n    const keyCode = event.keyCode;\r\n    const key = KeycodeMap[keyCode];\r\n\r\n    if (isControlKey && !isShiftKey && key === \"s\") {\r\n      event.preventDefault();\r\n\r\n      if (saveTimeoutReference.current) {\r\n        clearTimeout(saveTimeoutReference.current);\r\n      }\r\n\r\n      if (indicatorState === ChangeIndicatorState.UNSAVED) {\r\n        save();\r\n      }\r\n    }\r\n\r\n    if (key === \"esc\") {\r\n      event.preventDefault();\r\n\r\n      closeEditor();\r\n    }\r\n  }\r\n\r\n  function handleDetectedChange() {\r\n    setIndicatorState(ChangeIndicatorState.UNSAVED);\r\n\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (props.autoSave && Boolean(props.id)) {\r\n      saveTimeoutReference.current = setTimeout(() => {\r\n        save();\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  function closeEditor() {\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (typeof props.onClose === \"function\") {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AppEditor\">\r\n      <div className=\"AppEditorWrapper\" onKeyDown={handleCanvasKeyDown}>\r\n        <div className=\"AppEditorCanvas\" data-maximized={maximized}>\r\n          <AppEditorHeader\r\n            maximized={maximized}\r\n            ref={nameInputReference}\r\n            onClose={props.onClose}\r\n            onResize={setMaximized}\r\n            defaultValue={props.title}\r\n            indicatorState={indicatorState}\r\n            onChange={handleDetectedChange}\r\n          />\r\n          <Editor\r\n            ref={editorReference}\r\n            spellCheck={props.spellCheck}\r\n            onChange={handleDetectedChange}\r\n            rawContentState={props.content}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { connect, batch } from \"react-redux\";\r\n\r\nimport { AppEditorContainerProps } from \"./AppEditorProps\";\r\nimport AppEditor from \"./AppEditor\";\r\nimport { AppState, IDispatch } from \"../../redux/types\";\r\nimport { closeEditor, openEditor } from \"../../redux/editor/actions\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\r\nimport { createRecord, updateRecord } from \"../../redux/notes/actions\";\r\n\r\nfunction AppEditorContainer(props: AppEditorContainerProps) {\r\n  return (\r\n    <>\r\n      {props.open &&\r\n        createPortal(\r\n          <AppEditor {...props} />,\r\n          document.getElementById(\"app-editor-root\") as HTMLDivElement\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: AppState) {\r\n  const { editor, settings, notes } = state;\r\n  const { open, id } = editor;\r\n  const { editor: editorSettings } = settings;\r\n  const { currentGroupID, records } = notes;\r\n\r\n  let record;\r\n\r\n  if (id) {\r\n    record = records[id];\r\n  }\r\n\r\n  return {\r\n    open,\r\n    maximized: false,\r\n    autoSave: Boolean(editorSettings.autoSave),\r\n    saveAndClose: Boolean(editorSettings.saveAndClose),\r\n    spellCheck: Boolean(editorSettings.spellCheck),\r\n    currentGroupID,\r\n    ...record\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: IDispatch) {\r\n  return {\r\n    onClose: () => dispatch(closeEditor()),\r\n    onSave: (currentGroupID: NoteGroupID, record: NoteRecord) => {\r\n      batch(() => {\r\n        dispatch(createRecord(currentGroupID, record));\r\n        dispatch(openEditor(record.id));\r\n      });\r\n    },\r\n    onUpdate: (record: NoteRecord) => dispatch(updateRecord(record))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppEditorContainer);\r\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nexport default function GroupContextMenu(props: any) {\n  return (\n    <ContextMenu id={props.id} className=\"react-no-print\">\n      <MenuItem disabled={!Boolean(props.onOpen)} onClick={props.onOpen}>\n        Open\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onCopy)} onClick={props.onCopy}>\n        Copy\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.onCut)} onClick={props.onCut}>\n        Cut\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.onRename)} onClick={props.onRename}>\n        Rename\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onUngroup)} onClick={props.onUngroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onRemove)} onClick={props.onRemove}>\n        Remove\n      </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\n\nimport \"./Group.css\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport { NoteGroupProps } from \"./GroupProps\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport GroupContextMenu from \"./components/GroupContextMenu/GroupContextMenu\";\n\nexport default function NoteGroup(props: NoteGroupProps) {\n  function allowDrop(event: React.DragEvent<HTMLDivElement>) {\n    event.preventDefault();\n  }\n\n  function dragStart(event: React.DragEvent<HTMLDivElement>) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        index: props.index,\n        id: props.id\n      })\n    );\n  }\n\n  function drop(event: any) {\n    event.preventDefault();\n\n    const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n    const sourceId = data && data.id;\n    const targetId = props.id;\n\n    if (\n      typeof props.onMoveIn === \"function\" &&\n      sourceId &&\n      sourceId !== targetId\n    ) {\n      props.onMoveIn(targetId, sourceId);\n    }\n  }\n\n  function open(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onOpen === \"function\") {\n      props.onOpen(props.id);\n    }\n  }\n\n  function remove(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onRemove === \"function\") {\n      props.onRemove(props.id);\n    }\n  }\n\n  function rename(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onRename === \"function\") {\n      props.onRename(props.id);\n    }\n  }\n\n  function ungroup(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onUngroup === \"function\") {\n      props.onUngroup(props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      event.preventDefault();\n\n      open();\n    }\n  }\n\n  return (\n    <div\n      className=\"NoteGroup\"\n      draggable=\"true\"\n      onDragOver={allowDrop}\n      onDragStart={dragStart}\n      onDrop={drop}\n      onDoubleClick={open}\n      tabIndex={props.tabIndex}\n      onKeyDown={handleKeyDown}\n    >\n      <ContextMenuTrigger id={props.id} holdToDisplay={-1}>\n        <div className=\"NoteGroupBack\"></div>\n        <div className=\"NoteGroupFront\">\n          <h5 className=\"NoteGroupTitle\">\n            <span>{props.title}</span>\n          </h5>\n        </div>\n      </ContextMenuTrigger>\n      <GroupContextMenu\n        id={props.id}\n        onOpen={open}\n        onUngroup={props.currentGroupParent && ungroup}\n        onRemove={!props.hasChildren && remove}\n        onRename={rename}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nexport default function RecordContextMenu(props: any) {\n  return (\n    <ContextMenu id={props.id} className=\"react-no-print\">\n      <MenuItem disabled={!Boolean(props.onOpen)} onClick={props.onOpen}>\n        Open\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.onPrint)} onClick={props.onPrint}>\n        Print\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onCopy)} onClick={props.onCopy}>\n        Copy\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.onCut)} onClick={props.onCut}>\n        Cut\n      </MenuItem>\n      <MenuItem disabled={!Boolean(props.onRename)} onClick={props.onRename}>\n        Rename\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onUngroup)} onClick={props.onUngroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(props.onRemove)} onClick={props.onRemove}>\n        Remove\n      </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { stateToHTML } from \"draft-js-export-html\";\n\nimport \"./Record.css\";\n\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport RecordContextMenu from \"./components/RecordContextMenu/RecordContextMenu\";\nimport { convertFromRaw } from \"draft-js\";\nimport utils from \"../../../../utils\";\nimport { NoteRecordProps } from \"./RecordProps\";\n\nexport default function NoteRecord(props: NoteRecordProps) {\n  const contentState = convertFromRaw(props.content);\n\n  function allowDrop(event: React.DragEvent<HTMLDivElement>) {\n    event.preventDefault();\n  }\n\n  function dragStart(event: React.DragEvent<HTMLDivElement>) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({ index: props.index, id: props.id })\n    );\n  }\n\n  function drop(event: React.DragEvent<HTMLDivElement>) {\n    event.preventDefault();\n\n    const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n\n    const sourceIndex = parseInt(data && data.index);\n    const targetIndex = props.index;\n\n    if (\n      typeof props.onSwap === \"function\" &&\n      !Number.isNaN(sourceIndex) &&\n      sourceIndex !== targetIndex\n    ) {\n      props.onSwap(sourceIndex, targetIndex);\n    }\n  }\n\n  function open(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onOpen === \"function\") {\n      props.onOpen(props.id);\n    }\n  }\n\n  function ungroup(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onUngroup === \"function\") {\n      props.onUngroup(props.id);\n    }\n  }\n\n  function remove(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onRemove === \"function\") {\n      props.onRemove(props.id);\n    }\n  }\n\n  function rename(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onRename === \"function\") {\n      props.onRename(props.id);\n    }\n  }\n\n  function print(event?: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (typeof props.onPrint === \"function\") {\n      props.onPrint(props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      event.preventDefault();\n\n      open();\n    }\n  }\n\n  return (\n    <div\n      className=\"NoteRecord\"\n      draggable=\"true\"\n      onDragOver={allowDrop}\n      onDragStart={dragStart}\n      onDrop={drop}\n      onClick={open}\n      tabIndex={props.tabIndex}\n      onKeyDown={handleKeyDown}\n    >\n      <ContextMenuTrigger id={props.id} holdToDisplay={-1}>\n        <div className=\"NoteRecordCard\">\n          <h4 className=\"NoteRecordTitle\">{props.title}</h4>\n          <div className=\"NoteRecordContent\">\n            <p\n              dangerouslySetInnerHTML={{\n                __html: stateToHTML(utils.editor.truncate(contentState, 150))\n              }}\n            ></p>\n          </div>\n        </div>\n      </ContextMenuTrigger>\n      <RecordContextMenu\n        id={props.id}\n        onOpen={open}\n        onUngroup={props.currentGroupParent && ungroup}\n        onRemove={remove}\n        onRename={rename}\n        onPrint={print}\n      />\n    </div>\n  );\n}\n","import { NoteRecordID } from \"../notes/records/types\";\nimport { IDispatch, AppState } from \"../types\";\n\nexport function queuePrintRecords(ids: NoteRecordID[]) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: \"REPLACE\",\n      payload: ids\n    });\n  };\n}\n","import { connect } from \"react-redux\";\r\n\r\nimport Note from \"./Note\";\r\n\r\nimport { AppState, IDispatch } from \"../../../../redux/types\";\r\nimport { NoteGroupID } from \"../../../../redux/notes/groups/types\";\r\nimport { openEditor } from \"../../../../redux/editor/actions\";\r\nimport { NoteRecordID } from \"../../../../redux/notes/records/types\";\r\nimport {\r\n  openGroup,\r\n  removeGroup,\r\n  moveToGroup,\r\n  ungroup,\r\n  swapCurrentGroupChildren\r\n} from \"../../../../redux/notes/actions\";\r\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\r\nimport { OverlayType } from \"../../../../redux/overlays/types\";\r\nimport { queuePrintRecords } from \"../../../../redux/print/actions\";\r\n\r\nfunction mapStateToProps(state: AppState, ownProps: any) {\r\n  const { id, index, tabIndex } = ownProps;\r\n\r\n  const { notes } = state;\r\n  const { records, groups, currentGroupID } = notes;\r\n\r\n  const group = groups[currentGroupID];\r\n  const note = records[id] || groups[id];\r\n\r\n  return {\r\n    index,\r\n    tabIndex,\r\n    ...note,\r\n    groupParent: group.parent\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: IDispatch) {\r\n  return {\r\n    moveToGroup: (targetGroupID: NoteGroupID, id: NoteGroupID | NoteRecordID) =>\r\n      dispatch(moveToGroup(targetGroupID, id)),\r\n    openGroup: (targetGroupID: NoteGroupID) =>\r\n      dispatch(openGroup(targetGroupID)),\r\n    swapGroupChildren: (sourceIndex: number, targetIndex: number) =>\r\n      dispatch(swapCurrentGroupChildren(sourceIndex, targetIndex)),\r\n    openEditor: (recordID: NoteRecordID) => dispatch(openEditor(recordID)),\r\n    removeRecord: (recordID: NoteRecordID) =>\r\n      dispatch(\r\n        showOverlay(OverlayType.DELETE_RECORD, {\r\n          recordID\r\n        })\r\n      ),\r\n    removeGroup: (groupID: NoteGroupID) => dispatch(removeGroup(groupID)),\r\n    ungroup: (id: NoteGroupID | NoteRecordID) => dispatch(ungroup(id)),\r\n    renameRecord: (recordID: NoteRecordID) =>\r\n      dispatch(showOverlay(OverlayType.RENAME_RECORD, { recordID })),\r\n    renameGroup: (groupID: NoteGroupID) =>\r\n      dispatch(showOverlay(OverlayType.RENAME_GROUP, { groupID })),\r\n    print: (id: NoteRecordID) => dispatch(queuePrintRecords([id]))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\r\n","import React from \"react\";\r\n\r\nimport NoteGroup from \"../Group/Group\";\r\nimport NoteRecord from \"../Record/Record\";\r\n\r\nexport default function Note(props: any) {\r\n  return (\r\n    <>\r\n      {props.children ? (\r\n        <NoteGroup\r\n          id={props.id}\r\n          index={props.index}\r\n          title={props.title}\r\n          onRename={props.renameGroup}\r\n          onUngroup={props.ungroup}\r\n          onOpen={props.openGroup}\r\n          tabIndex={props.tabIndex}\r\n          parent={props.parent}\r\n          currentGroupParent={props.groupParent}\r\n          hasChildren={Boolean(props.children.length)}\r\n          onRemove={props.removeGroup}\r\n          onMoveIn={props.moveToGroup}\r\n        />\r\n      ) : (\r\n        <NoteRecord\r\n          id={props.id}\r\n          index={props.index}\r\n          title={props.title}\r\n          onOpen={props.openEditor}\r\n          onSwap={props.swapGroupChildren}\r\n          tabIndex={props.tabIndex}\r\n          parent={props.parent}\r\n          currentGroupParent={props.groupParent}\r\n          onRemove={props.removeRecord}\r\n          onUngroup={props.ungroup}\r\n          onRename={props.renameRecord}\r\n          content={props.content}\r\n          onPrint={props.print}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport Notes from \"./Notes\";\n\nimport { AppState } from \"../../redux/types\";\nimport { getGroupChildren } from \"./selectors\";\n\nconst getGroupChildrenSelector = createSelector(\n  [getGroupChildren],\n  children => children\n);\n\nfunction mapStateToProps(state: AppState) {\n  const { notes } = state;\n  const { currentGroupID } = notes;\n\n  return {\n    children: getGroupChildrenSelector(state, currentGroupID)\n  };\n}\n\nexport default connect(mapStateToProps)(Notes);\n","import { AppState } from \"../../redux/types\";\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\n\nexport function getGroupChildren(state: AppState, id: NoteGroupID) {\n  return state.notes.groups[id].children;\n}\n","import React from \"react\";\n\nimport \"./Notes.css\";\n\nimport utils from \"../../utils\";\n\nimport NoteContainer from \"./components/Note\";\nimport { MdNoteAdd } from \"react-icons/md\";\n\nexport default function Notes(props: any) {\n  return (\n    <div className=\"NotesWrapper\">\n      <div className=\"Notes\">\n        {utils.array.map((id: any[], index: number) => {\n          return (\n            <NoteContainer key={id} id={id} index={index} tabIndex={index} />\n          );\n        }, props.children)}\n      </div>\n      {!Boolean(props.children.length) && (\n        <h4 className=\"EmptyNotesHeading\">\n          No records found. Create new record using <MdNoteAdd />\n        </h4>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MdClose } from \"react-icons/md\";\n\nimport \"./OverlayHeader.css\";\n\nimport { OverlayHeaderProps } from \"./OverlayHeaderProps\";\n\nexport default function OverlayHeader(props: OverlayHeaderProps) {\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.id);\n    }\n  }\n\n  return (\n    <header className=\"OverlayHeader\">\n      <span className=\"OverlayHeaderTitle\">{props.title}</span>\n      <button\n        className=\"OverlayHeaderButton\"\n        onClick={close}\n        tabIndex={props.tabIndex}\n      >\n        <MdClose />\n      </button>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./OverlayBody.css\";\n\nimport OverlayBodyProps from \"./OverlayBodyProps\";\n\nexport default function OverlayBody(props: OverlayBodyProps) {\n  return <div className=\"OverlayBody\">{props.children}</div>;\n}\n","import React from \"react\";\n\nimport \"./OverlayFooter.css\";\n\nimport OverlayFooterProps from \"./OverlayFooterProps\";\n\nexport default function OverlayFooter(props: OverlayFooterProps) {\n  return <footer className=\"OverlayFooter\">{props.children}</footer>;\n}\n","import React from \"react\";\nimport { connect, batch } from \"react-redux\";\n\nimport \"./DeleteRecordOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\n\nimport { IDispatch } from \"../../../../redux/types\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { removeRecord } from \"../../../../redux/notes/actions\";\nimport { NoteRecordID } from \"../../../../redux/notes/records/types\";\n\nfunction DeleteRecordOverlay(props: any) {\n  function confirm() {\n    if (typeof props.onConfirm === \"function\") {\n      props.onConfirm(props.recordID, props.overlayID);\n    }\n  }\n\n  return (\n    <div className=\"DeleteRecordOverlay\">\n      <OverlayHeader\n        id={props.id}\n        onClose={props.onClose}\n        title=\"Delete Note\"\n      />\n      <OverlayBody>\n        <p>Are you sure you want to permanently delete this note?</p>\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={confirm}>Delete Note</button>\n        <button onClick={props.onClose}>Keep Note</button>\n      </OverlayFooter>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onConfirm: (recordID: NoteRecordID, id: string) => {\n      batch(() => {\n        dispatch(removeRecord(recordID));\n        dispatch(closeOverlay(id));\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(DeleteRecordOverlay);\n","import React, { forwardRef } from \"react\";\n\nimport \"./FormInput.css\";\n\nexport default forwardRef((props: any, ref: any) => {\n  return (\n    <input\n      ref={ref}\n      type={props.type}\n      placeholder={props.placeholder}\n      className=\"FormInput\"\n      autoFocus={props.autoFocus}\n      defaultValue={props.defaultValue}\n      name={props.name}\n    />\n  );\n});\n","import React, { useRef } from \"react\";\nimport { connect, batch } from \"react-redux\";\n\nimport \"./RenameRecordOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\n\nimport { IDispatch, AppState } from \"../../../../redux/types\";\nimport { NoteRecord } from \"../../../../redux/notes/records/types\";\nimport { updateRecord } from \"../../../../redux/notes/actions\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\nimport FormInput from \"../../../UI/FormInput/FormInput\";\n\nfunction RenameRecordOverlay(props: any) {\n  const titleReference = useRef<HTMLInputElement>(null);\n\n  function save(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (typeof props.onSave === \"function\") {\n      let title = props.record.title;\n\n      if (titleReference.current) {\n        title = titleReference.current.value;\n      }\n\n      const record = { ...props.record, title };\n\n      props.onSave(record, props.overlayID);\n    }\n  }\n\n  return (\n    <form className=\"RenameRecordOverlay\" onSubmit={save}>\n      <OverlayHeader\n        id={props.id}\n        title=\"Rename Note\"\n        onClose={props.onClose}\n      ></OverlayHeader>\n      <OverlayBody>\n        <FormInput\n          ref={titleReference}\n          type=\"text\"\n          name=\"title\"\n          defaultValue={props.record.title}\n          autoFocus={true}\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button type=\"button\">Save</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state: AppState, ownProps: any) {\n  const { notes } = state;\n  const { records } = notes;\n  const record = records[ownProps.recordID];\n\n  return {\n    record\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onSave: (record: NoteRecord, id: string) => {\n      batch(() => {\n        dispatch(updateRecord(record));\n        dispatch(closeOverlay(id));\n      });\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RenameRecordOverlay);\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./CreateGroupOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\nimport { IDispatch, AppState } from \"../../../../redux/types\";\nimport { NoteGroupID, NoteGroup } from \"../../../../redux/notes/groups/types\";\nimport { createNewGroup } from \"../../../../redux/notes/actions\";\nimport utils from \"../../../../utils\";\nimport FormInput from \"../../../UI/FormInput/FormInput\";\n\nfunction CreateGroupOverlay(props: any) {\n  const nameReference = useRef<HTMLInputElement>(null);\n\n  function create(event: React.FormEvent) {\n    event.preventDefault();\n\n    const group: NoteGroup = {\n      id: utils.string.generateRandom(),\n      title: \"\",\n      children: [],\n      parent: props.currentGroupID\n    };\n\n    if (nameReference.current) {\n      group.title = nameReference.current.value;\n    }\n\n    if (typeof props.createNewGroup === \"function\") {\n      props.createNewGroup(group.parent, group);\n    }\n\n    props.onClose();\n  }\n\n  return (\n    <form className=\"CreateGroupOverlay\" onSubmit={create}>\n      <OverlayHeader\n        id={props.id}\n        title=\"Create Group\"\n        onClose={props.onClose}\n      />\n      <OverlayBody>\n        <FormInput\n          ref={nameReference}\n          type=\"text\"\n          placeholder=\"Group name\"\n          autoFocus={true}\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button type=\"submit\">Create Group</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state: AppState) {\n  const { notes } = state;\n  const { currentGroupID } = notes;\n\n  return {\n    currentGroupID\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    createNewGroup: (targetGroupID: NoteGroupID, group: NoteGroup) => {\n      dispatch(createNewGroup(targetGroupID, group));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroupOverlay);\n","import React, { useRef } from \"react\";\nimport { connect, batch } from \"react-redux\";\n\nimport \"./RenameGroupOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\n\nimport { IDispatch, AppState } from \"../../../../redux/types\";\nimport { updateGroup } from \"../../../../redux/notes/actions\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { NoteGroup } from \"../../../../redux/notes/groups/types\";\nimport { OverlayID } from \"../../../../redux/overlays/types\";\nimport FormInput from \"../../../UI/FormInput/FormInput\";\n\nfunction RenameGroupOverlay(props: any) {\n  const titleReference = useRef<HTMLInputElement>(null);\n\n  function save(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (typeof props.onSave === \"function\") {\n      let title = props.group.title;\n\n      if (titleReference.current) {\n        title = titleReference.current.value;\n      }\n\n      const group = { ...props.group, title };\n\n      props.onSave(group, props.overlayID);\n    }\n  }\n\n  return (\n    <form className=\"RenameGroupOverlay\" onSubmit={save}>\n      <OverlayHeader\n        id={props.id}\n        title=\"Rename Group\"\n        onClose={props.onClose}\n      ></OverlayHeader>\n      <OverlayBody>\n        <FormInput\n          ref={titleReference}\n          type=\"text\"\n          name=\"title\"\n          defaultValue={props.group.title}\n          autoFocus={true}\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button type=\"submit\">Save</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state: AppState, ownProps: any) {\n  const { notes } = state;\n  const { groups } = notes;\n  const group = groups[ownProps.groupID];\n\n  return {\n    group\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onSave: (group: NoteGroup, id: OverlayID) => {\n      batch(() => {\n        dispatch(updateGroup(group));\n        dispatch(closeOverlay(id));\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RenameGroupOverlay);\n","import { OverlayType } from \"../../redux/overlays/types\";\n\n// Overlays\nimport DeleteRecordOverlay from \"./components/DeleteRecordOverlay/DeleteRecordOverlay\";\nimport RenameRecordOverlay from \"./components/RenameRecordOverlay/RenameRecordOverlay\";\nimport CreateGroupOverlay from \"./components/CreateGroupOverlay/CreateGroupOverlay\";\nimport RenameGroupOverlay from \"./components/RenameGroupOverlay/RenameGroupOverlay\";\n\nconst OverlayMap = new Map<OverlayType, React.FunctionComponent<any>>();\n\nOverlayMap.set(OverlayType.DELETE_RECORD, DeleteRecordOverlay);\nOverlayMap.set(OverlayType.RENAME_RECORD, RenameRecordOverlay);\nOverlayMap.set(OverlayType.CREATE_GROUP, CreateGroupOverlay);\nOverlayMap.set(OverlayType.RENAME_GROUP, RenameGroupOverlay);\n\nexport default OverlayMap;\n","import React, { useRef, useEffect } from \"react\";\nimport utils from \"../../utils\";\nimport { KeycodeMap } from \"../AppEditor/layout/Editor/Shortcuts\";\n\nimport \"./Overlay.css\";\n\nexport default function Overlay(props: any) {\n  let overlayTabElements = useRef<any>([]);\n\n  useEffect(() => {\n    if (overlayTabElements.current) {\n      overlayTabElements.current = utils.dom.getTabbableElements(props.id);\n    }\n\n    return () => {\n      if (overlayTabElements.current) {\n        overlayTabElements.current = [];\n      }\n    };\n  }, [props.id]);\n\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode, target } = event;\n    const isShiftKey = event.shiftKey;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"esc\") {\n      close();\n      return;\n    }\n\n    if (key === \"tab\" && isShiftKey) {\n      if (\n        overlayTabElements &&\n        target === utils.array.first(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.last(overlayTabElements.current).focus();\n      }\n\n      return;\n    }\n\n    if (key === \"tab\") {\n      if (\n        overlayTabElements &&\n        target === utils.array.last(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.first(overlayTabElements.current).focus();\n      }\n    }\n  }\n\n  return (\n    <div id={props.id} className=\"Overlay\" onKeyDown={handleKeyDown}>\n      {React.Children.map(props.children, (child: any) => {\n        return React.cloneElement(child, { ...child.props, onClose: close });\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\n\nimport \"./OverlayContainer.css\";\n\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport utils from \"../../utils\";\nimport OverlayMap from \"./OverlayMap\";\nimport Overlay from \"./Overlay\";\nimport { OverlayContainerProps } from \"./OverlayContainerProps\";\nimport { Overlay as IOverlay, OverlayID } from \"../../redux/overlays/types\";\nimport { closeOverlay } from \"../../redux/overlays/actions\";\n\nfunction OverlayContainer(props: OverlayContainerProps) {\n  return props.overlays.length\n    ? createPortal(\n        <div className=\"OverlayContainer react-no-print\">\n          {utils.array.mapReversed((overlay: IOverlay) => {\n            const OverlayComponent = OverlayMap.get(overlay.type);\n\n            if (OverlayComponent) {\n              return (\n                <Overlay\n                  key={overlay.id}\n                  id={overlay.id}\n                  onClose={props.onClose}\n                >\n                  <OverlayComponent\n                    overlayID={overlay.id}\n                    recordID={overlay.recordID}\n                    groupID={overlay.groupID}\n                    onClose={props.onClose}\n                  />\n                </Overlay>\n              );\n            }\n\n            return null;\n          }, props.overlays)}\n        </div>,\n        document.getElementById(\"app-overlays-root\") as HTMLDivElement\n      )\n    : null;\n}\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    overlays: state.overlays\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onClose: (id: OverlayID) => dispatch(closeOverlay(id))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OverlayContainer);\n","import React from \"react\";\n\nexport default function RecordPrint(props: any) {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: props.printHTML }}></div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport RecordPrint from \"./RecordPrint\";\nimport { createPortal } from \"react-dom\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { convertFromRaw } from \"draft-js\";\nimport { NoteRecordID } from \"../../redux/notes/records/types\";\nimport { queuePrintRecords } from \"../../redux/print/actions\";\n\nfunction RecordPrintContainer(props: any) {\n  useEffect(() => {\n    console.log(props.printHTML);\n    if (props.printHTML) {\n      if (document && window) {\n        const titleBeforePrinting = document.title;\n        document.title = \"Notebook\";\n        window.print();\n        document.title = titleBeforePrinting;\n      }\n\n      if (typeof props.clearPrintQueue === \"function\") {\n        props.clearPrintQueue();\n      }\n    }\n  }, [props, props.printHTML]);\n\n  return (\n    <>\n      {props.printHTML &&\n        createPortal(\n          <RecordPrint title={props.title} printHTML={props.printHTML} />,\n          document.getElementById(\"print-mount\")!\n        )}\n    </>\n  );\n}\n\nfunction mapStateToProps(state: AppState) {\n  const { print, notes } = state;\n  const { records } = notes;\n\n  const printHTML = print.reduce((html: string, id: NoteRecordID) => {\n    const record = records[id];\n\n    if (record) {\n      const title = `<h2>${record.title}</h2>`;\n      return html + title + stateToHTML(convertFromRaw(record.content));\n    }\n\n    return html;\n  }, \"\");\n\n  return {\n    printHTML\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    clearPrintQueue: () => dispatch(queuePrintRecords([]))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecordPrintContainer);\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport NavigatorContainer from \"./components/Navigator\";\nimport AppEditorContainer from \"./components/AppEditor\";\n// import SettingsDrawerContainer from \"./components/SettingsDrawer/SettingsDrawerContainer\";\nimport NotesContainer from \"./components/Notes\";\nimport OverlayContainer from \"./components/Overlay\";\nimport RecordPrintContainer from \"./components/RecordPrint\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App react-no-print\">\n        <AppHeader />\n        <NavigatorContainer />\n        {/* Test component */}\n        <AppEditorContainer />\n        {/* Test component */}\n        {/* <SettingsDrawerContainer /> */}\n        {/* Test component */}\n        <NotesContainer />\n        <OverlayContainer />\n      </div>\n      <RecordPrintContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export type NoteGroupID = string;\n\nexport interface NoteGroup {\n  id: NoteGroupID;\n  parent?: string;\n  title: string;\n  children: string[];\n}\n\nexport interface NotesGroups {\n  [id: string]: NoteGroup;\n}\n\nexport enum NotesGroupsActions {\n  REPLACE = \"Notes/Groups/Actions/REPLACE\",\n  REPLACE_ALL = \"Notes/Groups/Actions/REPLACE_ALL\"\n}\n\nexport const DEFAULT_NOTES_GROUPS_STATE: NotesGroups = {\n  root: {\n    id: \"root\",\n    parent: undefined,\n    title: \"/\",\n    children: [\"fakultet\", \"ostalo\", \"instruction\"]\n  },\n  fakultet: {\n    id: \"fakultet\",\n    parent: \"root\",\n    title: \"Fakultet\",\n    children: []\n  },\n  ostalo: {\n    id: \"ostalo\",\n    parent: \"root\",\n    title: \"Ostalo\",\n    children: []\n  }\n};\n","import { RawDraftContentState } from \"draft-js\";\nimport { NoteGroupID } from \"../groups/types\";\nimport instructionsContentState from \"../../../data/instructionsContentState\";\n\n/**\n * A `NoteRecord` unique identifier.\n */\nexport type NoteRecordID = string;\n\nexport type NoteRecord = {\n  id: NoteRecordID;\n  parent: NoteGroupID;\n  title: string;\n  content: RawDraftContentState;\n};\n\nexport type NotesRecords = {\n  [id: string]: NoteRecord;\n};\n\nexport const DEFAULT_RECORDS_STATE: NotesRecords = {\n  instruction: {\n    id: \"instruction\",\n    parent: \"root\",\n    title: \"INSTRUCTIONS\",\n    content: instructionsContentState\n  }\n};\n","import { RawDraftContentState } from \"draft-js\";\n\nexport default {\n  blocks: [\n    {\n      key: \"8ofdk\",\n      text: \"EDITOR\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 6,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"aemmj\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"35hd4\",\n      text: \"In order to save a note, use shortcut ctrl + s.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2dqfh\",\n      text: \"To close editor, you can simply use escape key. (ESC)\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 48,\n          length: 5,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"e5mv2\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"a71vr\",\n      text: \"Available shortcuts:\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"dhmf5\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"8jlev\",\n      text: \"1. ctrl + b - Bold\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 4,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"5ikho\",\n      text: \"2. ctrl + i  - Italic\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 15,\n          length: 6,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"eacar\",\n      text: \"3. ctrl + u - Underline\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 9,\n          style: \"UNDERLINE\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2h4vl\",\n      text: \"4. ctrl + shift + s - Strikethrough\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 22,\n          length: 13,\n          style: \"STRIKETHROUGH\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cefcc\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"alrtq\",\n      text: \"NOTES\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 5,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cgvgp\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"1jo4c\",\n      text:\n        \"- To move a note or a group into the another group, simply drag that note over the target group and drop.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"bqsbk\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cvojm\",\n      text:\n        \"- To ungroup certain note or group from current group, use right click > ungroup option.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 59,\n          length: 11,\n          style: \"BOLD\"\n        },\n        {\n          offset: 73,\n          length: 8,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    }\n  ],\n  entityMap: {}\n} as RawDraftContentState;\n","import { combineReducers } from \"redux\";\n\nimport recordsReducer from \"./records/reducer\";\nimport groupsReducer from \"./groups/reducer\";\nimport groupReducer from \"./group/reducer\";\n\nexport default combineReducers({\n  currentGroupID: groupReducer,\n  groups: groupsReducer,\n  records: recordsReducer\n});\n","import { NoteGroupID } from \"../groups/types\";\nimport { NotesActions } from \"../types\";\n\nexport default function groupReducer(state: NoteGroupID = \"root\", action: any) {\n  switch (action.type) {\n    case NotesActions.OPEN_GROUP:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { NotesGroups, DEFAULT_NOTES_GROUPS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function groupsReducer(\n  state: NotesGroups = DEFAULT_NOTES_GROUPS_STATE,\n  action: any\n) {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.concat(\n            action.payload.id\n          )\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.CREATE_GROUP:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.UPDATE_GROUP:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_GROUP:\n      return {\n        ...utils.object.deleteProperty(action.payload.id, state),\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.MOVE_GROUP:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          parent: action.payload.targetGroupID\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.REORDER:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { NotesRecords, DEFAULT_RECORDS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function recordsReducer(\n  state: NotesRecords = DEFAULT_RECORDS_STATE,\n  action: any\n): NotesRecords {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return utils.object.deleteProperty(action.payload.id, state);\n    case NotesActions.UPDATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          parent: action.payload.targetGroupID\n        }\n      };\n    default:\n      return state;\n  }\n}\n","export type EditorSettingsState = {\n  autoSave?: boolean;\n  saveAndClose?: boolean;\n  spellCheck?: boolean;\n};\n\nexport const EditorSettingsDefaultState: EditorSettingsState = {\n  autoSave: true,\n  saveAndClose: false,\n  spellCheck: false\n};\n\nexport enum EditorSettingsActions {\n  REPLACE = \"Settings/Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Editor/Actions/REPLACE_ALL\"\n}\n","export type NotesSettingState = {\n  softDelete: boolean;\n};\n\nexport const NotesSettingsDefaultState = {\n  softDelete: true\n};\n\nexport enum NotesSettingsActions {\n  REPLACE = \"Settings/Notes/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Notes/Actions/REPLACE_ALL\"\n}\n","import { combineReducers } from \"redux\";\nimport editorSettingsReducer from \"./editor/reducer\";\nimport notesSettingsReducer from \"./notes/reducer\";\n\nexport default combineReducers({\n  editor: editorSettingsReducer,\n  notes: notesSettingsReducer\n});\n","import {\n  EditorSettingsState,\n  EditorSettingsDefaultState,\n  EditorSettingsActions\n} from \"./types\";\n\nexport default function editorSettingsReducer(\n  state: EditorSettingsState = EditorSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case EditorSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case EditorSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  NotesSettingState,\n  NotesSettingsDefaultState,\n  NotesSettingsActions\n} from \"./types\";\n\nexport default function notesSettingsReducer(\n  state: NotesSettingState = NotesSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case NotesSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NotesSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notesReducers from \"./notes/reducers\";\nimport editorReducer from \"./editor/reducer\";\nimport settingsReducers from \"./settings/reducers\";\nimport overlaysReducer from \"./overlays/reducer\";\nimport printReducer from \"./print/reducer\";\n\nexport default combineReducers({\n  notes: notesReducers,\n  editor: editorReducer,\n  settings: settingsReducers,\n  overlays: overlaysReducer,\n  print: printReducer\n});\n","import {\n  NoteEditorState,\n  NoteEditorDefaultState,\n  NoteEditorStateActions\n} from \"./types\";\n\nexport default function editorReducer(\n  state: NoteEditorState = NoteEditorDefaultState,\n  action: any\n): NoteEditorState {\n  switch (action.type) {\n    case NoteEditorStateActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NoteEditorStateActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { OverlaysActions, OverlayState } from \"./types\";\n\nexport default function overlaysReducer(state: OverlayState = [], action: any) {\n  switch (action.type) {\n    case OverlaysActions.OPEN_OVERLAY:\n      return [...state, action.payload];\n    case OverlaysActions.CLOSE_OVERLAY:\n      return state.filter(({ id }) => id !== action.payload);\n    default:\n      return state;\n  }\n}\n","import { PrintState } from \"./types\";\n\nexport default function printReducer(state: PrintState = [], action: any) {\n  switch (action.type) {\n    case \"REPLACE\":\n      return [...action.payload.slice()];\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport appReducers from \"./reducers\";\n\nconst middlewares = [thunk];\n\nexport default createStore(\n  appReducers,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport \"./print.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLDivElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}