{"version":3,"sources":["utils/array.ts","utils/object.ts","utils/string.ts","utils/index.ts","components/NoteEditor/components/Editor/components/EditorBar/components/Button/EditorBarButton.tsx","components/NoteEditor/components/Editor/StyleMap.ts","components/NoteEditor/components/Editor/components/EditorBar/EditorBar.tsx","components/NoteEditor/components/Editor/KeyBindings.ts","components/NoteEditor/components/Editor/CustomActions.ts","components/NoteEditor/components/Editor/Editor.tsx","components/NoteEditor/components/Header/components/Title/NoteEditorHeaderInput.tsx","components/NoteEditor/components/Header/components/Button/NoteEditorHeaderButton.tsx","components/NoteEditor/components/Header/components/SavedContentBubble/SavedContentBubble.tsx","components/NoteEditor/components/Header/NoteEditorHeader.tsx","components/NoteEditor/components/Footer/Footer.tsx","components/NoteEditor/NoteEditor.tsx","redux/notes/records/types.ts","redux/notes/records/actions.ts","redux/editor/types.ts","redux/editor/actions.ts","components/NoteEditor/NoteEditorContainer.tsx","components/AppHeader/components/AppHeaderControls/AppHeaderControlsContainer.ts","components/AppHeader/components/AppHeaderControls/AppHeaderControls.tsx","components/AppHeader/AppHeader.tsx","components/SettingsDrawer/components/Header/SettingsDrawerHeader.tsx","components/SettingsDrawer/components/Footer/SettingsDrawerFooter.tsx","components/UI/Switch/Switch.tsx","components/UI/LabeledSwitch/LabeledSwitch.tsx","components/UI/FormBlock/FormBlock.tsx","components/SettingsDrawer/components/EditorSettings/EditorSettings.tsx","components/SettingsDrawer/SettingsDrawer.tsx","components/SettingsDrawer/SettingsDrawerContainer.tsx","App.tsx","serviceWorker.ts","redux/notes/reducers.ts","redux/notes/records/reducer.ts","redux/settings/editor/types.ts","redux/settings/reducers.ts","redux/settings/editor/reducer.ts","redux/reducers.ts","redux/editor/reducer.ts","redux/store.ts","index.tsx"],"names":["first","array","length","last","deleteProperty","key","generateRandomString","output","characters","randomIndex","Math","floor","random","charAt","object","string","EditorBarButton","props","className","title","onMouseDown","event","onClick","action","data-active","active","children","text","EditorInlineStyleTypes","customStyleMap","STRIKETHROUGH","textDecoration","HIGHLIGHT","backgroundColor","INLINE_STYLES","BOLD","ITALIC","UNDERLINE","CODE","EditorBar","handleButtonClick","onAction","id","currentInlineStyles","has","onReset","KeyCodeMap","Map","set","NoteEditorCustomCommand","Editor","forwardRef","ref","useState","EditorState","createEmpty","editorState","setEditorState","draftEditorRef","useRef","updateEditorState","newEditorState","onChange","saved","getCurrentContent","getBlockMap","equals","toggleInlineStyle","style","preventDefault","RichUtils","useImperativeHandle","getPlainText","getHTML","convertToRaw","focus","current","blur","getSelection","getHasFocus","moveFocusToEnd","forceSelection","createWithContent","reduce","contentState","INLINE_STYLE","Modifier","removeInlineStyle","getCurrentInlineStyle","Draft","keyBindingFn","isControlKey","ctrlKey","isShiftKey","shiftKey","keyCode","get","SAVE","UNDO","REDO","getDefaultKeyBinding","handleKeyCommand","command","undefined","undo","redo","spellCheck","NoteEditorHeaderInput","inputRef","getValue","value","type","defaultValue","initialValue","placeholder","NoteEditorHeaderButton","tabIndex","SavedContentBubble","NoteEditorHeader","maximized","onResize","onClose","Footer","onSave","NoteEditor","setMaximized","Boolean","setSaved","titleRef","editorRef","saveIntervalRef","handleNoteEditorChange","clearTimeout","autoSave","setTimeout","save","content","entityMap","blocks","utils","record","updateOrInsert","saveAndClose","close","onKeyDown","join","trim","NotesRecordsActions","insert","dispatch","getState","a","notes","records","Error","REPLACE_ALL","payload","update","REPLACE","NoteEditorStateActions","NoteEditorDefaultState","open","connect","state","editor","editorSettings","settings","batch","ReactDOM","createPortal","document","getElementById","openNoteEditor","disabled","AppHeader","AppHeaderControlsContainer","SettingsDrawerHeader","SettingsDrawerFooter","Switch","htmlFor","name","defaultChecked","checked","rounded","LabeledSwitch","label","FormBlock","EditorSettings","SettingsDrawer","flex","App","window","location","hostname","match","combineReducers","EditorSettingsActions","EditorSettingsDefaultState","notesReducers","settingsReducers","middlewares","thunk","createStore","appReducers","composeWithDevTools","applyMiddleware","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55c06b84.chunk.js","sourcesContent":["export function first(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[0];\n}\n\nexport function last(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[array.length - 1];\n}\n","// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const deleteProperty = (key: string, { [key]: _, ...newObj }) => newObj;\n","export function generateRandomString(length: number = 16): string {\n  let output = \"\";\n\n  if (length <= 0) {\n    return output;\n  }\n\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (output.length < length) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    output += characters.charAt(randomIndex);\n  }\n\n  return output;\n}\n","import * as array from \"./array\";\nimport * as object from \"./object\";\nimport * as string from \"./string\";\n\nexport default {\n  array,\n  object,\n  string\n};\n","import React from \"react\";\n\nimport \"./EditorBarButton.css\";\nimport { EditorBarButtonProps } from \"./EditorBarButtonProps\";\n\nexport default function EditorBarButton(props: EditorBarButtonProps) {\n  function handleMouseDown(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.action);\n    }\n  }\n\n  return (\n    <button\n      className=\"EditorBarButton\"\n      title={props.title}\n      onMouseDown={handleMouseDown}\n      data-active={props.active}\n    >\n      {props.children || props.text}\n    </button>\n  );\n}\n","export enum EditorInlineStyleTypes {\n  STRIKETHROUGH = \"STRIKETHROUGH\",\n  BOLD = \"BOLD\",\n  ITALIC = \"ITALIC\",\n  UNDERLINE = \"UNDERLINE\",\n  CODE = \"CODE\",\n  HIGHLIGHT = \"HIGHLIGHT\"\n}\n\nexport const customStyleMap = {\n  [EditorInlineStyleTypes.STRIKETHROUGH]: {\n    textDecoration: \"line-through\"\n  },\n  [EditorInlineStyleTypes.HIGHLIGHT]: {\n    backgroundColor: \"#b2ffb2\"\n  }\n};\n\nexport const INLINE_STYLES = [\n  EditorInlineStyleTypes.STRIKETHROUGH,\n  EditorInlineStyleTypes.BOLD,\n  EditorInlineStyleTypes.ITALIC,\n  EditorInlineStyleTypes.UNDERLINE,\n  EditorInlineStyleTypes.CODE,\n  EditorInlineStyleTypes.HIGHLIGHT\n];\n","import React from \"react\";\nimport {\n  MdFormatBold,\n  MdFormatItalic,\n  MdFormatUnderlined,\n  MdStrikethroughS,\n  MdFormatClear\n} from \"react-icons/md\";\n\nimport \"./EditorBar.css\";\n\nimport EditorBarButton from \"./components/Button/EditorBarButton\";\nimport { EditorInlineStyleTypes } from \"../../StyleMap\";\nimport { EditorBarProps } from \"./EditorBarProps\";\n\nexport default function EditorBar(props: EditorBarProps) {\n  function handleButtonClick(\n    event: React.MouseEvent,\n    action?: EditorInlineStyleTypes\n  ) {\n    if (typeof props.onAction === \"function\") {\n      props.onAction(event, action);\n    }\n  }\n\n  return (\n    <div id=\"EditorBar\" className=\"EditorBar\">\n      <EditorBarButton\n        onClick={handleButtonClick}\n        action={EditorInlineStyleTypes.BOLD}\n        title=\"Bold\"\n        active={props.currentInlineStyles.has(EditorInlineStyleTypes.BOLD)}\n      >\n        <MdFormatBold />\n      </EditorBarButton>\n      <EditorBarButton\n        onClick={handleButtonClick}\n        action={EditorInlineStyleTypes.ITALIC}\n        title=\"Italic\"\n        active={props.currentInlineStyles.has(EditorInlineStyleTypes.ITALIC)}\n      >\n        <MdFormatItalic />\n      </EditorBarButton>\n      <EditorBarButton\n        onClick={handleButtonClick}\n        action={EditorInlineStyleTypes.UNDERLINE}\n        title=\"Underline\"\n        active={props.currentInlineStyles.has(EditorInlineStyleTypes.UNDERLINE)}\n      >\n        <MdFormatUnderlined />\n      </EditorBarButton>\n      <EditorBarButton\n        onClick={handleButtonClick}\n        action={EditorInlineStyleTypes.STRIKETHROUGH}\n        title=\"Strikethrough\"\n        active={props.currentInlineStyles.has(\n          EditorInlineStyleTypes.STRIKETHROUGH\n        )}\n      >\n        <MdStrikethroughS />\n      </EditorBarButton>\n      <EditorBarButton onClick={props.onReset} title=\"Clear formatting\">\n        <MdFormatClear />\n      </EditorBarButton>\n    </div>\n  );\n}\n","const KeyCodeMap: Map<number, string> = new Map();\nKeyCodeMap.set(66, \"b\");\nKeyCodeMap.set(73, \"i\");\nKeyCodeMap.set(83, \"s\");\nKeyCodeMap.set(85, \"u\");\nKeyCodeMap.set(87, \"y\");\nKeyCodeMap.set(97, \"z\");\n\nexport default KeyCodeMap;\n","export enum NoteEditorCustomCommand {\n  UNDO = \"UNDO\",\n  REDO = \"REDO\",\n  SAVE = \"SAVE\"\n}\n","import React, {\n  useState,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from \"react\";\nimport {\n  Editor as DraftEditor,\n  EditorState,\n  RichUtils,\n  Modifier,\n  ContentState,\n  convertToRaw,\n  DraftInlineStyle,\n  getDefaultKeyBinding,\n  DraftEditorCommand,\n  DraftHandleValue\n} from \"draft-js\";\n\nimport \"./Editor.css\";\n\nimport EditorBar from \"./components/EditorBar/EditorBar\";\nimport {\n  customStyleMap,\n  EditorInlineStyleTypes,\n  INLINE_STYLES\n} from \"./StyleMap\";\nimport KeyCodeMap from \"./KeyBindings\";\nimport { NoteEditorCustomCommand } from \"./CustomActions\";\n\nconst Editor = forwardRef((props: any, ref: any) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const draftEditorRef = useRef<any>();\n\n  function updateEditorState(newEditorState: EditorState) {\n    setEditorState(newEditorState);\n\n    if (typeof props.onChange === \"function\" && props.saved) {\n      const equalContents = newEditorState\n        .getCurrentContent()\n        .getBlockMap()\n        .equals(editorState.getCurrentContent().getBlockMap());\n\n      if (!equalContents) {\n        props.onChange();\n      }\n    }\n  }\n\n  function toggleInlineStyle(\n    event?: React.MouseEvent,\n    style?: EditorInlineStyleTypes\n  ) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (style) {\n      updateEditorState(RichUtils.toggleInlineStyle(editorState, style));\n    }\n  }\n\n  function clearInlineStyles(event: React.MouseEvent) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    updateEditorState(\n      EditorState.forceSelection(\n        EditorState.createWithContent(\n          INLINE_STYLES.reduce(\n            (\n              contentState: ContentState,\n              INLINE_STYLE: EditorInlineStyleTypes\n            ) => {\n              return Modifier.removeInlineStyle(\n                contentState,\n                editorState.getSelection(),\n                INLINE_STYLE\n              );\n            },\n            editorState.getCurrentContent()\n          )\n        ),\n        editorState.getSelection()\n      )\n    );\n  }\n\n  useImperativeHandle(ref, () => ({\n    getPlainText() {\n      return editorState.getCurrentContent().getPlainText();\n    },\n    getHTML() {\n      return convertToRaw(editorState.getCurrentContent());\n    },\n    focus() {\n      draftEditorRef.current.focus();\n    },\n    blur() {\n      draftEditorRef.current.blur();\n    }\n  }));\n\n  function focus() {\n    if (draftEditorRef && draftEditorRef.current && editorState) {\n      if (!editorState.getSelection().getHasFocus()) {\n        updateEditorState(EditorState.moveFocusToEnd(editorState));\n      }\n    }\n  }\n\n  function getCurrentBlockStyles(): DraftInlineStyle {\n    return editorState.getCurrentInlineStyle();\n  }\n\n  function keyBindingFn(event: React.KeyboardEvent<any>): string | null {\n    const isControlKey = event?.ctrlKey;\n    const isShiftKey = event?.shiftKey;\n    const keyCode = event?.keyCode;\n    const key = KeyCodeMap.get(keyCode);\n\n    if (isControlKey && key === \"b\") {\n      return EditorInlineStyleTypes.BOLD;\n    }\n\n    if (isControlKey && key === \"i\") {\n      return EditorInlineStyleTypes.ITALIC;\n    }\n\n    if (isControlKey && key === \"u\") {\n      return EditorInlineStyleTypes.UNDERLINE;\n    }\n\n    // Control + Shift + S has higher priority in actions than Control + S. (FizzBuzz issue)\n    if (isControlKey && isShiftKey && key === \"s\") {\n      return EditorInlineStyleTypes.STRIKETHROUGH;\n    }\n\n    if (isControlKey && key === \"s\") {\n      return NoteEditorCustomCommand.SAVE;\n    }\n\n    if (isControlKey && key === \"z\") {\n      return NoteEditorCustomCommand.UNDO;\n    }\n\n    if (isControlKey && key === \"y\") {\n      return NoteEditorCustomCommand.REDO;\n    }\n\n    return getDefaultKeyBinding(event);\n  }\n\n  function handleKeyCommand(\n    command:\n      | DraftEditorCommand\n      | EditorInlineStyleTypes\n      | NoteEditorCustomCommand\n      | string,\n    editorState: EditorState\n  ): DraftHandleValue {\n    switch (command) {\n      case EditorInlineStyleTypes.BOLD:\n        toggleInlineStyle(undefined, EditorInlineStyleTypes.BOLD);\n        return \"handled\";\n      case EditorInlineStyleTypes.ITALIC:\n        toggleInlineStyle(undefined, EditorInlineStyleTypes.ITALIC);\n        return \"handled\";\n      case EditorInlineStyleTypes.UNDERLINE:\n        toggleInlineStyle(undefined, EditorInlineStyleTypes.UNDERLINE);\n        return \"handled\";\n      case EditorInlineStyleTypes.STRIKETHROUGH:\n        toggleInlineStyle(undefined, EditorInlineStyleTypes.STRIKETHROUGH);\n        return \"handled\";\n      case NoteEditorCustomCommand.UNDO:\n        updateEditorState(EditorState.undo(editorState));\n        return \"handled\";\n      case NoteEditorCustomCommand.REDO:\n        updateEditorState(EditorState.redo(editorState));\n        return \"handled\";\n      case NoteEditorCustomCommand.SAVE:\n        return \"handled\";\n      default:\n        return \"not-handled\";\n    }\n  }\n\n  return (\n    <div id=\"Editor\" className=\"Editor\" onClick={focus}>\n      <div className=\"EditorBar__wrapper\">\n        <EditorBar\n          onAction={toggleInlineStyle}\n          onReset={clearInlineStyles}\n          currentInlineStyles={getCurrentBlockStyles()}\n        />\n      </div>\n      <div className=\"DraftEditor__wrapper\">\n        <DraftEditor\n          ref={draftEditorRef}\n          editorState={editorState}\n          onChange={updateEditorState}\n          customStyleMap={customStyleMap}\n          keyBindingFn={keyBindingFn}\n          handleKeyCommand={handleKeyCommand}\n          spellCheck={props.spellCheck}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default Editor;\n","import React, { forwardRef, useImperativeHandle, useRef } from \"react\";\n\nimport \"./NoteEditorHeaderInput.css\";\n\nimport { NoteEditorHeaderInputProps } from \"./NoteEditorHeaderInputProps\";\n\nconst NoteEditorHeaderInput = forwardRef(\n  (props: NoteEditorHeaderInputProps, ref: any) => {\n    const inputRef = useRef<any>();\n\n    useImperativeHandle(ref, () => ({\n      getValue() {\n        return inputRef.current ? inputRef.current.value : \"\";\n      }\n    }));\n\n    return (\n      <input\n        type=\"text\"\n        className=\"NoteEditorHeaderInput\"\n        ref={inputRef}\n        defaultValue={props.initialValue}\n        placeholder=\"New title\"\n        onChange={props.onChange}\n      />\n    );\n  }\n);\n\nexport default NoteEditorHeaderInput;\n","import React from \"react\";\n\nimport \"./NoteEditorHeaderButton.css\";\n\nimport { NoteEditorHeaderButtonProps } from \"./NoteEditorHeaderButtonProps\";\n\nexport default function NoteEditorHeaderButton(\n  props: NoteEditorHeaderButtonProps\n) {\n  function handleClick() {\n    if (typeof props.onClick === \"function\") {\n      props.onClick();\n    }\n  }\n\n  return (\n    <button\n      className=\"NoteEditorHeaderButton\"\n      onClick={handleClick}\n      title={props.title}\n      tabIndex={props.tabIndex}\n    >\n      {props.children || props.text}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./SavedContentBubble.css\";\n\nexport default function SavedContentBubble(props: any) {\n  function getTitle(): string {\n    if (props.saved) {\n      return \"All changes has been saved.\";\n    }\n\n    return \"Some changes are not saved.\";\n  }\n\n  return (\n    <div className=\"SavedContentBubble\" title={getTitle()}>\n      <span className={props.saved ? \"saved\" : \"\"} />\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport { FiMinimize, FiMaximize } from \"react-icons/fi\";\n\nimport \"./NoteEditorHeader.css\";\n\nimport NoteEditorHeaderInput from \"./components/Title/NoteEditorHeaderInput\";\nimport { NoteEditorHeaderProps } from \"./NoteEditorHeaderProps\";\nimport NoteEditorHeaderButton from \"./components/Button/NoteEditorHeaderButton\";\nimport SavedContentBubble from \"./components/SavedContentBubble/SavedContentBubble\";\n\nconst NoteEditorHeader = forwardRef(\n  (props: NoteEditorHeaderProps, ref: any) => {\n    return (\n      <header id=\"NoteEditorHeader\" className=\"NoteEditorHeader\">\n        <NoteEditorHeaderInput ref={ref} onChange={props.onChange} />\n        {props.id && <SavedContentBubble saved={props.saved} />}\n        <NoteEditorHeaderButton\n          title={props.maximized ? \"Minimize\" : \"Maximize\"}\n          onClick={props.onResize}\n        >\n          {props.maximized ? (\n            <FiMinimize className=\"icon\" />\n          ) : (\n            <FiMaximize className=\"icon\" />\n          )}\n        </NoteEditorHeaderButton>\n        <NoteEditorHeaderButton title=\"Close\" onClick={props.onClose}>\n          <MdClose className=\"icon\" />\n        </NoteEditorHeaderButton>\n      </header>\n    );\n  }\n);\n\nexport default NoteEditorHeader;\n","import React from \"react\";\n\nimport \"./Footer.css\";\n\nexport default function Footer(props: any) {\n  return (\n    <footer id=\"NoteEditorFooter\" className=\"NoteEditorFooter\">\n      <button className=\"NoteEditorFooter__button\" onClick={props.onSave}>\n        Save\n      </button>\n    </footer>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { RawDraftContentState } from \"draft-js\";\n\nimport \"./NoteEditor.css\";\n\nimport utils from \"../../utils\";\n\nimport Editor from \"./components/Editor/Editor\";\nimport { NoteEditorHeader } from \"./components/Header\";\nimport { NoteRecord } from \"../../redux/notes/records/types\";\nimport { NoteEditorProps } from \"./NoteEditorProps\";\nimport { NoteEditorFooter } from \"./components/Footer\";\nimport KeyCodeMap from \"./components/Editor/KeyBindings\";\n\nexport default function NoteEditor(props: NoteEditorProps) {\n  const [maximized, setMaximized] = useState(props.maximized);\n  const [saved, setSaved] = useState(Boolean(props.id));\n\n  const titleRef = useRef<any>();\n  const editorRef = useRef<any>();\n  const saveIntervalRef = useRef<NodeJS.Timeout>();\n\n  function toggleMaximizedState() {\n    setMaximized(!maximized);\n  }\n\n  function getCanvasClassNames() {\n    return [\"NodeEditorCanvas\", maximized ? \"maximized\" : \"\"].join(\" \");\n  }\n\n  function handleNoteEditorChange() {\n    if (saveIntervalRef.current) {\n      clearTimeout(saveIntervalRef.current);\n    }\n\n    if (props.autoSave && props.id) {\n      saveIntervalRef.current = setTimeout(() => {\n        save();\n      }, 5000);\n    }\n\n    if (saved) {\n      setSaved(false);\n    }\n  }\n\n  function handleContainerKeyDown(event: React.KeyboardEvent<any>) {\n    const isControlKey = event.ctrlKey;\n    const isShiftKey = event.shiftKey;\n    const keyCode = event.keyCode;\n    const key = KeyCodeMap.get(keyCode);\n\n    if (isControlKey && !isShiftKey && key === \"s\") {\n      event.preventDefault();\n\n      if (saveIntervalRef.current) {\n        clearTimeout(saveIntervalRef.current);\n      }\n\n      save();\n    }\n  }\n\n  /**\n   * 1. Perform validation before saving. (Optional)\n   * 2. Generate unique not used ID.\n   */\n  function save() {\n    let title = \"\";\n    let content: RawDraftContentState = { entityMap: {}, blocks: [] };\n    let id = props.id || utils.string.generateRandomString();\n\n    if (titleRef && titleRef.current) {\n      title = titleRef.current.getValue();\n    }\n\n    if (editorRef && editorRef.current) {\n      content = editorRef.current.getHTML();\n    }\n\n    const record: NoteRecord = { id, title, content };\n\n    if (typeof props.updateOrInsert === \"function\") {\n      props.updateOrInsert(record);\n\n      if (props.saveAndClose && !props.autoSave) {\n        props.close();\n      }\n\n      setSaved(true);\n    }\n  }\n\n  return (\n    <div\n      id=\"NoteEditor\"\n      className=\"NoteEditor__container\"\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"NoteEditor__wrapper\">\n        <div className={getCanvasClassNames().trim()}>\n          <div className=\"NoteEditorCanvas__wrapper\">\n            <NoteEditorHeader\n              maximized={maximized}\n              onResize={toggleMaximizedState}\n              onClose={props.close}\n              ref={titleRef}\n              onChange={handleNoteEditorChange}\n              id={props.id}\n              saved={saved}\n            />\n            <Editor\n              ref={editorRef}\n              spellCheck={props.spellCheck}\n              onChange={handleNoteEditorChange}\n              saved={saved}\n            />\n            <NoteEditorFooter onSave={save} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { RawDraftContentState } from \"draft-js\";\n\nexport type NoteRecord = {\n  id: string;\n  title: string;\n  content: RawDraftContentState;\n};\n\nexport type NotesRecords = {\n  [id: string]: NoteRecord;\n};\n\nexport enum NotesRecordsActions {\n  \"REPLACE\" = \"Notes/Records/Actions/REPLACE\",\n  \"REPLACE_ALL\" = \"Notes/Records/Actions/REPLACE_ALL\"\n}\n","import { NoteRecord, NotesRecordsActions } from \"./types\";\nimport { IDispatch, AppState } from \"../../types\";\nimport utils from \"../../../utils/index\";\n\n/**\n * Insert new NoteRecord object in the NotesRecords state Map.\n */\nexport function insert(record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    if (!record) {\n      throw Error(`NoteRecord object is absent.`);\n    }\n\n    if (!record.id || records[record.id]) {\n      throw Error(`NoteRecord with the ID ${record.id} already exists.`);\n    }\n\n    dispatch({\n      type: NotesRecordsActions.REPLACE_ALL,\n      payload: { ...records, [record.id]: record }\n    });\n  };\n}\n\nexport function update(record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => any) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    if (!record) {\n      throw Error(`NoteRecord must contain valid ID.`);\n    }\n\n    if (!records[record.id]) {\n      throw Error(`NoteRecord with ID ${record.id} is absent.`);\n    }\n\n    dispatch({\n      type: NotesRecordsActions.REPLACE,\n      payload: record\n    });\n  };\n}\n\nexport function remove(id: string) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    if (!id || !records[id]) {\n      throw Error(`NoteRecord with the ID ${id} is absent.`);\n    }\n\n    dispatch({\n      type: NotesRecordsActions.REPLACE_ALL,\n      payload: utils.object.deleteProperty(id, records)\n    });\n  };\n}\n\nexport function updateOrInsert(record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    if (records[record.id]) {\n      dispatch(update(record));\n      return;\n    }\n\n    dispatch(insert(record));\n  };\n}\n","export type NoteEditorState = {\n  open: boolean;\n  id?: string;\n};\n\nexport const NoteEditorDefaultState = {\n  open: false,\n  id: undefined\n};\n\nexport enum NoteEditorStateActions {\n  REPLACE = \"Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Editor/Actions/REPLACE_ALL\"\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { NoteEditorStateActions } from \"./types\";\n\nexport function close() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE_ALL,\n      payload: {\n        open: false,\n        id: undefined\n      }\n    });\n  };\n}\n\nexport function open(id?: string) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE,\n      payload: {\n        open: true,\n        id\n      }\n    });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect, batch } from \"react-redux\";\n\nimport NoteEditor from \"./NoteEditor\";\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport { NoteRecord } from \"../../redux/notes/records/types\";\nimport { updateOrInsert } from \"../../redux/notes/records/actions\";\nimport { close, open } from \"../../redux/editor/actions\";\n\nfunction NoteEditorContainer(props: any) {\n  return (\n    <>\n      {props.open &&\n        ReactDOM.createPortal(\n          <NoteEditor {...props} />,\n          document.getElementById(\"note-editor-root\") as HTMLElement\n        )}\n    </>\n  );\n}\n\nfunction mapStateToProps(state: AppState) {\n  const { editor, settings } = state;\n  const { editor: editorSettings } = settings;\n  const { spellCheck, autoSave, saveAndClose } = editorSettings;\n\n  return {\n    open: editor.open,\n    id: editor.id,\n    spellCheck,\n    autoSave,\n    saveAndClose\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    updateOrInsert: (record: NoteRecord) =>\n      batch(() => {\n        dispatch(updateOrInsert(record));\n        dispatch(open(record.id));\n      }),\n    close: () => dispatch(close())\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoteEditorContainer);\n","import { connect } from \"react-redux\";\nimport { AppHeaderControls } from \"./AppHeaderControls\";\nimport { IDispatch } from \"../../../../redux/types\";\nimport { open } from \"../../../../redux/editor/actions\";\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    openNoteEditor: () => dispatch(open())\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AppHeaderControls);\n","import React from \"react\";\nimport { MdCreate, MdCreateNewFolder } from \"react-icons/md\";\n\nimport \"./AppHeaderControls.css\";\n\nexport function AppHeaderControls(props: any) {\n  return (\n    <div className=\"AppHeaderControls\">\n      <button disabled={true} title=\"Create directory\">\n        <MdCreateNewFolder />\n      </button>\n      <button title=\"Create file\" onClick={props.openNoteEditor}>\n        <MdCreate />\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./AppHeader.css\";\nimport { AppHeaderControlsContainer } from \"./components/AppHeaderControls\";\n\nexport default function AppHeader(props: any) {\n  return (\n    <header id=\"AppHeader\" className=\"AppHeader\">\n      <h1 className=\"title\">Notebook</h1>\n      <AppHeaderControlsContainer />\n    </header>\n  );\n}\n","import React from \"react\";\nimport { MdClose } from \"react-icons/md\";\n\nimport \"./SettingsDrawerHeader.css\";\n\nexport default function SettingsDrawerHeader(props: any) {\n  return (\n    <header className=\"SettingsDrawerHeader\">\n      <h3 className=\"SettingsDrawerHeader__title\">Settings</h3>\n      <button className=\"SettingsDrawerHeader__button\">\n        <MdClose />\n      </button>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./SettingsDrawerFooter.css\";\n\nexport default function SettingsDrawerFooter(props: any) {\n  return (\n    <footer className=\"SettingsDrawerFooter\">\n      <button className=\"SettingsDrawerFooter__button apply\">\n        <span>Apply</span>\n      </button>\n      <button className=\"SettingsDrawerFooter__button reset\">\n        <span>Reset</span>\n      </button>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nimport \"./Switch.css\";\n\nimport { SwitchProps } from \"./SwitchProps\";\n\nexport default function Switch(props: SwitchProps) {\n  return (\n    <label htmlFor={props.id} className=\"Switch\">\n      <input\n        id={props.id}\n        name={props.name}\n        type=\"checkbox\"\n        defaultChecked={props.defaultChecked}\n        checked={props.checked}\n        onChange={props.onChange}\n      />\n      <span className={`SwitchSlider ${props.rounded ? \"round\" : \"\"}`} />\n    </label>\n  );\n}\n","import React from \"react\";\nimport Switch from \"../Switch/Switch\";\n\nimport \"./LabeledSwitch.css\";\n\nexport default function LabeledSwitch(props: any) {\n  return (\n    <div className=\"LabeledSwitch\">\n      <label htmlFor={props.id}>{props.label}</label>\n      <Switch id={props.id} name={props.name} onChange={props.onChange} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./FormBlock.css\";\n\nexport default function FormBlock(props: any) {\n  return <div className=\"FormBlock\">{props.children}</div>;\n}\n","import React from \"react\";\n\nimport { FormBlock, LabeledSwitch } from \"../../../UI\";\n\nexport default function EditorSettings(props: any) {\n  return (\n    <div className=\"EditorSettings\">\n      <h4>Editor</h4>\n      <FormBlock>\n        <LabeledSwitch\n          id=\"auto-save\"\n          name=\"auto-save\"\n          label=\"Auto Save\"\n          onChange={() => undefined}\n        />\n      </FormBlock>\n      <FormBlock>\n        <LabeledSwitch\n          id=\"save-and-close\"\n          name=\"save-and-close\"\n          label=\"Save and Close\"\n          onChange={() => undefined}\n        />\n      </FormBlock>\n      <FormBlock>\n        <LabeledSwitch\n          id=\"spellcheck\"\n          name=\"spellcheck\"\n          label=\"Spell check\"\n          onChange={() => undefined}\n        />\n      </FormBlock>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./SettingsDrawer.css\";\n\nimport SettingsDrawerHeader from \"./components/Header/SettingsDrawerHeader\";\nimport SettingsDrawerFooter from \"./components/Footer/SettingsDrawerFooter\";\nimport EditorSettings from \"./components/EditorSettings/EditorSettings\";\n\nexport default function SettingsDrawer(props: any) {\n  return (\n    <div className=\"SettingsDrawer\">\n      <div className=\"SettingsDrawer__container\">\n        <SettingsDrawerHeader />\n        {/* FormComponent */}\n        <div style={{ flex: 1 }}>\n          <EditorSettings />\n        </div>\n        <SettingsDrawerFooter />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport SettingsDrawer from \"./SettingsDrawer\";\n\nfunction SettingsDrawerContainer(props: any) {\n  return (\n    <>\n      {ReactDOM.createPortal(\n        <SettingsDrawer {...props} />,\n        document.getElementById(\"settings-drawer-root\") as HTMLDivElement\n      )}\n    </>\n  );\n}\n\nexport default connect(null, null)(SettingsDrawerContainer);\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport NoteEditorContainer from \"./components/NoteEditor/NoteEditorContainer\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport SettingsDrawerContainer from \"./components/SettingsDrawer/SettingsDrawerContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      {/* Test component */}\n      <NoteEditorContainer />\n      {/* Test component */}\n      <SettingsDrawerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notesRecordsReducer from \"./records/reducer\";\n\nexport default combineReducers({\n  records: notesRecordsReducer\n});\n","import { NotesRecords, NotesRecordsActions } from \"./types\";\n\nexport default function notesRecordsReducer(\n  state: NotesRecords = {},\n  action: any\n): NotesRecords {\n  switch (action.type) {\n    case NotesRecordsActions.REPLACE:\n      return {\n        ...state,\n        [action.payload.id]: action.payload\n      };\n    case NotesRecordsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","export type EditorAppearance = {\n  backgroundColor: string;\n};\n\nexport type EditorSettingsState = {\n  autoSave?: boolean;\n  saveAndClose?: boolean;\n  appearance?: EditorAppearance;\n  spellCheck?: boolean;\n};\n\nexport const EditorSettingsDefaultState: EditorSettingsState = {\n  autoSave: true,\n  saveAndClose: true,\n  spellCheck: false\n};\n\nexport enum EditorSettingsActions {\n  REPLACE = \"REPLACE\",\n  REPLACE_ALL = \"REPLACE_ALL\"\n}\n","import { combineReducers } from \"redux\";\nimport editorSettingsReducer from \"./editor/reducer\";\n\nexport default combineReducers({\n  editor: editorSettingsReducer\n});\n","import {\n  EditorSettingsState,\n  EditorSettingsDefaultState,\n  EditorSettingsActions\n} from \"./types\";\n\nexport default function editorSettingsReducer(\n  state: EditorSettingsState = EditorSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case EditorSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case EditorSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notesReducers from \"./notes/reducers\";\nimport editorReducer from \"./editor/reducer\";\nimport settingsReducers from \"./settings/reducers\";\n\nexport default combineReducers({\n  notes: notesReducers,\n  editor: editorReducer,\n  settings: settingsReducers\n});\n","import {\n  NoteEditorState,\n  NoteEditorDefaultState,\n  NoteEditorStateActions\n} from \"./types\";\n\nexport default function editorReducer(\n  state: NoteEditorState = NoteEditorDefaultState,\n  action: any\n): NoteEditorState {\n  switch (action.type) {\n    case NoteEditorStateActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NoteEditorStateActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport appReducers from \"./reducers\";\n\nconst middlewares = [thunk];\n\nexport default createStore(\n  appReducers,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}