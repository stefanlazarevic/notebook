{"version":3,"sources":["components/UI/Button/index.ts","redux/overlays/types.ts","components/UI/Button/Button.tsx","utils/array.ts","utils/dom.ts","utils/editor.ts","utils/object.ts","utils/string.ts","utils/index.ts","redux/overlays/actions.ts","components/AppHeader/components/CreateNewFolderButton/index.ts","redux/editor/types.ts","components/AppHeader/components/CreateNewFolderButton/CreateNewFolderButton.tsx","redux/editor/actions.ts","components/AppHeader/components/CreateNewFileButton/index.ts","components/AppHeader/components/CreateNewFileButton/CreateNewFileButton.tsx","components/AppHeader/components/AppHeaderMenu/index.ts","components/AppHeader/components/AppHeaderMenu/AppHeaderMenu.tsx","components/AppHeader/index.ts","redux/notes/types.ts","components/AppHeader/AppHeader.tsx","redux/notes/actions.ts","components/Navigator/components/HomeButton/index.ts","components/Navigator/components/HomeButton/HomeButton.tsx","components/Navigator/components/BackButton/index.ts","components/Navigator/components/BackButton/BackButton.tsx","components/UI/Breadcrumb/Breadcrumb.tsx","components/UI/Breadcrumb/components/BreadcrumbElement/BreadcrumbElement.tsx","components/Navigator/components/AddressBar/components/Step/index.ts","components/Navigator/components/AddressBar/components/Step/Step.tsx","components/Navigator/components/AddressBar/components/RootStep/RootStep.tsx","components/Navigator/components/AddressBar/index.ts","components/Navigator/components/AddressBar/AddressBar.tsx","components/Navigator/components/HelpButton/index.ts","components/Navigator/components/HelpButton/HelpButton.tsx","components/Navigator/index.ts","components/Navigator/Navigator.tsx","components/AppEditor/components/ResizeButton/ResizeButton.tsx","components/AppEditor/components/CloseButton/CloseButton.tsx","components/AppEditor/components/NameInput/NameInput.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicator.tsx","components/AppEditor/layout/Header/Header.tsx","components/AppEditor/layout/Editor/Commands.ts","components/AppEditor/layout/Editor/Shortcuts.ts","components/AppEditor/components/EditorControlButton/EditorControlButton.tsx","components/AppEditor/components/EditorControls/EditorControls.tsx","components/AppEditor/layout/Editor/Editor.tsx","components/AppEditor/components/ChangeIndicator/ChangeIndicatorProps.ts","components/AppEditor/AppEditor.tsx","components/AppEditor/index.tsx","components/Overlay/template/OverlayHeader/OverlayHeader.tsx","components/Overlay/template/OverlayBody/OverlayBody.tsx","components/Overlay/template/OverlayFooter/OverlayFooter.tsx","components/UI/FormInput/FormInput.tsx","components/Overlay/OverlayMap.ts","components/Overlay/components/DeleteRecordOverlay/DeleteRecordOverlay.tsx","components/Overlay/components/RenameRecordOverlay/RenameRecordOverlay.tsx","components/Overlay/components/CreateGroupOverlay/CreateGroupOverlay.tsx","components/Overlay/components/RenameGroupOverlay/RenameGroupOverlay.tsx","components/Overlay/Overlay.tsx","components/Overlay/index.tsx","components/RecordPrint/RecordPrint.tsx","redux/print/actions.ts","components/RecordPrint/index.tsx","components/NotesTable/components/Group/Group.tsx","components/NotesTable/components/Record/Record.tsx","components/NotesTable/components/NoteRow/NoteRow.tsx","components/NotesTable/components/Ribbon/components/ItemCounter/ItemCounter.tsx","components/NotesTable/components/Ribbon/Ribbon.tsx","components/NotesTable/NotesTable.tsx","components/Aside/components/Button/AsideButton.tsx","components/Aside/components/Divider/AsideDivider.tsx","components/Aside/components/HomeButton/HomeButton.tsx","components/Aside/Aside.tsx","components/ContextMenu/TableMenu/TableMenu.tsx","components/ContextMenu/FolderMenu/FolderMenu.tsx","components/ContextMenu/FileMenu/FileMenu.tsx","redux/tabs/types.ts","redux/tabs/actions.ts","components/FolderTabs/components/Tab/index.ts","components/FolderTabs/components/Tab/Tab.tsx","components/FolderTabs/components/NewTabButton/index.ts","components/FolderTabs/components/NewTabButton/NewTabButton.tsx","components/FolderTabs/index.ts","components/FolderTabs/FolderTabs.tsx","components/ContextMenu/TabMenu/TabMenu.tsx","App.tsx","serviceWorker.ts","redux/notes/groups/types.ts","redux/notes/records/types.ts","data/instructionsContentState.ts","redux/notes/reducers.ts","redux/notes/group/reducer.ts","redux/notes/groups/reducer.ts","redux/notes/records/reducer.ts","redux/settings/editor/types.ts","redux/settings/notes/types.ts","redux/settings/reducers.ts","redux/settings/editor/reducer.ts","redux/settings/notes/reducer.ts","redux/reducers.ts","redux/tabs/reducer.ts","redux/editor/reducer.ts","redux/overlays/reducer.ts","redux/print/reducer.ts","redux/store.ts","index.tsx"],"names":["Button","OverlayType","OverlaysActions","props","classnames","className","join","children","first","array","length","last","chunk","size","Error","result","Array","from","Math","ceil","index","i","j","push","swap","sourceIndex","targetIndex","output","source","target","mapReversed","callback","map","replaceAtIndex","newValue","slice","concat","removeAtIndex","getTabbableElements","parentNode","tabbableElements","document","getElementById","querySelectorAll","clear","editorState","selection","getSelection","contentState","getCurrentContent","unstyledContentState","getCurrentInlineStyle","reduce","state","style","Modifier","removeInlineStyle","EditorState","setBlockType","truncate","characterCount","blocks","getBlockMap","truncatedBlocks","count","isTruncated","forEach","block","getLength","truncatedText","getText","ContentState","createFromText","getFirstBlock","createFromBlockArray","deleteProperty","key","generateRandom","characters","randomIndex","floor","random","charAt","isString","value","dom","editor","object","string","showOverlay","type","dispatch","getState","a","OPEN_OVERLAY","payload","overlayID","utils","closeOverlay","CLOSE_OVERLAY","CreateNewFolderButton","NoteEditorStateActions","useDispatch","label","onClick","CREATE_GROUP","title","aria-label","aria-hidden","NoteEditorDefaultState","open","id","undefined","openEditor","REPLACE","CreateNewFileButton","AppHeaderMenu","AppHeader","NotesActions","openGroup","targetGroupID","OPEN_GROUP","updateRecord","changedRecord","notes","records","record","parent","UPDATE_RECORD","removeGroup","groups","group","REMOVE_GROUP","parentGroupId","path","moveToGroup","targetGroup","MOVE_GROUP","parentGroupID","MOVE_RECORD","ungroupGroup","currentGroupID","currentGroup","ungroupRecord","HomeButton","BackButton","currentGroupId","useSelector","disabled","Boolean","Breadcrumb","breadcrumb","useRef","breadcrumbElements","firstVisibleIndex","hiddenWidth","resize","elementOverflow","current","element","offsetWidth","getMarginRight","getComputedStyle","hideElement","visibleWidth","width","clientWidth","pop","showElement","scrollWidth","window","marginRight","parseFloat","classList","remove","add","useEffect","getElementsByClassName","addEventListener","removeEventListener","ref","BreadcrumbElement","Step","tabIndex","role","RootStep","AddressBar","folderId","HelpButton","Navigator","data-open","ResizeButton","event","maximized","CloseButton","forwardRef","inputReference","useImperativeHandle","getValue","placeholder","defaultValue","onChange","autoFocus","ChangeIndicator","data-state","EditorCommand","indicatorState","onResize","onClose","handleKeyCommands","updateEditorState","command","BOLD","RichUtils","toggleInlineStyle","ITALIC","UNDERLINE","STRIKETHROUGH","UNDO","undo","REDO","redo","SAVE","CLEAR","KeycodeMap","9","13","27","32","46","66","67","73","83","85","87","97","113","keyBindingFunction","isControlKey","ctrlKey","isShiftKey","shiftKey","keyCode","getDefaultKeyBinding","EditorControlButton","onMouseDown","data-active","active","EditorControls","handleControlButtonClick","preventDefault","inlineStyles","has","ChangeIndicatorState","useState","rawContentState","createWithContent","convertFromRaw","createEmpty","setEditorState","draftEditorReference","newEditorState","equals","focusEditor","focus","blurEditor","blur","getPlainText","getRawDraftContentState","convertToRaw","Draft","keyBindingFn","handleKeyCommand","spellCheck","AppEditor","setMaximized","IDLE","setIndicatorState","nameInputReference","editorReference","saveTimeoutReference","save","content","entityMap","createdAt","Date","now","onSave","saveAndClose","autoSave","closeEditor","SAVED","onUpdate","updatedAt","handleDetectedChange","UNSAVED","clearTimeout","setTimeout","onKeyDown","data-maximized","connect","settings","editorSettings","REPLACE_ALL","batch","CREATE_RECORD","createRecord","createPortal","OverlayHeader","OverlayBody","OverlayFooter","name","autoComplete","OverlayMap","Map","set","DELETE_RECORD","recordID","REMOVE_RECORD","RENAME_RECORD","titleReference","updatedRecord","nameReference","create","createNewGroup","RENAME_GROUP","updatedGroup","UPDATE_GROUP","updateGroup","Overlay","overlayTabElements","close","React","Children","child","cloneElement","overlays","overlay","OverlayComponent","get","RecordPrint","dangerouslySetInnerHTML","__html","printHTML","queuePrintRecords","ids","print","html","stateToHTML","clearPrintQueue","titleBeforePrinting","Group","rename","ungroup","holdToDisplay","collect","attributes","selected","getRowWidth","onDoubleClick","draggable","onDragOver","onDragStart","dataTransfer","setData","JSON","stringify","onDrop","data","parse","getData","floatingID","getColumnWidth","UNIX_timestamp","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","hours","getHours","minutes","getMinutes","HH","strTime","timeConverter","Record","NoteRow","justifyContent","ItemCounter","Ribbon","NotesTable","rowRenderer","isScrolling","rowProps","height","rowHeight","headerHeight","minColumnWidth","autoScroll","listProps","overscanCount","useIsScrolling","AsideButton","text","AsideDivider","isHome","Aside","fontWeight","padding","marginBottom","position","right","TableMenu","FolderMenu","divider","FileMenu","TabActions","DEFAULT_TAB_STATE","currentTabIndex","createNewTab","tabs","CREATE_TAB","Tab","duplicate","console","log","stopPropagation","CLOSE_TAB","closeOther","closeAfter","renderTag","OPEN_TAB","NewTabButton","FolderTabs","_","TabMenu","App","defaultSize","maxSize","display","flexDirection","location","hostname","match","NotesGroupsActions","DEFAULT_RECORDS_STATE","instruction","depth","inlineStyleRanges","offset","entityRanges","DEFAULT_NOTES_GROUPS_STATE","root","fakultet","ostalo","combineReducers","action","filter","REORDER","EditorSettingsActions","EditorSettingsDefaultState","NotesSettingsActions","NotesSettingsDefaultState","softDelete","notesReducers","settingsReducers","middlewares","thunk","createStore","appReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d79917c.chunk.js","sourcesContent":["import Button from \"./Button\";\n\nexport default Button;\n","import { NoteRecordID } from \"../notes/records/types\";\nimport { NoteGroupID } from \"../notes/groups/types\";\n\nexport enum OverlayType {\n  DELETE_RECORD,\n  RENAME_RECORD,\n  CREATE_GROUP,\n  RENAME_GROUP\n}\n\nexport type OverlayID = string;\n\nexport interface Overlay {\n  overlayID: OverlayID;\n  type: OverlayType;\n\n  id?: NoteRecordID | NoteGroupID;\n}\n\nexport type OverlayState = Overlay[];\n\nexport enum OverlaysActions {\n  OPEN_OVERLAY = \"Overlays/Actions/OPEN_OVERLAY\",\n  CLOSE_OVERLAY = \"Overlays/Actions/CLOSE_OVERLAY\"\n}\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nimport { ButtonProps } from \"./ButtonProps\";\n\nexport default function Button(props: ButtonProps) {\n  const classnames = [\"Button\", props.className];\n\n  return (\n    <button {...props} className={classnames.join(\"\")}>\n      {props.children}\n    </button>\n  );\n}\n","type MapCallbackFunction = (element: any, index: number, array: any[]) => void;\n\nexport function first(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[0];\n}\n\nexport function last(array: any[] = []): any {\n  if (!array || array.length <= 0) {\n    return undefined;\n  }\n\n  return array[array.length - 1];\n}\n\nexport function chunk(array: any[] = [], size: number) {\n  if (size < 1) {\n    throw Error(\"Chunk size must be greater than one.\");\n  }\n\n  // const result = Array(, () => []);\n  const result: any[][] = Array.from(\n    { length: Math.ceil(array.length / size) },\n    () => []\n  );\n  let index = 0;\n\n  for (let i = 0; i < result.length; i++) {\n    const chunk = result[i];\n\n    for (let j = 0; j < size; j++) {\n      if (typeof array[index] !== \"undefined\") {\n        chunk.push(array[index++]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function swap(\n  sourceIndex: number,\n  targetIndex: number,\n  array: any[] = []\n) {\n  if (sourceIndex < 0 || targetIndex < 0) {\n    throw Error(\"Swap indexes must be greater than or equal to 0.\");\n  }\n\n  if (sourceIndex >= array.length || targetIndex >= array.length) {\n    throw Error(\"Swap indexes must be less than the size of array.\");\n  }\n\n  const output = Array(array.length);\n\n  const source = array[targetIndex];\n  const target = array[sourceIndex];\n\n  for (let i = 0; i < array.length; i++) {\n    if (i === sourceIndex) {\n      output[i] = source;\n      continue;\n    }\n\n    if (i === targetIndex) {\n      output[i] = target;\n      continue;\n    }\n\n    output[i] = array[i];\n  }\n\n  return output;\n}\n\nexport function mapReversed(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = array.length - 1; i > -1; i--) {\n    output[array.length - i - 1] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n\nexport function map(callback: MapCallbackFunction, array: any = []) {\n  const output = Array(array.length);\n\n  for (let i = 0; i < array.length; i++) {\n    output[i] = callback(array[i], i, array);\n  }\n\n  return output;\n}\n\nexport function replaceAtIndex(index: number, array: any[], newValue: any) {\n  return array.slice(0, index).concat(newValue, array.slice(index + 1));\n}\n\nexport function removeAtIndex(index: number, array: any[]) {\n  return array.slice(0, index).concat(array.slice(index + 1));\n}\n","export function getTabbableElements(parentNode: HTMLElement | string) {\n  const tabbableElements = [\n    \"a[href]\",\n    \"area[href]\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"button:not([disabled])\",\n    \"[contenteditable]\",\n    '[tabindex]:not([tabindex=\"-1\"])',\n    \"audio[controls]\",\n    \"video[controls]\"\n  ];\n\n  if (parentNode && document) {\n    if (typeof parentNode === \"string\") {\n      return document\n        .getElementById(parentNode)\n        ?.querySelectorAll(tabbableElements.join(\",\"));\n    }\n\n    return parentNode.querySelectorAll(tabbableElements.join(\",\"));\n  }\n}\n","import { EditorState, Modifier, ContentState, ContentBlock } from \"draft-js\";\n\nexport function clear(editorState: EditorState): EditorState {\n  const selection = editorState.getSelection();\n  const contentState = editorState.getCurrentContent();\n  const styles = editorState.getCurrentInlineStyle();\n\n  const unstyledContentState = styles.reduce((state, style) => {\n    return Modifier.removeInlineStyle(\n      state as ContentState,\n      selection,\n      style as string\n    );\n  }, contentState);\n\n  return EditorState.push(\n    editorState,\n    Modifier.setBlockType(unstyledContentState, selection, \"unstyled\"),\n    \"change-block-type\"\n  );\n}\n\nexport function truncate(\n  contentState: ContentState,\n  characterCount: number\n): ContentState {\n  const blocks = contentState.getBlockMap();\n  const truncatedBlocks: ContentBlock[] = [];\n\n  let count = 0;\n  let isTruncated = false;\n\n  blocks.forEach(block => {\n    if (!isTruncated && block) {\n      const length = block.getLength();\n      if (count + length > characterCount) {\n        isTruncated = true;\n        const truncatedText = block.getText().slice(0, characterCount - count);\n        const state = ContentState.createFromText(`${truncatedText}...`);\n        truncatedBlocks.push(state.getFirstBlock());\n      } else {\n        truncatedBlocks.push(block);\n      }\n      count += length + 1;\n    }\n  });\n\n  if (isTruncated) {\n    return ContentState.createFromBlockArray(truncatedBlocks);\n  }\n\n  return contentState;\n}\n","// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const deleteProperty = (key: string, { [key]: _, ...newObj }) => newObj;\n","export function generateRandom(length: number = 16): string {\n  let output = \"\";\n\n  if (length <= 0) {\n    return output;\n  }\n\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  while (output.length < length) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    output += characters.charAt(randomIndex);\n  }\n\n  return output;\n}\n\nexport function isString(value: any): boolean {\n  return typeof value === \"string\";\n}\n","import * as array from \"./array\";\nimport * as dom from \"./dom\";\nimport * as editor from \"./editor\";\nimport * as object from \"./object\";\nimport * as string from \"./string\";\n\nexport default {\n  array,\n  dom,\n  editor,\n  object,\n  string\n};\n","import { IDispatch, AppState } from \"../types\";\nimport { OverlaysActions, OverlayType, OverlayID } from \"./types\";\nimport utils from \"../../utils\";\n\nexport function showOverlay(type: OverlayType, props?: any) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.OPEN_OVERLAY,\n      payload: {\n        ...props,\n        overlayID: utils.string.generateRandom(3),\n        type\n      }\n    });\n  };\n}\n\nexport function closeOverlay(overlayID: OverlayID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: OverlaysActions.CLOSE_OVERLAY,\n      payload: overlayID\n    });\n  };\n}\n","import CreateNewFolderButton from \"./CreateNewFolderButton\";\n\nexport default CreateNewFolderButton;\n","export type NoteEditorState = {\n  open: boolean;\n  id?: string;\n};\n\nexport const NoteEditorDefaultState = {\n  open: false,\n  id: undefined\n};\n\nexport enum NoteEditorStateActions {\n  REPLACE = \"Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Editor/Actions/REPLACE_ALL\"\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MdCreateNewFolder } from \"react-icons/md\";\n\nimport Button from \"../../../UI/Button\";\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\nimport { OverlayType } from \"../../../../redux/overlays/types\";\n\nexport default function CreateNewFolderButton() {\n  const dispatch = useDispatch();\n\n  const label = \"Create new folder\";\n\n  function onClick() {\n    dispatch(showOverlay(OverlayType.CREATE_GROUP));\n  }\n\n  return (\n    <Button onClick={onClick} title={label} aria-label={label}>\n      <MdCreateNewFolder aria-hidden={true} />\n    </Button>\n  );\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { NoteEditorStateActions } from \"./types\";\nimport { NoteRecordID } from \"../notes/records/types\";\n\nexport function closeEditor() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE_ALL,\n      payload: {\n        open: false,\n        id: undefined\n      }\n    });\n  };\n}\n\nexport function openEditor(id?: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NoteEditorStateActions.REPLACE,\n      payload: {\n        open: true,\n        id\n      }\n    });\n  };\n}\n","import CreateNewFileButton from \"./CreateNewFileButton\";\n\nexport default CreateNewFileButton;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { openEditor } from \"../../../../redux/editor/actions\";\nimport Button from \"../../../UI/Button\";\nimport { MdNoteAdd } from \"react-icons/md\";\n\nexport default function CreateNewFileButton() {\n  const dispatch = useDispatch();\n\n  const label = \"Create new note\";\n\n  function onClick() {\n    dispatch(openEditor());\n  }\n\n  return (\n    <Button onClick={onClick} title={label} aria-label={label}>\n      <MdNoteAdd aria-hidden={true} />\n    </Button>\n  );\n}\n","import AppHeaderMenu from \"./AppHeaderMenu\";\n\nexport default AppHeaderMenu;\n","import React from \"react\";\n\nimport \"./AppHeaderMenu.css\";\n\nimport AppHeaderMenuProps from \"./AppHeaderMenuProps\";\nimport CreateNewFolderButton from \"../CreateNewFolderButton\";\nimport CreateNewFileButton from \"../CreateNewFileButton\";\n\nexport default function AppHeaderMenu(props: AppHeaderMenuProps) {\n  return (\n    <div className=\"AppHeaderMenu\">\n      <CreateNewFolderButton />\n      <CreateNewFileButton />\n    </div>\n  );\n}\n","import AppHeader from \"./AppHeader\";\n\nexport default AppHeader;\n","import { NotesRecords } from \"./records/types\";\nimport { NotesGroups, NoteGroupID } from \"./groups/types\";\n\nexport type NotesState = {\n  currentGroupID: NoteGroupID;\n  groups: NotesGroups;\n  records: NotesRecords;\n};\n\nexport enum NotesActions {\n  OPEN_GROUP = \"Notes/Actions/Group/OPEN_GROUP\",\n  CREATE_RECORD = \"Notes/Actions/CREATE_RECORD\",\n  REMOVE_RECORD = \"Notes/Actions/REMOVE_RECORD\",\n  UPDATE_RECORD = \"Notes/Actions/UPDATE_RECORD\",\n  CREATE_GROUP = \"Notes/Actions/CREATE_GROUP\",\n  UPDATE_GROUP = \"Notes/Actions/UPDATE_GROUP\",\n  REMOVE_GROUP = \"Notes/Actions/REMOVE_GROUP\",\n  MOVE_GROUP = \"Notes/Actions/MOVE_GROUP\",\n  MOVE_RECORD = \"Notes/Actions/MOVE_RECORD\",\n  REORDER = \"Notes/Actions/REORDER\"\n}\n","import React from \"react\";\n\nimport \"./AppHeader.css\";\n\nimport AppHeaderProps from \"./AppHeaderProps\";\nimport AppHeaderMenu from \"./components/AppHeaderMenu\";\n\nexport default function AppHeader(props: AppHeaderProps) {\n  return (\n    <header id=\"AppHeader\" className=\"AppHeader\">\n      <h1 className=\"AppHeader__title\">Notebook</h1>\n      <AppHeaderMenu />\n    </header>\n  );\n}\n","import { NoteGroupID, NoteGroup } from \"./groups/types\";\nimport { IDispatch, AppState } from \"../types\";\nimport { NotesActions } from \"./types\";\nimport { NoteRecord, NoteRecordID } from \"./records/types\";\nimport utils from \"../../utils\";\n\n/**\n * Navigate to the group.\n *\n * @param targetGroupID A group id which should be open.\n */\nexport function openGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: targetGroupID\n    });\n  };\n}\n\n/**\n * Navigate to the parent group.\n *\n * @param sourceGroupID A group id whos parent should be opened.\n */\nexport function openParentGroup(sourceGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[sourceGroupID];\n\n    if (group && group.path && group.path.length > 0) {\n      dispatch({\n        type: NotesActions.OPEN_GROUP,\n        payload: utils.array.last(group.path)\n      });\n    }\n  };\n}\n\n/**\n * Navigate to the root group.\n */\nexport function openRootGroup() {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: NotesActions.OPEN_GROUP,\n      payload: \"root\"\n    });\n  };\n}\n\n/**\n * Insert newly created record in the redux state.\n *\n * @param targetGroupID Group in which new record should be put.\n * @param record NoteRecord object\n */\nexport function createRecord(targetGroupID: NoteGroupID, record: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records, groups } = notes;\n    const group = groups[targetGroupID];\n\n    if (!record.id || records[record.id]) {\n      throw Error(`NoteRecord with the ID ${record.id} already exists.`);\n    }\n\n    if (!group) {\n      throw Error(`NoteGroup with the ID ${targetGroupID} is absent`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_RECORD,\n      payload: {\n        ...record,\n        parent: targetGroupID\n      }\n    });\n  };\n}\n\n/**\n * Remove existing record.\n *\n * @param recordID Record id to remove.\n */\nexport function removeRecord(recordID: NoteRecordID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n    const record = records[recordID];\n\n    if (!recordID) {\n      throw Error(\"NoteRecord ID is absent.\");\n    }\n\n    if (!record) {\n      throw Error(`NoteRecord with the ID ${recordID} is absent.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_RECORD,\n      payload: record\n    });\n  };\n}\n\n/**\n * Update existing record.\n *\n * @param changedRecord Modified NoteRecord object.\n */\nexport function updateRecord(changedRecord: NoteRecord) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { records } = notes;\n\n    const record = records[changedRecord.id];\n\n    if (!record) {\n      throw Error(`NoteRecord with ID ${changedRecord.id} is absent.`);\n    }\n\n    if (record.parent !== changedRecord.parent) {\n      throw Error(\n        `Changing record location is not permitted. If your intention was moving record to another group, consider using the \"moveToGroup\" function.`\n      );\n    }\n\n    dispatch({\n      type: NotesActions.UPDATE_RECORD,\n      payload: changedRecord\n    });\n  };\n}\n\n/**\n * Create new group.\n *\n * @param targetGroupID Group ID where new group should be inserted.\n * @param group NoteGroup object.\n */\nexport function createNewGroup(targetGroupID: NoteGroupID, group: NoteGroup) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const targetGroup = groups[targetGroupID];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (groups[group.id]) {\n      throw Error(`NoteGroup with ID ${group.id} already exist.`);\n    }\n\n    dispatch({\n      type: NotesActions.CREATE_GROUP,\n      payload: {\n        ...group,\n        targetGroupID\n      }\n    });\n  };\n}\n\nexport function updateGroup(updatedGroup: NoteGroup) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n    const group = groups[updatedGroup.id];\n\n    if (!group) {\n      throw Error(`NoteGroup with ID ${updatedGroup.id} is absent.`);\n    }\n\n    dispatch({\n      type: NotesActions.UPDATE_GROUP,\n      payload: {\n        ...updatedGroup,\n        id: group.id,\n        children: group.children\n      }\n    });\n  };\n}\n\nexport function removeGroup(targetGroupID: NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups } = notes;\n\n    const group = groups[targetGroupID];\n\n    if (!group) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (group.children.length > 0) {\n      throw Error(`NoteGroup must be empty before removing.`);\n    }\n\n    dispatch({\n      type: NotesActions.REMOVE_GROUP,\n      payload: {\n        ...group,\n        parentGroupId: utils.array.last(group.path)\n      }\n    });\n  };\n}\n\nexport function moveToGroup(\n  targetGroupID: NoteGroupID,\n  id: NoteGroupID | NoteRecordID\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { groups, records } = notes;\n    const targetGroup = groups[targetGroupID];\n    const group = groups[id];\n    const record = records[id];\n\n    if (!targetGroup) {\n      throw Error(`NoteGroup with ID ${targetGroupID} is absent.`);\n    }\n\n    if (!group && !record) {\n      throw Error(`ID ${id} does not belong to any NoteRecord or NoteGroup.`);\n    }\n\n    if (group) {\n      dispatch({\n        type: NotesActions.MOVE_GROUP,\n        payload: {\n          ...group,\n          path: targetGroup.path.concat(targetGroup.id),\n          parentGroupID: utils.array.last(group.path) || \"root\",\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n\n    if (record) {\n      dispatch({\n        type: NotesActions.MOVE_RECORD,\n        payload: {\n          ...record,\n          targetGroupID: targetGroupID\n        }\n      });\n    }\n  };\n}\n\nexport function ungroupGroup(id: NoteRecordID | NoteGroupID) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const currentGroup = groups[currentGroupID];\n\n    if (!currentGroup.path || currentGroup.path.length < 1) {\n      throw Error(`Ungroup is not allowed in root group.`);\n    }\n\n    const targetGroup = groups[utils.array.last(currentGroup.path)];\n\n    dispatch(moveToGroup(targetGroup.id, id));\n  };\n}\n\nexport const ungroupRecord = ungroupGroup;\n\nexport function swapCurrentGroupChildren(\n  sourceIndex: number,\n  targetIndex: number\n) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { notes } = getState();\n    const { currentGroupID, groups } = notes;\n\n    const group = groups[currentGroupID];\n\n    dispatch({\n      type: NotesActions.REORDER,\n      payload: {\n        ...group,\n        children: utils.array.swap(sourceIndex, targetIndex, group.children)\n      }\n    });\n  };\n}\n","import HomeButton from \"./HomeButton\";\n\nexport default HomeButton;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MdHome } from \"react-icons/md\";\n\nimport { openGroup } from \"../../../../redux/notes/actions\";\nimport Button from \"../../../UI/Button\";\n\nexport default function HomeButton() {\n  const dispatch = useDispatch();\n\n  const label = \"Open root folder\";\n\n  function onClick() {\n    dispatch(openGroup(\"root\"));\n  }\n\n  return (\n    <Button onClick={onClick} title={label} aria-label={label}>\n      <MdHome aria-hidden={true} />\n    </Button>\n  );\n}\n","import BackButton from \"./BackButton\";\n\nexport default BackButton;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MdArrowBack } from \"react-icons/md\";\n\nimport { AppState } from \"../../../../redux/types\";\nimport { openGroup } from \"../../../../redux/notes/actions\";\nimport utils from \"../../../../utils\";\nimport Button from \"../../../UI/Button\";\n\nexport default function BackButton() {\n  const dispatch = useDispatch();\n\n  const label = \"Open parent folder\";\n\n  const currentGroupId = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const parentGroupId = useSelector((state: AppState) =>\n    utils.array.last(state.notes.groups[currentGroupId].path)\n  );\n\n  function onClick() {\n    if (parentGroupId) {\n      dispatch(openGroup(parentGroupId));\n    }\n  }\n\n  return (\n    <Button\n      title={label}\n      aria-label={label}\n      onClick={onClick}\n      disabled={!Boolean(parentGroupId)}\n    >\n      <MdArrowBack aria-hidden={true} />\n    </Button>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\n\nimport \"./Breadcrumb.css\";\n\nexport default function Breadcrumb(props: any) {\n  const breadcrumb = useRef<HTMLDivElement>(null);\n  const breadcrumbElements = useRef<HTMLCollectionOf<HTMLDivElement>>(null);\n  const firstVisibleIndex = useRef<number>(0);\n  const hiddenWidth = useRef<number[]>([]);\n\n  function resize() {\n    if (elementOverflow()) {\n      while (elementOverflow()) {\n        if (breadcrumbElements.current) {\n          if (firstVisibleIndex.current > breadcrumbElements.current.length) {\n            return;\n          }\n\n          const element = breadcrumbElements.current[firstVisibleIndex.current];\n\n          if (hiddenWidth.current) {\n            hiddenWidth.current.push(\n              element.offsetWidth + getMarginRight(getComputedStyle(element))\n            );\n          }\n\n          hideElement(firstVisibleIndex.current++);\n        }\n      }\n    } else {\n      if (hiddenWidth.current && breadcrumb.current) {\n        if (hiddenWidth.current.length > 0) {\n          if (breadcrumbElements.current) {\n            const visibleWidth = Array.from(breadcrumbElements.current)\n              .slice(hiddenWidth.current.length)\n              .reduce((width, element) => {\n                return (\n                  width +\n                  element.offsetWidth +\n                  getMarginRight(getComputedStyle(element))\n                );\n              }, 0);\n\n            while (\n              visibleWidth +\n                hiddenWidth.current[hiddenWidth.current.length - 1] <\n              breadcrumb.current.clientWidth\n            ) {\n              hiddenWidth.current.pop();\n              showElement(--firstVisibleIndex.current);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function elementOverflow() {\n    if (!breadcrumb.current) {\n      return false;\n    }\n\n    return breadcrumb.current.scrollWidth > breadcrumb.current.clientWidth;\n  }\n\n  function getComputedStyle(\n    element: HTMLDivElement\n  ): CSSStyleDeclaration | undefined {\n    if (window) {\n      return window.getComputedStyle(element);\n    }\n\n    return undefined;\n  }\n\n  function getMarginRight(style?: CSSStyleDeclaration): number {\n    if (!style || !style.marginRight) {\n      return 0;\n    }\n\n    return parseFloat(style.marginRight);\n  }\n\n  function showElement(index: number) {\n    if (breadcrumbElements.current) {\n      if (breadcrumbElements.current[index]) {\n        breadcrumbElements.current[index].classList.remove(\"hidden\");\n      }\n    }\n  }\n\n  function hideElement(index: number) {\n    if (breadcrumbElements.current) {\n      if (breadcrumbElements.current[index]) {\n        breadcrumbElements.current[index].classList.add(\"hidden\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (breadcrumb && breadcrumb.current) {\n      // @ts-ignore\n      breadcrumbElements.current = breadcrumb.current.getElementsByClassName(\n        \"BreadcrumbElement\"\n      )!;\n    }\n\n    if (window) {\n      window.addEventListener(\"resize\", resize);\n      resize();\n    }\n\n    return function componentWillUnmount() {\n      if (window) {\n        window.removeEventListener(\"resize\", resize);\n      }\n    };\n  }, []);\n\n  return (\n    <div ref={breadcrumb} className=\"Breadcrumb\">\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./BreadcrumbElement.css\";\n\nimport BreadcrumbElementProps from \"./BreadcrumbElementProps\";\n\nexport default function BreadcrumbElement(props: BreadcrumbElementProps) {\n  return (\n    <div {...props} className=\"BreadcrumbElement\">\n      {props.children}\n    </div>\n  );\n}\n","import Step from \"./Step\";\n\nexport default Step;\n","import React from \"react\";\n\nimport BreadcrumbElement from \"../../../../../UI/Breadcrumb/components/BreadcrumbElement/BreadcrumbElement\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../../../../redux/types\";\nimport { openGroup } from \"../../../../../../redux/notes/actions\";\n\nexport default function Step(props: any) {\n  const dispatch = useDispatch();\n\n  const title = useSelector(\n    (state: AppState) => state.notes.groups[props.id].title\n  );\n\n  function onClick() {\n    dispatch(openGroup(props.id));\n  }\n\n  return (\n    <BreadcrumbElement\n      tabIndex={props.tabIndex}\n      role=\"link\"\n      title={title}\n      onClick={onClick}\n    >\n      {title}\n    </BreadcrumbElement>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MdComputer } from \"react-icons/md\";\n\nimport BreadcrumbElement from \"../../../../../UI/Breadcrumb/components/BreadcrumbElement/BreadcrumbElement\";\nimport { openGroup } from \"../../../../../../redux/notes/actions\";\n\nexport default function RootStep(props: any) {\n  const dispatch = useDispatch();\n\n  const label = \"Open root folder\";\n\n  function open() {\n    dispatch(openGroup(\"root\"));\n  }\n\n  return (\n    <BreadcrumbElement\n      onClick={open}\n      tabIndex={props.tabIndex}\n      role=\"link\"\n      title={label}\n      aria-label={label}\n    >\n      <MdComputer aria-hidden={true} />\n    </BreadcrumbElement>\n  );\n}\n","import AddressBar from \"./AddressBar\";\n\nexport default AddressBar;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./AddressBar.css\";\n\nimport { AppState } from \"../../../../redux/types\";\nimport Breadcrumb from \"../../../UI/Breadcrumb/Breadcrumb\";\n\nimport Step from \"./components/Step\";\nimport RootStep from \"./components/RootStep/RootStep\";\nimport { NoteGroupID } from \"../../../../redux/notes/groups/types\";\n\nexport default function AddressBar(props: any) {\n  const currentGroupId = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const path = useSelector(\n    (state: AppState) => state.notes.groups[currentGroupId].path\n  ).slice(1);\n\n  if (currentGroupId !== \"root\") {\n    path.push(currentGroupId);\n  }\n\n  return (\n    <div className=\"AddressBar\">\n      <Breadcrumb>\n        <RootStep tabIndex={0} />\n        {path.map((folderId: NoteGroupID, index: number) => {\n          return (\n            <Step\n              key={folderId}\n              id={folderId}\n              tabIndex={index === path.length - 1 ? -1 : 0}\n            />\n          );\n        })}\n      </Breadcrumb>\n    </div>\n  );\n}\n","import HelpButton from \"./HelpButton\";\n\nexport default HelpButton;\n","import React from \"react\";\nimport { FiHelpCircle } from \"react-icons/fi\";\n\nimport Button from \"../../../UI/Button\";\n\nexport default function HelpButton() {\n  const label = \"Help\";\n\n  return (\n    <Button title={label} aria-label={label}>\n      <FiHelpCircle aria-hidden={true} />\n    </Button>\n  );\n}\n","import Navigator from \"./Navigator\";\n\nexport default Navigator;\n","import React from \"react\";\n\nimport \"./Navigator.css\";\n\nimport HomeButton from \"./components/HomeButton\";\nimport BackButton from \"./components/BackButton\";\nimport AddressBar from \"./components/AddressBar\";\nimport HelpButton from \"./components/HelpButton\";\n\nexport default function Navigator() {\n  return (\n    <div className=\"Navigator\" data-open={true}>\n      <BackButton />\n      <HomeButton />\n      <AddressBar />\n      <HelpButton />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FiMinimize, FiMaximize } from \"react-icons/fi\";\n\nimport \"./ResizeButton.css\";\n\nimport { ResizeButtonProps } from \"./ResizeButtonProps\";\n\nexport default function ResizeButton(props: ResizeButtonProps) {\n  function handleResize(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(!props.maximized);\n    }\n  }\n\n  return (\n    <button\n      className=\"ResizeButton\"\n      onClick={handleResize}\n      title={`${props.maximized ? \"Minimize\" : \"Maximize\"} Editor`}\n    >\n      {props.maximized ? <FiMinimize /> : <FiMaximize />}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./CloseButton.css\";\n\nimport { MdClose } from \"react-icons/md\";\n\nexport default function CloseButton(props: any) {\n  return (\n    <button\n      className=\"CloseButton\"\n      title=\"Close Editor\"\n      onClick={props.onClick}\n    >\n      <MdClose />\n    </button>\n  );\n}\n","import React, { forwardRef, useRef, useImperativeHandle } from \"react\";\n\nimport \"./NameInput.css\";\n\nimport { NameInputProps } from \"./NameInputProps\";\nimport { NameInputReference } from \"../../AppEditorReferences\";\n\nexport default forwardRef((props: NameInputProps, ref) => {\n  const inputReference = useRef<HTMLInputElement>(null);\n\n  useImperativeHandle(\n    ref,\n    (): NameInputReference => ({\n      getValue: (): string => {\n        if (inputReference.current) {\n          return inputReference.current.value;\n        }\n\n        return \"\";\n      }\n    })\n  );\n\n  return (\n    <input\n      ref={inputReference}\n      className=\"NameInput\"\n      placeholder=\"New title\"\n      type=\"text\"\n      defaultValue={props.defaultValue}\n      onChange={props.onChange}\n      autoFocus={true}\n    />\n  );\n});\n","import React from \"react\";\n\nimport \"./ChangeIndicator.css\";\nimport { ChangeIndicatorProps } from \"./ChangeIndicatorProps\";\n\nexport default function ChangeIndicator(props: ChangeIndicatorProps) {\n  return (\n    <div className=\"ChangeIndicator\">\n      <span className=\"ChangeIndicatorDot\" data-state={props.state} />\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\n\nimport \"./Header.css\";\n\nimport { AppEditorHeaderProps } from \"./HeaderProps\";\nimport ResizeButton from \"../../components/ResizeButton/ResizeButton\";\nimport CloseButton from \"../../components/CloseButton/CloseButton\";\nimport NameInput from \"../../components/NameInput/NameInput\";\nimport ChangeIndicator from \"../../components/ChangeIndicator/ChangeIndicator\";\n\nexport default forwardRef((props: AppEditorHeaderProps, ref: any) => {\n  return (\n    <div className=\"AppEditorHeader\">\n      <NameInput\n        ref={ref}\n        defaultValue={props.defaultValue}\n        onChange={props.onChange}\n      />\n      <ChangeIndicator state={props.indicatorState} />\n      <ResizeButton maximized={props.maximized} onClick={props.onResize} />\n      <CloseButton onClick={props.onClose} />\n    </div>\n  );\n});\n","import { DraftHandleValue, EditorState, RichUtils } from \"draft-js\";\nimport utils from \"../../../../utils\";\n\nexport type UpdateEditorStateCallback = (editorState: EditorState) => void;\n\nexport enum EditorCommand {\n  \"BOLD\" = \"BOLD\",\n  \"ITALIC\" = \"ITALIC\",\n  \"UNDERLINE\" = \"UNDERLINE\",\n  \"STRIKETHROUGH\" = \"STRIKETHROUGH\",\n  \"SAVE\" = \"SAVE\",\n  \"UNDO\" = \"UNDO\",\n  \"REDO\" = \"REDO\",\n  \"CLEAR\" = \"CLEAR\"\n}\n\nexport function handleKeyCommands(\n  updateEditorState: UpdateEditorStateCallback\n) {\n  return (\n    command: EditorCommand,\n    editorState: EditorState\n  ): DraftHandleValue => {\n    switch (command) {\n      case EditorCommand.BOLD:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.BOLD)\n        );\n        return \"handled\";\n      case EditorCommand.ITALIC:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.ITALIC)\n        );\n        return \"handled\";\n      case EditorCommand.UNDERLINE:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.UNDERLINE)\n        );\n        return \"handled\";\n      case EditorCommand.STRIKETHROUGH:\n        updateEditorState(\n          RichUtils.toggleInlineStyle(editorState, EditorCommand.STRIKETHROUGH)\n        );\n        return \"handled\";\n      case EditorCommand.UNDO:\n        updateEditorState(EditorState.undo(editorState));\n        return \"handled\";\n      case EditorCommand.REDO:\n        updateEditorState(EditorState.redo(editorState));\n        return \"handled\";\n      case EditorCommand.SAVE:\n        return \"handled\";\n      case EditorCommand.CLEAR:\n        updateEditorState(utils.editor.clear(editorState));\n        return \"handled\";\n      default:\n        return \"not-handled\";\n    }\n  };\n}\n","import { getDefaultKeyBinding } from \"draft-js\";\nimport { EditorCommand } from \"./Commands\";\n\nexport interface IKeycodeMap {\n  [keyCode: number]: string;\n}\n\nexport const KeycodeMap: IKeycodeMap = {\n  9: \"tab\",\n  13: \"enter\",\n  27: \"esc\",\n  32: \"space\",\n  46: \"delete\",\n  66: \"b\",\n  67: \"c\",\n  73: \"i\",\n  83: \"s\",\n  85: \"u\",\n  87: \"y\",\n  97: \"z\",\n  113: \"f2\"\n};\n\nexport function keyBindingFunction(\n  event: React.KeyboardEvent<any>\n): string | null {\n  const isControlKey = event.ctrlKey;\n  const isShiftKey = event.shiftKey;\n  const keyCode = event.keyCode;\n  const key: string | undefined = KeycodeMap[keyCode];\n\n  if (isControlKey && key === \"b\") {\n    return EditorCommand.BOLD;\n  }\n\n  if (isControlKey && key === \"i\") {\n    return EditorCommand.ITALIC;\n  }\n\n  if (isControlKey && key === \"u\") {\n    return EditorCommand.UNDERLINE;\n  }\n\n  // Control + Shift + S has higher priority in actions than Control + S. (FizzBuzz issue)\n  if (isControlKey && isShiftKey && key === \"s\") {\n    return EditorCommand.STRIKETHROUGH;\n  }\n\n  if (isControlKey && key === \"s\") {\n    return EditorCommand.SAVE;\n  }\n\n  if (isControlKey && key === \"z\") {\n    return EditorCommand.UNDO;\n  }\n\n  if (isControlKey && key === \"y\") {\n    return EditorCommand.REDO;\n  }\n\n  if (isControlKey && isShiftKey && key === \"c\") {\n    return EditorCommand.CLEAR;\n  }\n\n  return getDefaultKeyBinding(event);\n}\n","import React from \"react\";\nimport { EditorControlButtonProps } from \"./EditorControlButtonProps\";\n\nimport \"./EditorControlButton.css\";\n\nexport function EditorControlButton(props: EditorControlButtonProps) {\n  function handleClickEvent(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.command);\n    }\n  }\n\n  return (\n    <button\n      className=\"EditorControlButton\"\n      title={props.title}\n      tabIndex={props.tabIndex}\n      onMouseDown={handleClickEvent}\n      data-active={props.active}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport {\n  MdFormatBold,\n  MdFormatItalic,\n  MdFormatUnderlined,\n  MdFormatStrikethrough,\n  MdFormatClear\n} from \"react-icons/md\";\n\nimport \"./EditorControls.css\";\n\nimport { EditorControlButton } from \"../EditorControlButton/EditorControlButton\";\nimport { EditorCommand } from \"../../layout/Editor/Commands\";\nimport { EditorControlsProps } from \"./EditorControlsProps\";\n\nexport default function EditorControls(props: EditorControlsProps) {\n  function handleControlButtonClick(\n    event: React.MouseEvent,\n    command: EditorCommand\n  ) {\n    event.preventDefault();\n\n    if (typeof props.onClick === \"function\") {\n      props.onClick(command);\n    }\n  }\n\n  return (\n    <div className=\"EditorControls\">\n      <EditorControlButton\n        command={EditorCommand.BOLD}\n        onClick={handleControlButtonClick}\n        title=\"Bold\"\n        active={Boolean(props.inlineStyles?.has(\"BOLD\"))}\n        tabIndex={-1}\n      >\n        <MdFormatBold />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.ITALIC}\n        onClick={handleControlButtonClick}\n        title=\"Italic\"\n        active={Boolean(props.inlineStyles?.has(\"ITALIC\"))}\n        tabIndex={-1}\n      >\n        <MdFormatItalic />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.UNDERLINE}\n        onClick={handleControlButtonClick}\n        title=\"Underline\"\n        active={Boolean(props.inlineStyles?.has(\"UNDERLINE\"))}\n        tabIndex={-1}\n      >\n        <MdFormatUnderlined />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.STRIKETHROUGH}\n        onClick={handleControlButtonClick}\n        title=\"Strikethrough\"\n        active={Boolean(props.inlineStyles?.has(\"STRIKETHROUGH\"))}\n        tabIndex={-1}\n      >\n        <MdFormatStrikethrough />\n      </EditorControlButton>\n      <EditorControlButton\n        command={EditorCommand.CLEAR}\n        onClick={handleControlButtonClick}\n        title=\"Clear formatting\"\n        active={false}\n        tabIndex={-1}\n      >\n        <MdFormatClear />\n      </EditorControlButton>\n    </div>\n  );\n}\n","import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef\n} from \"react\";\nimport {\n  EditorState,\n  Editor as DraftEditor,\n  convertToRaw,\n  convertFromRaw\n} from \"draft-js\";\n\nimport \"./Editor.css\";\n\nimport { EditorReference } from \"../../AppEditorReferences\";\nimport { keyBindingFunction } from \"./Shortcuts\";\nimport { handleKeyCommands, EditorCommand } from \"./Commands\";\nimport { EditorProps } from \"./EditorProps\";\nimport EditorControls from \"../../components/EditorControls/EditorControls\";\n\nexport default forwardRef((props: EditorProps, ref: any) => {\n  const [editorState, setEditorState] = useState(\n    props.rawContentState\n      ? EditorState.createWithContent(convertFromRaw(props.rawContentState))\n      : EditorState.createEmpty()\n  );\n\n  const draftEditorReference = useRef<DraftEditor>(null);\n\n  function updateEditorState(newEditorState: EditorState) {\n    setEditorState(newEditorState);\n\n    if (typeof props.onChange === \"function\") {\n      const equalContents = newEditorState\n        .getCurrentContent()\n        .getBlockMap()\n        .equals(editorState.getCurrentContent().getBlockMap());\n\n      if (!equalContents) {\n        props.onChange();\n      }\n    }\n  }\n\n  useImperativeHandle(\n    ref,\n    (): EditorReference => ({\n      getPlainText: () => editorState.getCurrentContent().getPlainText(),\n      getRawDraftContentState: () =>\n        convertToRaw(editorState.getCurrentContent()),\n      focusEditor,\n      blurEditor\n    })\n  );\n\n  function focusEditor(event?: React.MouseEvent) {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.focus();\n    }\n  }\n\n  function blurEditor() {\n    if (draftEditorReference.current) {\n      draftEditorReference.current.blur();\n    }\n  }\n\n  function getCurrentInlineStyle() {\n    return editorState.getCurrentInlineStyle();\n  }\n\n  function handleCommand(command: EditorCommand) {\n    handleKeyCommands(updateEditorState)(command, editorState);\n  }\n\n  return (\n    <div className=\"Editor\">\n      <EditorControls\n        inlineStyles={getCurrentInlineStyle()}\n        onClick={handleCommand}\n      />\n      <div className=\"EditorWrapper\" onMouseDown={focusEditor}>\n        <DraftEditor\n          ref={draftEditorReference}\n          editorState={editorState}\n          onChange={updateEditorState}\n          keyBindingFn={keyBindingFunction}\n          handleKeyCommand={handleKeyCommands(updateEditorState)}\n          spellCheck={props.spellCheck}\n        />\n      </div>\n    </div>\n  );\n});\n","export enum ChangeIndicatorState {\n  IDLE,\n  SAVED,\n  UNSAVED\n}\n\nexport interface ChangeIndicatorProps {\n  state: ChangeIndicatorState;\n}\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport \"./AppEditor.css\";\r\n\r\nimport { AppEditorProps } from \"./AppEditorProps\";\r\nimport { NameInputReference, EditorReference } from \"./AppEditorReferences\";\r\n\r\nimport AppEditorHeader from \"./layout/Header/Header\";\r\nimport Editor from \"./layout/Editor/Editor\";\r\nimport { ChangeIndicatorState } from \"./components/ChangeIndicator/ChangeIndicatorProps\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport utils from \"../../utils\";\r\nimport { KeycodeMap } from \"./layout/Editor/Shortcuts\";\r\n\r\nexport default function AppEditor(props: AppEditorProps) {\r\n  const [maximized, setMaximized] = useState(props.maximized);\r\n  const [indicatorState, setIndicatorState] = useState(\r\n    ChangeIndicatorState.IDLE\r\n  );\r\n\r\n  const nameInputReference = useRef<NameInputReference>();\r\n\r\n  const editorReference = useRef<EditorReference>();\r\n\r\n  const saveTimeoutReference = useRef<NodeJS.Timeout>();\r\n\r\n  function save() {\r\n    const record: NoteRecord = {\r\n      id: props.id || utils.string.generateRandom(),\r\n      parent: props.currentGroupID,\r\n      title: \"\",\r\n      content: { entityMap: {}, blocks: [] },\r\n      type: \"File\",\r\n      createdAt: Date.now()\r\n    };\r\n\r\n    if (nameInputReference.current) {\r\n      record.title = nameInputReference.current.getValue();\r\n    }\r\n\r\n    if (editorReference.current) {\r\n      record.content = editorReference.current.getRawDraftContentState();\r\n    }\r\n\r\n    if (typeof props.onSave === \"function\" && !props.id) {\r\n      props.onSave(props.currentGroupID, record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (typeof props.onUpdate === \"function\" && props.id) {\r\n      record.updatedAt = Date.now();\r\n      props.onUpdate(record);\r\n\r\n      if (props.saveAndClose && !props.autoSave) {\r\n        closeEditor();\r\n      } else {\r\n        setIndicatorState(ChangeIndicatorState.SAVED);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleCanvasKeyDown(event: React.KeyboardEvent<any>) {\r\n    const isControlKey = event.ctrlKey;\r\n    const isShiftKey = event.shiftKey;\r\n    const keyCode = event.keyCode;\r\n    const key = KeycodeMap[keyCode];\r\n\r\n    if (isControlKey && !isShiftKey && key === \"s\") {\r\n      event.preventDefault();\r\n\r\n      if (saveTimeoutReference.current) {\r\n        clearTimeout(saveTimeoutReference.current);\r\n      }\r\n\r\n      if (indicatorState === ChangeIndicatorState.UNSAVED) {\r\n        save();\r\n      }\r\n    }\r\n\r\n    if (key === \"esc\") {\r\n      event.preventDefault();\r\n\r\n      closeEditor();\r\n    }\r\n  }\r\n\r\n  function handleDetectedChange() {\r\n    setIndicatorState(ChangeIndicatorState.UNSAVED);\r\n\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (props.autoSave && Boolean(props.id)) {\r\n      saveTimeoutReference.current = setTimeout(() => {\r\n        save();\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  function closeEditor() {\r\n    if (saveTimeoutReference.current) {\r\n      clearTimeout(saveTimeoutReference.current);\r\n    }\r\n\r\n    if (typeof props.onClose === \"function\") {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AppEditor\">\r\n      <div className=\"AppEditorWrapper\" onKeyDown={handleCanvasKeyDown}>\r\n        <div className=\"AppEditorCanvas\" data-maximized={maximized}>\r\n          <AppEditorHeader\r\n            maximized={maximized}\r\n            ref={nameInputReference}\r\n            onClose={props.onClose}\r\n            onResize={setMaximized}\r\n            defaultValue={props.title}\r\n            indicatorState={indicatorState}\r\n            onChange={handleDetectedChange}\r\n          />\r\n          <Editor\r\n            ref={editorReference}\r\n            spellCheck={props.spellCheck}\r\n            onChange={handleDetectedChange}\r\n            rawContentState={props.content}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { connect, batch } from \"react-redux\";\r\n\r\nimport { AppEditorContainerProps } from \"./AppEditorProps\";\r\nimport AppEditor from \"./AppEditor\";\r\nimport { AppState, IDispatch } from \"../../redux/types\";\r\nimport { closeEditor, openEditor } from \"../../redux/editor/actions\";\r\nimport { NoteRecord } from \"../../redux/notes/records/types\";\r\nimport { NoteGroupID } from \"../../redux/notes/groups/types\";\r\nimport { createRecord, updateRecord } from \"../../redux/notes/actions\";\r\n\r\nfunction AppEditorContainer(props: AppEditorContainerProps) {\r\n  return (\r\n    <>\r\n      {props.open &&\r\n        createPortal(\r\n          <AppEditor {...props} />,\r\n          document.getElementById(\"app-editor-root\") as HTMLDivElement\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: AppState) {\r\n  const { editor, settings, notes } = state;\r\n  const { open, id } = editor;\r\n  const { editor: editorSettings } = settings;\r\n  const { currentGroupID, records } = notes;\r\n\r\n  let record;\r\n\r\n  if (id) {\r\n    record = records[id];\r\n  }\r\n\r\n  return {\r\n    open,\r\n    maximized: false,\r\n    autoSave: Boolean(editorSettings.autoSave),\r\n    saveAndClose: Boolean(editorSettings.saveAndClose),\r\n    spellCheck: Boolean(editorSettings.spellCheck),\r\n    currentGroupID,\r\n    ...record\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: IDispatch) {\r\n  return {\r\n    onClose: () => dispatch(closeEditor()),\r\n    onSave: (currentGroupID: NoteGroupID, record: NoteRecord) => {\r\n      batch(() => {\r\n        dispatch(createRecord(currentGroupID, record));\r\n        dispatch(openEditor(record.id));\r\n      });\r\n    },\r\n    onUpdate: (record: NoteRecord) => dispatch(updateRecord(record))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppEditorContainer);\r\n","import React from \"react\";\nimport { MdClose } from \"react-icons/md\";\n\nimport \"./OverlayHeader.css\";\n\nimport { OverlayHeaderProps } from \"./OverlayHeaderProps\";\n\nexport default function OverlayHeader(props: OverlayHeaderProps) {\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.id);\n    }\n  }\n\n  return (\n    <header className=\"OverlayHeader\">\n      <span className=\"OverlayHeaderTitle\">{props.title}</span>\n      <button\n        className=\"OverlayHeaderButton\"\n        onClick={close}\n        tabIndex={props.tabIndex}\n      >\n        <MdClose />\n      </button>\n    </header>\n  );\n}\n","import React from \"react\";\n\nimport \"./OverlayBody.css\";\n\nimport OverlayBodyProps from \"./OverlayBodyProps\";\n\nexport default function OverlayBody(props: OverlayBodyProps) {\n  return <div className=\"OverlayBody\">{props.children}</div>;\n}\n","import React from \"react\";\n\nimport \"./OverlayFooter.css\";\n\nimport OverlayFooterProps from \"./OverlayFooterProps\";\n\nexport default function OverlayFooter(props: OverlayFooterProps) {\n  return <footer className=\"OverlayFooter\">{props.children}</footer>;\n}\n","import React, { forwardRef } from \"react\";\n\nimport \"./FormInput.css\";\n\nexport default forwardRef((props: any, ref: any) => {\n  return (\n    <input\n      ref={ref}\n      type={props.type}\n      placeholder={props.placeholder}\n      className=\"FormInput\"\n      autoFocus={props.autoFocus}\n      defaultValue={props.defaultValue}\n      name={props.name}\n      autoComplete={props.autoComplete}\n    />\n  );\n});\n","import { OverlayType } from \"../../redux/overlays/types\";\n\n// Overlays\nimport DeleteRecordOverlay from \"./components/DeleteRecordOverlay/DeleteRecordOverlay\";\nimport RenameRecordOverlay from \"./components/RenameRecordOverlay/RenameRecordOverlay\";\nimport CreateGroupOverlay from \"./components/CreateGroupOverlay/CreateGroupOverlay\";\nimport RenameGroupOverlay from \"./components/RenameGroupOverlay/RenameGroupOverlay\";\n\nconst OverlayMap = new Map<OverlayType, React.FunctionComponent<any>>();\n\nOverlayMap.set(OverlayType.DELETE_RECORD, DeleteRecordOverlay);\nOverlayMap.set(OverlayType.RENAME_RECORD, RenameRecordOverlay);\nOverlayMap.set(OverlayType.CREATE_GROUP, CreateGroupOverlay);\nOverlayMap.set(OverlayType.RENAME_GROUP, RenameGroupOverlay);\n\nexport default OverlayMap;\n","import React from \"react\";\nimport { batch, useDispatch } from \"react-redux\";\n\nimport \"./DeleteRecordOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\n\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { removeRecord } from \"../../../../redux/notes/actions\";\n\nexport default function DeleteRecordOverlay(props: any) {\n  const dispatch = useDispatch();\n\n  function confirm() {\n    batch(() => {\n      dispatch(removeRecord(props.id));\n      dispatch(closeOverlay(props.overlayID));\n    });\n  }\n\n  return (\n    <div className=\"DeleteRecordOverlay\">\n      <OverlayHeader\n        id={props.overlayID}\n        onClose={props.onClose}\n        title=\"Delete Note\"\n      />\n      <OverlayBody>\n        <p>Are you sure you want to permanently delete this note?</p>\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={confirm}>Delete Note</button>\n        <button onClick={props.onClose}>Keep Note</button>\n      </OverlayFooter>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { batch, useDispatch, useSelector } from \"react-redux\";\n\nimport \"./RenameRecordOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\n\nimport { updateRecord } from \"../../../../redux/notes/actions\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\nimport FormInput from \"../../../UI/FormInput/FormInput\";\nimport { AppState } from \"../../../../redux/types\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\n\nexport default function RenameRecordOverlay(props: any) {\n  const dispatch = useDispatch();\n\n  const record = useSelector(\n    (state: AppState) => state.notes.records[props.id]\n  );\n\n  const titleReference = useRef<HTMLInputElement>(null);\n\n  function save() {\n    let title = record.title;\n\n    if (titleReference.current) {\n      title = titleReference.current.value;\n    }\n\n    const updatedRecord = { ...record, title };\n\n    batch(() => {\n      dispatch(updateRecord(updatedRecord));\n      dispatch(closeOverlay(props.overlayID));\n    });\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      event.preventDefault();\n\n      save();\n    }\n  }\n\n  return (\n    <div className=\"RenameRecordOverlay\" onKeyDown={handleKeyDown}>\n      <OverlayHeader\n        id={props.overlayID}\n        title=\"Rename Note\"\n        onClose={props.onClose}\n      ></OverlayHeader>\n      <OverlayBody>\n        <FormInput\n          ref={titleReference}\n          type=\"text\"\n          name=\"title\"\n          defaultValue={record.title}\n          autoFocus={true}\n          autoComplete=\"off\"\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={save}>Save</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\n\nimport \"./CreateGroupOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\nimport { NoteGroup } from \"../../../../redux/notes/groups/types\";\nimport utils from \"../../../../utils\";\nimport FormInput from \"../../../UI/FormInput/FormInput\";\nimport { createNewGroup } from \"../../../../redux/notes/actions\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { AppState } from \"../../../../redux/types\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\n\nexport default function CreateGroupOverlay(props: any) {\n  const dispatch = useDispatch();\n\n  const currentGroupID = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const currentGroup = useSelector(\n    (state: AppState) => state.notes.groups[currentGroupID]\n  );\n\n  const nameReference = useRef<HTMLInputElement>(null);\n\n  function create() {\n    const group: NoteGroup = {\n      id: utils.string.generateRandom(),\n      title: \"\",\n      children: [],\n      updatedAt: Date.now(),\n      type: \"Folder\",\n      path: currentGroup.path.concat(currentGroup.id)\n    };\n\n    if (nameReference.current) {\n      group.title = nameReference.current.value;\n    }\n\n    batch(() => {\n      dispatch(createNewGroup(currentGroupID, group));\n      dispatch(closeOverlay(props.overlayID));\n    });\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      event.preventDefault();\n\n      create();\n    }\n  }\n\n  return (\n    <div className=\"CreateGroupOverlay\" onKeyDown={handleKeyDown}>\n      <OverlayHeader\n        id={props.overlayID}\n        title=\"Create Group\"\n        onClose={props.onClose}\n      />\n      <OverlayBody>\n        <FormInput\n          ref={nameReference}\n          type=\"text\"\n          placeholder=\"Group name\"\n          autoFocus={true}\n          autoComplete=\"off\"\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={create}>Create Group</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\n\nimport \"./RenameGroupOverlay.css\";\n\nimport OverlayHeader from \"../../template/OverlayHeader/OverlayHeader\";\nimport OverlayBody from \"../../template/OverlayBody/OverlayBody\";\nimport OverlayFooter from \"../../template/OverlayFooter/OverlayFooter\";\n\nimport FormInput from \"../../../UI/FormInput/FormInput\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { AppState } from \"../../../../redux/types\";\nimport { updateGroup } from \"../../../../redux/notes/actions\";\nimport { closeOverlay } from \"../../../../redux/overlays/actions\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\n\nexport default function RenameGroupOverlay(props: any) {\n  const dispatch = useDispatch();\n\n  const group = useSelector((state: AppState) => state.notes.groups[props.id]);\n\n  const titleReference = useRef<HTMLInputElement>(null);\n\n  function save() {\n    let title = group.title;\n\n    if (titleReference.current) {\n      title = titleReference.current.value;\n    }\n\n    const updatedGroup = { ...group, title };\n\n    batch(() => {\n      dispatch(updateGroup(updatedGroup));\n      dispatch(closeOverlay(props.overlayID));\n    });\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      event.preventDefault();\n\n      save();\n    }\n  }\n\n  return (\n    <div className=\"RenameGroupOverlay\" onKeyDown={handleKeyDown}>\n      <OverlayHeader\n        id={props.overlayID}\n        title=\"Rename Group\"\n        onClose={props.onClose}\n      ></OverlayHeader>\n      <OverlayBody>\n        <FormInput\n          ref={titleReference}\n          type=\"text\"\n          name=\"title\"\n          defaultValue={group.title}\n          autoFocus={true}\n          autoComplete=\"off\"\n        />\n      </OverlayBody>\n      <OverlayFooter>\n        <button onClick={save}>Save</button>\n        <button onClick={props.onClose}>Cancel</button>\n      </OverlayFooter>\n    </div>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport utils from \"../../utils\";\nimport { KeycodeMap } from \"../AppEditor/layout/Editor/Shortcuts\";\n\nimport \"./Overlay.css\";\n\nexport default function Overlay(props: any) {\n  let overlayTabElements = useRef<any>([]);\n\n  useEffect(() => {\n    if (overlayTabElements.current) {\n      overlayTabElements.current = utils.dom.getTabbableElements(\n        props.overlayID\n      );\n    }\n\n    return () => {\n      if (overlayTabElements.current) {\n        overlayTabElements.current = [];\n      }\n    };\n  }, [props.overlayID]);\n\n  function close() {\n    if (typeof props.onClose === \"function\") {\n      props.onClose(props.overlayID);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<any>) {\n    const { keyCode, target } = event;\n    const isShiftKey = event.shiftKey;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"esc\") {\n      close();\n      return;\n    }\n\n    if (key === \"tab\" && isShiftKey) {\n      if (\n        overlayTabElements &&\n        target === utils.array.first(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.last(overlayTabElements.current).focus();\n      }\n\n      return;\n    }\n\n    if (key === \"tab\") {\n      if (\n        overlayTabElements &&\n        target === utils.array.last(overlayTabElements.current)\n      ) {\n        event.preventDefault();\n\n        utils.array.first(overlayTabElements.current).focus();\n      }\n    }\n  }\n\n  return (\n    <div id={props.overlayID} className=\"Overlay\" onKeyDown={handleKeyDown}>\n      {React.Children.map(props.children, (child: any) => {\n        return React.cloneElement(child, { ...child.props, onClose: close });\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\n\nimport \"./OverlayContainer.css\";\n\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport utils from \"../../utils\";\nimport OverlayMap from \"./OverlayMap\";\nimport Overlay from \"./Overlay\";\nimport { OverlayContainerProps } from \"./OverlayContainerProps\";\nimport { Overlay as IOverlay, OverlayID } from \"../../redux/overlays/types\";\nimport { closeOverlay } from \"../../redux/overlays/actions\";\n\nfunction OverlayContainer(props: OverlayContainerProps) {\n  return props.overlays.length\n    ? createPortal(\n        <div className=\"OverlayContainer react-no-print\">\n          {utils.array.mapReversed((overlay: IOverlay) => {\n            const OverlayComponent = OverlayMap.get(overlay.type);\n\n            if (OverlayComponent) {\n              return (\n                <Overlay\n                  key={overlay.overlayID}\n                  overlayID={overlay.overlayID}\n                  onClose={props.onClose}\n                >\n                  <OverlayComponent\n                    overlayID={overlay.overlayID}\n                    id={overlay.id}\n                    onClose={props.onClose}\n                  />\n                </Overlay>\n              );\n            }\n\n            return null;\n          }, props.overlays)}\n        </div>,\n        document.getElementById(\"app-overlays-root\") as HTMLDivElement\n      )\n    : null;\n}\n\nfunction mapStateToProps(state: AppState) {\n  return {\n    overlays: state.overlays\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    onClose: (overlayID: OverlayID) => dispatch(closeOverlay(overlayID))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OverlayContainer);\n","import React from \"react\";\n\nexport default function RecordPrint(props: any) {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: props.printHTML }}></div>\n    </div>\n  );\n}\n","import { NoteRecordID } from \"../notes/records/types\";\nimport { IDispatch, AppState } from \"../types\";\n\nexport function queuePrintRecords(ids: NoteRecordID[]) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    dispatch({\n      type: \"REPLACE\",\n      payload: ids\n    });\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState, IDispatch } from \"../../redux/types\";\nimport RecordPrint from \"./RecordPrint\";\nimport { createPortal } from \"react-dom\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { convertFromRaw } from \"draft-js\";\nimport { NoteRecordID } from \"../../redux/notes/records/types\";\nimport { queuePrintRecords } from \"../../redux/print/actions\";\n\nfunction RecordPrintContainer(props: any) {\n  useEffect(() => {\n    if (props.printHTML) {\n      if (document && window) {\n        const titleBeforePrinting = document.title;\n        document.title = \"Notebook\";\n        window.print();\n        document.title = titleBeforePrinting;\n      }\n\n      if (typeof props.clearPrintQueue === \"function\") {\n        props.clearPrintQueue();\n      }\n    }\n  }, [props, props.printHTML]);\n\n  return (\n    <>\n      {props.printHTML &&\n        createPortal(\n          <RecordPrint title={props.title} printHTML={props.printHTML} />,\n          document.getElementById(\"print-mount\")!\n        )}\n    </>\n  );\n}\n\nfunction mapStateToProps(state: AppState) {\n  const { print, notes } = state;\n  const { records } = notes;\n\n  const printHTML = print.reduce((html: string, id: NoteRecordID) => {\n    const record = records[id];\n\n    if (record) {\n      const title = `<h2>${record.title}</h2>`;\n      return html + title + stateToHTML(convertFromRaw(record.content));\n    }\n\n    return html;\n  }, \"\");\n\n  return {\n    printHTML\n  };\n}\n\nfunction mapDispatchToProps(dispatch: IDispatch) {\n  return {\n    clearPrintQueue: () => dispatch(queuePrintRecords([]))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecordPrintContainer);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { FaFolder } from \"react-icons/fa\";\n\nimport { GroupProps } from \"./GroupProps\";\nimport {\n  openGroup,\n  removeGroup,\n  ungroupGroup,\n  moveToGroup\n} from \"../../../../redux/notes/actions\";\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\nimport { OverlayType } from \"../../../../redux/overlays/types\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\n\nexport default function Group(props: GroupProps) {\n  const dispatch = useDispatch();\n\n  function open(event?: React.MouseEvent) {\n    dispatch(openGroup(props.id));\n  }\n\n  function rename(event?: React.MouseEvent) {\n    dispatch(showOverlay(OverlayType.RENAME_GROUP, { id: props.id }));\n  }\n\n  function remove(event?: React.MouseEvent) {\n    dispatch(removeGroup(props.id));\n  }\n\n  function ungroup(event?: React.MouseEvent) {\n    dispatch(ungroupGroup(props.id));\n  }\n\n  function allowDrop(event: React.DragEvent) {\n    event.preventDefault();\n  }\n\n  function dragStart(event: React.DragEvent) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        index: props.index,\n        id: props.id\n      })\n    );\n  }\n\n  function drop(event: React.DragEvent) {\n    event.preventDefault();\n\n    const data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\n    const floatingID = data && data.id;\n\n    if (floatingID && floatingID !== props.id) {\n      dispatch(moveToGroup(props.id, floatingID));\n    }\n  }\n\n  function handleClick(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      dispatch(openGroup(props.id));\n    }\n\n    if (key === \"f2\") {\n      dispatch(showOverlay(OverlayType.RENAME_GROUP, { id: props.id }));\n    }\n\n    if (key === \"delete\") {\n      dispatch(removeGroup(props.id));\n    }\n  }\n\n  function forwardDataToContextMenu() {\n    return { id: props.id, index: props.index, open, rename, remove, ungroup };\n  }\n\n  // @todo move to utility.\n  function timeConverter(UNIX_timestamp: number) {\n    const d = new Date(UNIX_timestamp);\n    const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n    const mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(d);\n    const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\n\n    let HH = hours % 12;\n    HH = HH ? HH : 12; // the hour '0' should be '12'\n    let MM = minutes < 10 ? \"0\" + minutes : minutes;\n\n    const strTime = HH + \":\" + MM + \" \" + ampm;\n\n    return `${da}/${mo}/${ye} ${strTime}`;\n  }\n\n  return (\n    <ContextMenuTrigger\n      id=\"group-menu\"\n      holdToDisplay={-1}\n      collect={forwardDataToContextMenu}\n      attributes={{\n        className: `VTRow ${props.selected ? \"selected\" : \"\"} ${\n          props.className\n        }`,\n        style: { ...props.style, width: props.getRowWidth() },\n        tabIndex: props.index,\n        onDoubleClick: open,\n        draggable: true,\n        onDragOver: allowDrop,\n        onDragStart: dragStart,\n        onDrop: drop,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown\n      }}\n    >\n      <div className=\"VTCell\" style={{ width: props.getColumnWidth(0) }}>\n        <div className=\"VTCellContent\">\n          <FaFolder className=\"VTCellIcon\" />\n          <span>{props.title}</span>\n        </div>\n      </div>\n      <div className=\"VTCell\" style={{ width: props.getColumnWidth(1) }}>\n        <span>{props.updatedAt ? timeConverter(props.updatedAt) : \"-\"}</span>\n      </div>\n      <div className=\"VTCell\" style={{ width: props.getColumnWidth(2) }}>\n        <span>{props.type}</span>\n      </div>\n    </ContextMenuTrigger>\n  );\n}\n","import React from \"react\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport { useDispatch } from \"react-redux\";\nimport { openEditor } from \"../../../../redux/editor/actions\";\nimport { queuePrintRecords } from \"../../../../redux/print/actions\";\nimport { showOverlay } from \"../../../../redux/overlays/actions\";\nimport { OverlayType } from \"../../../../redux/overlays/types\";\nimport { ungroupRecord } from \"../../../../redux/notes/actions\";\nimport { KeycodeMap } from \"../../../AppEditor/layout/Editor/Shortcuts\";\nimport { FaFileAlt } from \"react-icons/fa\";\n\nexport default function Record(props: any) {\n  const dispatch = useDispatch();\n\n  function open() {\n    dispatch(openEditor(props.id));\n  }\n\n  function print() {\n    dispatch(queuePrintRecords([props.id]));\n  }\n\n  function ungroup(event?: React.MouseEvent) {\n    dispatch(ungroupRecord(props.id));\n  }\n\n  function rename() {\n    dispatch(showOverlay(OverlayType.RENAME_RECORD, { id: props.id }));\n  }\n\n  function remove() {\n    dispatch(showOverlay(OverlayType.DELETE_RECORD, { id: props.id }));\n  }\n\n  function dragStart(event: React.DragEvent) {\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        index: props.index,\n        id: props.id\n      })\n    );\n  }\n\n  function handleClick(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event, props.id);\n    }\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent) {\n    event.preventDefault();\n    const { keyCode } = event;\n    const key = KeycodeMap[keyCode];\n\n    if (key === \"enter\") {\n      dispatch(openEditor(props.id));\n    }\n\n    if (key === \"delete\") {\n      remove();\n    }\n\n    if (key === \"f2\") {\n      rename();\n    }\n  }\n\n  function forwardDataToContextMenu() {\n    return {\n      id: props.id,\n      index: props.index,\n      open,\n      print,\n      ungroup,\n      rename,\n      remove\n    };\n  }\n\n  // @todo move to utility.\n  function timeConverter(UNIX_timestamp: number) {\n    const d = new Date(UNIX_timestamp);\n    const ye = new Intl.DateTimeFormat(\"en\", { year: \"numeric\" }).format(d);\n    const mo = new Intl.DateTimeFormat(\"en\", { month: \"short\" }).format(d);\n    const da = new Intl.DateTimeFormat(\"en\", { day: \"2-digit\" }).format(d);\n    const hours = d.getHours();\n    const minutes = d.getMinutes();\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\n\n    let HH = hours % 12;\n    HH = HH ? HH : 12; // the hour '0' should be '12'\n    let MM = minutes < 10 ? \"0\" + minutes : minutes;\n\n    const strTime = HH + \":\" + MM + \" \" + ampm;\n\n    return `${da}/${mo}/${ye} ${strTime}`;\n  }\n\n  return (\n    <ContextMenuTrigger\n      id=\"record-menu\"\n      holdToDisplay={-1}\n      collect={forwardDataToContextMenu}\n      attributes={{\n        className: `VTRow FileRow ${props.className}`,\n        style: { ...props.style, width: props.getRowWidth() },\n        tabIndex: props.index,\n        onDoubleClick: open,\n        draggable: true,\n        onDragStart: dragStart,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown\n      }}\n    >\n      <div\n        className=\"VTCell\"\n        style={{\n          width: props.getColumnWidth(0)\n        }}\n      >\n        <div className=\"VTCellContent\">\n          <FaFileAlt className=\"VTCellIcon\" />\n          <span>{props.title}</span>\n        </div>\n      </div>\n      <div\n        className=\"VTCell\"\n        style={{\n          width: props.getColumnWidth(1)\n        }}\n      >\n        <span>{props.updatedAt ? timeConverter(props.updatedAt) : \"-\"}</span>\n      </div>\n      <div\n        className=\"VTCell\"\n        style={{\n          width: props.getColumnWidth(2)\n        }}\n      >\n        <span>{props.type}</span>\n      </div>\n    </ContextMenuTrigger>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../../../redux/types\";\n\nimport \"./NoteRow.css\";\n\nimport Group from \"../Group/Group\";\nimport Record from \"../Record/Record\";\n\nexport default function NoteRow(props: any) {\n  const record = useSelector(\n    (state: AppState) => state.notes.records[props.id]\n  );\n\n  const group = useSelector((state: AppState) => state.notes.groups[props.id]);\n\n  if (record) {\n    return (\n      <Record\n        {...record}\n        className={props.className}\n        style={props.style}\n        index={props.index}\n        getRowWidth={props.getRowWidth}\n        getColumnWidth={props.getColumnWidth}\n      />\n    );\n  }\n\n  if (group) {\n    return (\n      <Group\n        {...group}\n        className={props.className}\n        style={props.style}\n        index={props.index}\n        getRowWidth={props.getRowWidth}\n        getColumnWidth={props.getColumnWidth}\n        selected={props.selected}\n        onClick={props.onClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"VTRow\" style={{ ...props.style, width: \"100%\" }}>\n      <div className=\"VTCell\" style={{ justifyContent: \"center\" }}>\n        This Folder is Empty.\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ItemCounter(props: any) {\n  return (\n    <span>\n      {props.length} {props.length === 1 ? \"Item\" : \"Items\"}\n    </span>\n  );\n}\n","import React from \"react\";\n\nimport \"./Ribbon.css\";\n\nimport ItemCounter from \"./components/ItemCounter/ItemCounter\";\n\nexport default function Ribbon(props: any) {\n  return (\n    <div className=\"Ribbon\">\n      <ItemCounter length={props.length} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { Table, Column } from \"react-vt-table\";\nimport { useSelector } from \"react-redux\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\n\nimport \"react-vt-table/dist/style.css\";\nimport \"./NotesTable.css\";\n\nimport { AppState } from \"../../redux/types\";\nimport NoteRow from \"./components/NoteRow/NoteRow\";\nimport Ribbon from \"./components/Ribbon/Ribbon\";\n\nexport default function NotesTable(props: any) {\n  const currentGroupId = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const children = useSelector(\n    (state: AppState) => state.notes.groups[currentGroupId].children\n  );\n\n  function rowRenderer(props: any) {\n    const { index, style, isScrolling } = props;\n    const { getRowWidth, getColumnWidth } = props.data.rowProps;\n\n    return (\n      <NoteRow\n        id={children[index]}\n        index={index}\n        style={style}\n        getRowWidth={getRowWidth}\n        getColumnWidth={getColumnWidth}\n        className={index % 2 ? \"VTRowEven\" : \"VTRowOdd\"}\n        isScrolling={isScrolling}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"NotesWrapper\">\n        <ContextMenuTrigger id=\"table-menu\" holdToDisplay={-1}>\n          <AutoSizer>\n            {({ width, height }) => (\n              <Table\n                data={children.length ? children : [\"empty\"]}\n                width={width}\n                height={height}\n                rowHeight={40}\n                headerHeight={40}\n                minColumnWidth={30}\n                rowRenderer={rowRenderer}\n                autoScroll={true}\n                listProps={{\n                  overscanCount: 20,\n                  useIsScrolling: true\n                }}\n              >\n                <Column label=\"Name\" width={240} />\n                <Column label=\"Last Modified\" width={200} />\n                <Column label=\"Type\" width={100} />\n              </Table>\n            )}\n          </AutoSizer>\n        </ContextMenuTrigger>\n      </div>\n      <Ribbon length={children.length} />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport \"./AsideButton.css\";\n\nexport default function AsideButton(props: any) {\n  function click(event: React.MouseEvent) {\n    if (typeof props.onClick === \"function\") {\n      props.onClick(event);\n    }\n  }\n\n  return (\n    <button\n      className=\"AsideButton\"\n      disabled={props.disabled}\n      onClick={click}\n      data-active={props.active}\n    >\n      {props.children || props.text}\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport \"./AsideDivider.css\";\n\nexport default function AsideDivider(props: any) {\n  return <hr className=\"AsideDivider\" />;\n}\n","import React from \"react\";\nimport AsideButton from \"../Button/AsideButton\";\nimport { MdHome } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../../redux/types\";\nimport { openGroup } from \"../../../../redux/notes/actions\";\n\nexport default function HomeButton(props: any) {\n  const dispatch = useDispatch();\n\n  const isHome = useSelector(\n    (state: AppState) => state.notes.currentGroupID === \"root\"\n  );\n\n  function goHome() {\n    dispatch(openGroup(\"root\"));\n  }\n\n  return (\n    <AsideButton active={isHome} onClick={goHome} className=\"AsideItem\">\n      <MdHome />\n      <span>Home</span>\n    </AsideButton>\n  );\n}\n","import React from \"react\";\nimport { FaTrash, FaStar, FaChevronDown } from \"react-icons/fa\";\n\nimport \"./Aside.css\";\n\nimport AsideButton from \"./components/Button/AsideButton\";\nimport AsideDivider from \"./components/Divider/AsideDivider\";\nimport HomeButton from \"./components/HomeButton/HomeButton\";\n\nexport default function Aside(props: any) {\n  return (\n    <div className=\"Aside\">\n      <h4 style={{ fontWeight: 300, padding: \"0 15px\", marginBottom: 20 }}>\n        Quick Access\n      </h4>\n      <HomeButton />\n      <AsideButton className=\"AsideItem\">\n        <FaTrash />\n        <span>Recycle</span>\n      </AsideButton>\n      <AsideDivider />\n      <AsideButton>\n        <FaStar />\n        <span>Favorites</span>\n        <FaChevronDown style={{ position: \"absolute\", right: 0 }} />\n      </AsideButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\nimport { useDispatch } from \"react-redux\";\n\nimport { showOverlay } from \"../../../redux/overlays/actions\";\nimport { OverlayType } from \"../../../redux/overlays/types\";\nimport { openEditor } from \"../../../redux/editor/actions\";\n\nexport default function TableMenu(props: any) {\n  const dispatch = useDispatch();\n\n  function createGroup(event: React.MouseEvent) {\n    event.preventDefault();\n\n    dispatch(showOverlay(OverlayType.CREATE_GROUP));\n  }\n\n  function createRecord(event: React.MouseEvent) {\n    event.preventDefault();\n\n    dispatch(openEditor());\n  }\n\n  return (\n    <ContextMenu id=\"table-menu\">\n      <MenuItem onClick={createGroup}>Create Folder</MenuItem>\n      <MenuItem onClick={createRecord}>Create File</MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../../redux/types\";\nimport utils from \"../../../utils\";\n\nexport default function FolderMenu(props: any) {\n  const currentGroupId = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const parentGroupID = useSelector((state: AppState) =>\n    utils.array.last(state.notes.groups[currentGroupId].path)\n  );\n\n  function open(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.open === \"function\") {\n      data.open();\n    }\n  }\n\n  function rename(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.rename === \"function\") {\n      data.rename();\n    }\n  }\n\n  function ungroup(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.ungroup === \"function\") {\n      data.ungroup();\n    }\n  }\n\n  function remove(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.remove === \"function\") {\n      data.remove();\n    }\n  }\n\n  return (\n    <ContextMenu id=\"group-menu\">\n      <MenuItem onClick={open}>Open</MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={true}>Copy</MenuItem>\n      <MenuItem disabled={true}>Cut</MenuItem>\n      <MenuItem onClick={rename}>Rename</MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(parentGroupID)} onClick={ungroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem onClick={remove}>Remove</MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../../redux/types\";\nimport utils from \"../../../utils\";\n\nexport default function FileMenu(props: any) {\n  const currentGroupId = useSelector(\n    (state: AppState) => state.notes.currentGroupID\n  );\n\n  const parentGroupID = useSelector((state: AppState) =>\n    utils.array.last(state.notes.groups[currentGroupId].path)\n  );\n\n  function open(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.open === \"function\") {\n      data.open();\n    }\n  }\n\n  function print(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.print === \"function\") {\n      data.print();\n    }\n  }\n\n  function rename(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.rename === \"function\") {\n      data.rename();\n    }\n  }\n\n  function ungroup(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.ungroup === \"function\") {\n      data.ungroup();\n    }\n  }\n\n  function remove(event: React.MouseEvent, data: any) {\n    event.preventDefault();\n\n    if (typeof data.remove === \"function\") {\n      data.remove();\n    }\n  }\n\n  return (\n    <ContextMenu id=\"record-menu\">\n      <MenuItem onClick={open}>Open</MenuItem>\n      <MenuItem onClick={print}>Print</MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={true}>Copy</MenuItem>\n      <MenuItem disabled={true}>Cut</MenuItem>\n      <MenuItem onClick={rename}>Rename</MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={!Boolean(parentGroupID)} onClick={ungroup}>\n        Ungroup\n      </MenuItem>\n      <MenuItem divider />\n      <MenuItem onClick={remove}>Remove</MenuItem>\n    </ContextMenu>\n  );\n}\n","import { NoteGroupID } from \"../notes/groups/types\";\n\nexport type TabState = {\n  currentTabIndex: number;\n  records: NoteGroupID[];\n};\n\nexport const DEFAULT_TAB_STATE = {\n  currentTabIndex: 0,\n  records: [\"root\"]\n};\n\nexport enum TabActions {\n  CREATE_TAB = \"Tabs/Actions/CREATE_TAB\",\n  OPEN_TAB = \"Tabs/Actions/OPEN_TAB\",\n  CLOSE_TAB = \"Tabs/Actions/CLOSE_TAB\",\n  REPLACE = \"Tabs/Actions/REPLACE\"\n}\n","import { IDispatch, AppState } from \"../types\";\nimport { TabActions } from \"./types\";\nimport { NoteGroupID } from \"../notes/groups/types\";\nimport utils from \"../../utils\";\n\nexport function createNewTab(id: NoteGroupID = \"root\") {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { tabs } = getState();\n\n    const records = tabs.records.concat(id);\n\n    dispatch({\n      type: TabActions.CREATE_TAB,\n      payload: {\n        currentTabIndex: records.length - 1,\n        records,\n        id\n      }\n    });\n  };\n}\n\nexport function openTab(index: number) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { tabs } = getState();\n\n    if (index < 0 || index >= tabs.records.length) {\n      throw Error(`Tab at index ${index} is absent.`);\n    }\n\n    dispatch({\n      type: TabActions.OPEN_TAB,\n      payload: {\n        currentTabIndex: index,\n        id: tabs.records[index]\n      }\n    });\n  };\n}\n\nexport function closeTab(index: number) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { tabs } = getState();\n\n    if (tabs.records.length < 2) {\n      throw Error(\"Cannot close last tab.\");\n    }\n\n    if (index < 0 || index >= tabs.records.length) {\n      throw Error(`Tab at index ${index} is absent.`);\n    }\n\n    let currentTabIndex = tabs.currentTabIndex;\n\n    if (currentTabIndex > index) {\n      currentTabIndex -= 1;\n    } else if (currentTabIndex === index) {\n      currentTabIndex = index - 1;\n\n      if (currentTabIndex < 0) {\n        currentTabIndex = 0;\n      }\n    }\n\n    const records = utils.array.removeAtIndex(index, tabs.records);\n    const id = records[currentTabIndex];\n\n    dispatch({\n      type: TabActions.CLOSE_TAB,\n      payload: {\n        currentTabIndex,\n        records,\n        id\n      }\n    });\n  };\n}\n\nexport function closeOtherTabs(index: number) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { tabs } = getState();\n\n    if (tabs.records.length < 2) {\n      throw Error(\"Cannot close last tab.\");\n    }\n\n    if (index < 0 || index >= tabs.records.length) {\n      throw Error(`Tab at index ${index} is absent.`);\n    }\n\n    const records = [tabs.records[index]];\n\n    dispatch({\n      type: TabActions.REPLACE,\n      payload: {\n        currentTabIndex: 0,\n        records,\n        id: records[0]\n      }\n    });\n  };\n}\n\nexport function closeTabsAfter(index: number) {\n  return async (dispatch: IDispatch, getState: () => AppState) => {\n    const { tabs } = getState();\n\n    if (tabs.records.length < 2) {\n      throw Error(\"Cannot close last tab.\");\n    }\n\n    if (index < 0 || index >= tabs.records.length) {\n      throw Error(`Tab at index ${index} is absent.`);\n    }\n\n    const records = tabs.records.slice(0, index + 1);\n\n    let currentTabIndex = tabs.currentTabIndex;\n\n    if (currentTabIndex > index) {\n      currentTabIndex = index;\n    }\n\n    const id = records[currentTabIndex];\n\n    dispatch({\n      type: TabActions.REPLACE,\n      payload: {\n        currentTabIndex,\n        records,\n        id\n      }\n    });\n  };\n}\n","import Tab from \"./Tab\";\n\nexport default Tab;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MdClose } from \"react-icons/md\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\n\nimport \"./Tab.css\";\n\nimport { AppState } from \"../../../../redux/types\";\nimport {\n  openTab,\n  closeTab,\n  closeOtherTabs,\n  createNewTab,\n  closeTabsAfter\n} from \"../../../../redux/tabs/actions\";\n\nexport default function Tab(props: any) {\n  const dispatch = useDispatch();\n\n  const folderId = useSelector(\n    (state: AppState) => state.tabs.records[props.index]\n  );\n\n  const title = useSelector(\n    (state: AppState) => state.notes.groups[folderId].title\n  );\n\n  const active = useSelector(\n    (state: AppState) => state.tabs.currentTabIndex === props.index\n  );\n\n  const length = useSelector((state: AppState) => state.tabs.records.length);\n\n  function open() {\n    console.log(\"Opening\");\n    dispatch(openTab(props.index));\n  }\n\n  function duplicate() {\n    dispatch(createNewTab(folderId));\n  }\n\n  function close(event?: React.MouseEvent) {\n    console.log(\"Closing\");\n    if (event) {\n      console.log(\"Stop propagating\");\n      event.stopPropagation();\n    }\n\n    if (length < 2) {\n      return;\n    }\n\n    dispatch(closeTab(props.index));\n  }\n\n  function closeOther() {\n    if (length < 2) {\n      return;\n    }\n\n    dispatch(closeOtherTabs(props.index));\n  }\n\n  function closeAfter() {\n    if (length < 2) {\n      return;\n    }\n\n    dispatch(closeTabsAfter(props.index));\n  }\n\n  function passDataToContextMenu() {\n    return { duplicate, close, closeOther, closeAfter };\n  }\n\n  return (\n    <ContextMenuTrigger\n      renderTag=\"button\"\n      id=\"tab-menu\"\n      holdToDisplay={-1}\n      attributes={{\n        className: `Tab ${active ? \"active\" : \"\"}`,\n        onClick: open,\n        title\n      }}\n      collect={passDataToContextMenu}\n    >\n      <span>{title}</span>\n      {length > 1 && (\n        <div\n          className=\"Button\"\n          onClick={close}\n          title=\"Close tab\"\n          aria-label=\"Close tab\"\n        >\n          <MdClose className=\"Icon\" aria-hidden=\"true\" />\n        </div>\n      )}\n    </ContextMenuTrigger>\n  );\n}\n","import NewTabButton from \"./NewTabButton\";\n\nexport default NewTabButton;\n","import React from \"react\";\nimport { FiPlus } from \"react-icons/fi\";\n\nimport Button from \"../../../UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { createNewTab } from \"../../../../redux/tabs/actions\";\n\nexport default function NewTabButton(props: any) {\n  const dispatch = useDispatch();\n\n  const label = \"Create new tab\";\n\n  function onClick() {\n    dispatch(createNewTab());\n  }\n\n  return (\n    <Button title={label} aria-label={label} onClick={onClick}>\n      <FiPlus />\n    </Button>\n  );\n}\n","import FolderTabs from \"./FolderTabs\";\n\nexport default FolderTabs;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./FolderTabs.css\";\n\nimport { AppState } from \"../../redux/types\";\nimport Tab from \"./components/Tab\";\nimport NewTabButton from \"./components/NewTabButton\";\n\nexport default function FolderTabs() {\n  const length = useSelector((state: AppState) => state.tabs.records.length);\n\n  return (\n    <div className=\"FolderTabs\">\n      {Array.from({ length }, (_: any, index: number) => {\n        return <Tab index={index} />;\n      })}\n      <NewTabButton />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewTab } from \"../../../redux/tabs/actions\";\nimport { AppState } from \"../../../redux/types\";\n\nexport default function TabMenu(props: any) {\n  const dispatch = useDispatch();\n\n  const length = useSelector((state: AppState) => state.tabs.records.length);\n\n  function newTab() {\n    dispatch(createNewTab());\n  }\n\n  function duplicate(event: React.MouseEvent, data: any) {\n    if (typeof data.duplicate === \"function\") {\n      data.duplicate();\n    }\n  }\n\n  function closeTab(event: React.MouseEvent, data: any) {\n    if (typeof data.close === \"function\") {\n      data.close();\n    }\n  }\n\n  function closeOtherTabs(event: React.MouseEvent, data: any) {\n    if (typeof data.closeOther === \"function\") {\n      data.closeOther();\n    }\n  }\n\n  function closeAfter(event: React.MouseEvent, data: any) {\n    if (typeof data.closeAfter === \"function\") {\n      data.closeAfter();\n    }\n  }\n\n  return (\n    <ContextMenu id=\"tab-menu\">\n      <MenuItem onClick={newTab}>New Tab</MenuItem>\n      <MenuItem onClick={duplicate}>Duplicate</MenuItem>\n      <MenuItem divider />\n      <MenuItem disabled={length < 2} onClick={closeTab}>\n        Close Tab\n      </MenuItem>\n      <MenuItem disabled={length < 2} onClick={closeOtherTabs}>\n        Close other tabs\n      </MenuItem>\n      <MenuItem disabled={length < 2} onClick={closeAfter}>\n        Close tabs to the right\n      </MenuItem>\n    </ContextMenu>\n  );\n}\n","import React from \"react\";\nimport { Container, Section, Bar } from \"react-simple-resizer\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport \"./App.css\";\n\nimport AppHeader from \"./components/AppHeader\";\nimport Navigator from \"./components/Navigator\";\nimport AppEditorContainer from \"./components/AppEditor\";\nimport OverlayContainer from \"./components/Overlay\";\nimport RecordPrintContainer from \"./components/RecordPrint\";\nimport NotesTable from \"./components/NotesTable/NotesTable\";\nimport Aside from \"./components/Aside/Aside\";\nimport TableMenu from \"./components/ContextMenu/TableMenu/TableMenu\";\nimport FolderMenu from \"./components/ContextMenu/FolderMenu/FolderMenu\";\nimport FileMenu from \"./components/ContextMenu/FileMenu/FileMenu\";\nimport FolderTabs from \"./components/FolderTabs\";\nimport TabMenu from \"./components/ContextMenu/TabMenu/TabMenu\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App react-no-print\">\n        <AppHeader />\n        <Navigator />\n        {/* Test component */}\n        <AppEditorContainer />\n        {/* Test component */}\n        {/* <SettingsDrawerContainer /> */}\n        {/* Test component */}\n        {/* <NotesContainer /> */}\n        <div className=\"AppPanel\">\n          <AutoSizer>\n            {({ width, height }) => (\n              <Container className=\"ResizeContainer\" style={{ width, height }}>\n                <Section\n                  className=\"ResizeSection\"\n                  defaultSize={300}\n                  maxSize={300}\n                >\n                  <Aside />\n                </Section>\n                <Bar size={5} className=\"ResizerBar\" />\n                <Section>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      height: \"100%\"\n                    }}\n                  >\n                    <NotesTable />\n                    <FolderTabs />\n                  </div>\n                </Section>\n              </Container>\n            )}\n          </AutoSizer>\n        </div>\n        <OverlayContainer />\n        <TableMenu />\n        <FolderMenu />\n        <FileMenu />\n        <TabMenu />\n      </div>\n      <RecordPrintContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import utils from \"../../../utils\";\n\nexport type NoteGroupID = string;\n\nexport interface NoteGroup {\n  id: NoteGroupID;\n  path: string[];\n  title: string;\n  type: string;\n  children: string[];\n\n  updatedAt?: number;\n}\n\nexport interface NotesGroups {\n  [id: string]: NoteGroup;\n}\n\nexport enum NotesGroupsActions {\n  REPLACE = \"Notes/Groups/Actions/REPLACE\",\n  REPLACE_ALL = \"Notes/Groups/Actions/REPLACE_ALL\"\n}\n\nexport const DEFAULT_NOTES_GROUPS_STATE: NotesGroups = ((): NotesGroups => {\n  const now = Date.now();\n\n  const groups: NotesGroups = {\n    root: {\n      id: \"root\",\n      path: [],\n      title: \"/\",\n      updatedAt: now,\n      type: \"Folder\",\n      children: [\"fakultet\"]\n    },\n    fakultet: {\n      id: \"fakultet\",\n      path: [\"root\"],\n      title: \"Fakultet\",\n      updatedAt: now,\n      type: \"Folder\",\n      children: [\"ostalo\"]\n    },\n    ostalo: {\n      id: \"ostalo\",\n      path: [\"root\", \"fakultet\"],\n      title: \"Ostalo\",\n      updatedAt: now,\n      type: \"Folder\",\n      children: [\"instruction\"]\n    }\n  };\n\n  for (let i = 0; i < 0; i++) {\n    const id = utils.string.generateRandom(6);\n\n    groups[id] = {\n      id,\n      path: [\"root\"],\n      title: id,\n      updatedAt: now,\n      type: \"Folder\",\n      children: []\n    };\n\n    groups.root.children.push(id);\n  }\n\n  return groups;\n})();\n","import { RawDraftContentState } from \"draft-js\";\nimport { NoteGroupID } from \"../groups/types\";\nimport instructionsContentState from \"../../../data/instructionsContentState\";\n\n/**\n * A `NoteRecord` unique identifier.\n */\nexport type NoteRecordID = string;\n\nexport type NoteRecord = {\n  id: NoteRecordID;\n  parent: NoteGroupID;\n  title: string;\n  content: RawDraftContentState;\n  type: string;\n  createdAt: number;\n\n  // Temporary typescript workaround.\n  children?: any;\n  updatedAt?: number;\n};\n\nexport type NotesRecords = {\n  [id: string]: NoteRecord;\n};\n\nexport const DEFAULT_RECORDS_STATE: NotesRecords = {\n  instruction: {\n    id: \"instruction\",\n    parent: \"ostalo\",\n    title: \"INSTRUCTIONS\",\n    content: instructionsContentState,\n    type: \"File\",\n    createdAt: Date.now(),\n    updatedAt: Date.now()\n  }\n};\n","import { RawDraftContentState } from \"draft-js\";\n\nexport default {\n  blocks: [\n    {\n      key: \"8ofdk\",\n      text: \"EDITOR\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 6,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"aemmj\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"35hd4\",\n      text: \"In order to save a note, use shortcut ctrl + s.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2dqfh\",\n      text: \"To close editor, you can simply use escape key. (ESC)\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 48,\n          length: 5,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"e5mv2\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"a71vr\",\n      text: \"Available shortcuts:\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"dhmf5\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"8jlev\",\n      text: \"1. ctrl + b - Bold\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 4,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"5ikho\",\n      text: \"2. ctrl + i  - Italic\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 15,\n          length: 6,\n          style: \"ITALIC\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"eacar\",\n      text: \"3. ctrl + u - Underline\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 14,\n          length: 9,\n          style: \"UNDERLINE\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"2h4vl\",\n      text: \"4. ctrl + shift + s - Strikethrough\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 22,\n          length: 13,\n          style: \"STRIKETHROUGH\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cefcc\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"alrtq\",\n      text: \"NOTES\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 0,\n          length: 5,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cgvgp\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"1jo4c\",\n      text:\n        \"- To move a note or a group into the another group, simply drag that note over the target group and drop.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"bqsbk\",\n      text: \"\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [],\n      entityRanges: [],\n      data: {}\n    },\n    {\n      key: \"cvojm\",\n      text:\n        \"- To ungroup certain note or group from current group, use right click > ungroup option.\",\n      type: \"unstyled\",\n      depth: 0,\n      inlineStyleRanges: [\n        {\n          offset: 59,\n          length: 11,\n          style: \"BOLD\"\n        },\n        {\n          offset: 73,\n          length: 8,\n          style: \"BOLD\"\n        }\n      ],\n      entityRanges: [],\n      data: {}\n    }\n  ],\n  entityMap: {}\n} as RawDraftContentState;\n","import { combineReducers } from \"redux\";\n\nimport recordsReducer from \"./records/reducer\";\nimport groupsReducer from \"./groups/reducer\";\nimport groupReducer from \"./group/reducer\";\n\nexport default combineReducers({\n  currentGroupID: groupReducer,\n  groups: groupsReducer,\n  records: recordsReducer\n});\n","import { NoteGroupID } from \"../groups/types\";\nimport { NotesActions } from \"../types\";\nimport { TabActions } from \"../../tabs/types\";\n\nexport default function groupReducer(state: NoteGroupID = \"root\", action: any) {\n  switch (action.type) {\n    case NotesActions.OPEN_GROUP:\n      return action.payload;\n    case TabActions.CREATE_TAB:\n      return action.payload.id;\n    case TabActions.OPEN_TAB:\n      return action.payload.id;\n    case TabActions.CLOSE_TAB:\n      return action.payload.id;\n    default:\n      return state;\n  }\n}\n","import { NotesGroups, DEFAULT_NOTES_GROUPS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function groupsReducer(\n  state: NotesGroups = DEFAULT_NOTES_GROUPS_STATE,\n  action: any\n) {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.concat(\n            action.payload.id\n          )\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.CREATE_GROUP:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.UPDATE_GROUP:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_GROUP:\n      return {\n        ...utils.object.deleteProperty(action.payload.id, state),\n        [action.payload.parentGroupId]: {\n          ...state[action.payload.parentGroupId],\n          children: state[action.payload.parentGroupId].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.MOVE_GROUP:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parentGroupID]: {\n          ...state[action.payload.parentGroupID],\n          children: state[action.payload.parentGroupID].children.filter(\n            id => id !== action.payload.id\n          )\n        },\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          path: action.payload.path\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.targetGroupID]: {\n          ...state[action.payload.targetGroupID],\n          children: state[action.payload.targetGroupID].children.concat(\n            action.payload.id\n          )\n        },\n        [action.payload.parent]: {\n          ...state[action.payload.parent],\n          children: state[action.payload.parent].children.filter(\n            id => id !== action.payload.id\n          )\n        }\n      };\n    case NotesActions.REORDER:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { NotesRecords, DEFAULT_RECORDS_STATE } from \"./types\";\nimport { NotesActions } from \"../types\";\nimport utils from \"../../../utils\";\n\nexport default function recordsReducer(\n  state: NotesRecords = DEFAULT_RECORDS_STATE,\n  action: any\n): NotesRecords {\n  switch (action.type) {\n    case NotesActions.CREATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...action.payload\n        }\n      };\n    case NotesActions.REMOVE_RECORD:\n      return utils.object.deleteProperty(action.payload.id, state);\n    case NotesActions.UPDATE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      };\n    case NotesActions.MOVE_RECORD:\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          parent: action.payload.targetGroupID\n        }\n      };\n    default:\n      return state;\n  }\n}\n","export type EditorSettingsState = {\n  autoSave?: boolean;\n  saveAndClose?: boolean;\n  spellCheck?: boolean;\n};\n\nexport const EditorSettingsDefaultState: EditorSettingsState = {\n  autoSave: true,\n  saveAndClose: false,\n  spellCheck: false\n};\n\nexport enum EditorSettingsActions {\n  REPLACE = \"Settings/Editor/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Editor/Actions/REPLACE_ALL\"\n}\n","export type NotesSettingState = {\n  softDelete: boolean;\n};\n\nexport const NotesSettingsDefaultState = {\n  softDelete: true\n};\n\nexport enum NotesSettingsActions {\n  REPLACE = \"Settings/Notes/Actions/REPLACE\",\n  REPLACE_ALL = \"Settings/Notes/Actions/REPLACE_ALL\"\n}\n","import { combineReducers } from \"redux\";\nimport editorSettingsReducer from \"./editor/reducer\";\nimport notesSettingsReducer from \"./notes/reducer\";\n\nexport default combineReducers({\n  editor: editorSettingsReducer,\n  notes: notesSettingsReducer\n});\n","import {\n  EditorSettingsState,\n  EditorSettingsDefaultState,\n  EditorSettingsActions\n} from \"./types\";\n\nexport default function editorSettingsReducer(\n  state: EditorSettingsState = EditorSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case EditorSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case EditorSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import {\n  NotesSettingState,\n  NotesSettingsDefaultState,\n  NotesSettingsActions\n} from \"./types\";\n\nexport default function notesSettingsReducer(\n  state: NotesSettingState = NotesSettingsDefaultState,\n  action: any\n) {\n  switch (action.type) {\n    case NotesSettingsActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NotesSettingsActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport notesReducers from \"./notes/reducers\";\nimport editorReducer from \"./editor/reducer\";\nimport settingsReducers from \"./settings/reducers\";\nimport overlaysReducer from \"./overlays/reducer\";\nimport printReducer from \"./print/reducer\";\nimport tabReducer from \"./tabs/reducer\";\n\nexport default combineReducers({\n  notes: notesReducers,\n  tabs: tabReducer,\n  editor: editorReducer,\n  settings: settingsReducers,\n  overlays: overlaysReducer,\n  print: printReducer\n});\n","import { TabState, TabActions, DEFAULT_TAB_STATE } from \"./types\";\nimport { NotesActions } from \"../notes/types\";\nimport utils from \"../../utils\";\n\nexport default function tabReducer(\n  state: TabState = DEFAULT_TAB_STATE,\n  action: any\n) {\n  switch (action.type) {\n    case TabActions.CREATE_TAB:\n      return {\n        currentTabIndex: action.payload.currentTabIndex,\n        records: action.payload.records\n      };\n    case TabActions.OPEN_TAB:\n      return {\n        ...state,\n        currentTabIndex: action.payload.currentTabIndex\n      };\n    case TabActions.CLOSE_TAB:\n      return {\n        currentTabIndex: action.payload.currentTabIndex,\n        records: action.payload.records\n      };\n    case TabActions.REPLACE:\n      return {\n        currentTabIndex: action.payload.currentTabIndex,\n        records: action.payload.records.slice()\n      };\n    case NotesActions.OPEN_GROUP:\n      return {\n        ...state,\n        records: utils.array.replaceAtIndex(\n          state.currentTabIndex,\n          state.records,\n          action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  NoteEditorState,\n  NoteEditorDefaultState,\n  NoteEditorStateActions\n} from \"./types\";\n\nexport default function editorReducer(\n  state: NoteEditorState = NoteEditorDefaultState,\n  action: any\n): NoteEditorState {\n  switch (action.type) {\n    case NoteEditorStateActions.REPLACE:\n      return { ...state, ...action.payload };\n    case NoteEditorStateActions.REPLACE_ALL:\n      return { ...action.payload };\n    default:\n      return state;\n  }\n}\n","import { OverlaysActions, OverlayState } from \"./types\";\n\nexport default function overlaysReducer(state: OverlayState = [], action: any) {\n  switch (action.type) {\n    case OverlaysActions.OPEN_OVERLAY:\n      return [...state, action.payload];\n    case OverlaysActions.CLOSE_OVERLAY:\n      return state.filter(({ overlayID }) => overlayID !== action.payload);\n    default:\n      return state;\n  }\n}\n","import { PrintState } from \"./types\";\n\nexport default function printReducer(state: PrintState = [], action: any) {\n  switch (action.type) {\n    case \"REPLACE\":\n      return [...action.payload.slice()];\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport appReducers from \"./reducers\";\n\nconst middlewares = [thunk];\n\nexport default createStore(\n  appReducers,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport \"./print.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLDivElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}